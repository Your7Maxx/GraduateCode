find Path -type d ! -perm -Permission
find Path -type d -name Regex -execdir tar -c -v -f File File \;
find Path -user Regex
find Path -name Regex -delete
find Path -name Regex
date -u -d @1267619929
find Path -group Regex
find Path -type d -exec chmod Permission {} +
find Path -type f -print0
xargs -r -0 -I {} grep -F Regex {}
find Path -name Regex
xargs -I {} grep -r Regex {}
find Path Path Path Path
find Path -type f -name Regex
zcat Regex
grep -i Regex
zcat Regex
head -n Quantity
fold File
wc -l
find Path -print0
xargs -0 -I {} echo {}
find Path -type d -name Regex -exec rsync -a -v -R {} File \; -exec rm -r -f File \;
cd $( find Path -name Regex
xargs -I {} dirname {} )
set
grep Regex
read -r -p $( echo Regex ) Regex
tree Directory
kill -s Regex Regex
date '+%Y' --date Regex
find Path -mmin -Quantity
find Path -type f -exec bzip2 {} \;
find Path -name Regex -type f -exec wc -l File \;
find Path -type c
find Path -name Regex -prune -or -print
read -e -p Regex Regex
find Path -nouser -exec rm File \;
who
wc -l
ls -t -p
grep -v Regex
tail -n +Quantity
xargs -I {} rm -- {}
find Path -name Regex -exec grep Regex {} \;
find Path -type f ! -perm Permission
head
read -p Regex Regex
ls -t -p
grep -v Regex
tail -n +Quantity
xargs -d Regex -I {} rm -- {}
df -H --total File
history
sed Program
find Path -xdev -print0
chown Regex File -R
find Path -depth -name Regex -exec rm -f -r {} \;
who
cut -d Regex -f Number
sort
uniq
watch -n Quantity ps -C java -o pcpu,state,cputime,etimes
find Path -name Regex -exec grep -r Regex {} \;
find Path -type f -name Regex
head - Quantity
date --date Regex '+%a'
find Path -mtime -Timespan
find Path -name Regex -execdir diff -u {} File \;
ln -s File Regex
find Path
xargs -I {} grep Regex {}
find Path -maxdepth Quantity -mindepth Quantity -type d -printf '%f\n'
seq Number
xargs -I {} echo {}
chown Regex -R File
find Path -name Regex
find Path -name Regex -exec grep -H Regex {} \;
who -b
find Path -name Regex -exec chmod Permission {} \;
find Path -type f -iname Regex -exec ls -l -r -t {} \;
awk -F Regex Program
find Path -maxdepth Quantity -name Regex
tail
cut -d Regex -f Number File
xargs -n Quantity -I {} dirname {}
find Path -regex Regex
find Path -exec echo {} +
head -c Quantity File
tr Regex Regex
find Path -name Regex
xargs -I {} rm {}
mv $( ls ) File
find Path -type f -size +Size -print0
xargs -0 -I {} rm {}
find Path -type f
sed -e Program
sed -e Program
sort
uniq -c
sort -r -n
read -N Quantity Regex
sort -n File
find Path -type f -exec chmod Permission {} +
find Path
grep -v Regex
sort
find Path -perm -Permission -type f -exec ls -l {} \;
ls -d File
find Path -name Regex -type f -print0
xargs -0 -I {} cp -u -t File {}
shopt -s nocaseglob
pushd
find Path -size +Size -size -Size
find Path -type d -exec chmod Permission {} +
find Path -type f -print0
xargs -0 -n Quantity -I {} md5sum {}
sort -k Number
uniq -w Quantity -d --all-repeated separate
sed -e Program
find Path -name Regex -ls
find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} +
readlink -e -v File
find Path -maxdepth Quantity -type f -iname Regex -printf ".\n"
wc -l
find Path -iname Regex -type f -exec sed Program -i Regex {} \; -exec rm File \;
mkdir -p Directory
find Path -name Regex
w
tr -s Regex
cut -d Regex -f Number
tail -n +Quantity
find Path -mtime Timespan
find Path -maxdepth Quantity -name Regex -maxdepth Quantity
xargs -n Quantity -I {} rm {}
find Path -name Regex
find Path -name Regex
find Path -name Regex -exec grep -I -w Regex {} +
grep -E -v Regex
find Path -name Regex
find Path -name Regex
find Path -name Regex -exec sed -i Program {} +
rsync -a -v -z -r -u --delete-excluded File File
find Path -iname Regex -print
find Path -name Regex -exec mv -t Directory {} +
find Path -cmin Quantity -print
which Regex
file -b -i File
find Path \( -name Regex -or -name Regex \) -type f -ls
sed -z Program
find Path -name Regex -exec rm -r -f {} \;
tac File
awk Program
chown $( whoami ) File
find Path -iname Regex
find Path -type d -exec chmod Permission {} \;
echo Regex
grep -E -o Regex
find Path Path
find Path -path Regex -prune -or -iname Regex -print
echo Regex
grep -o -E Regex
cut -c Number
rev
cut -c Number
rev
echo $( seq Number Number )
crontab -l
awk Program
ssh -f Regex -L Regex -N
find Path -mtime +Timespan
ifconfig Regex
awk Program
find Path -name Regex -exec grep -i Regex {} \;
find Path -type f -iname Regex -exec chmod Permission {} \;
find Path -type d -size Size -print
xargs -I {} rmdir {}
awk Program Program
split -d -a Quantity -l Quantity File Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -exec grep Regex {} +
cat File
rev
cut -d Regex -f -Number
rev
find Path -type f -exec grep Regex File {} \;
wc --bytes
history
awk Program
find Path -path Regex -type f
xargs -I {} grep -l Regex {}
find Path
grep -E Regex
od -A n -t d -N File File
find -L Path -maxdepth Quantity -type l
false
find Path -type f -ls
rmdir --ignore-fail-on-non-empty Directory
mkdir Directory
mkdir -p Directory
find Path -amin -Quantity
find Path -name Regex -print
find Path -type f -printf "f %s %p\n"
find Path -maxdepth Quantity -type f ! -name Regex -exec gzip {} \;
dirname -- Regex
find Path -type f -iname Regex -printf '%h\n'
sort
uniq
xargs -n Quantity -d Regex -I {} echo Regex Regex Regex
find Path -maxdepth Quantity -type f
chown Regex File -R
find Path -mmin Quantity -print
find Path -mindepth Quantity -maxdepth Quantity -type d
grep Regex
tr Regex Regex
xargs -0 -I {} ln -s -t Directory {}
find Path \( -name Regex -or -name Regex -or -size +Size \)
dig Regex Regex SRV
find Path -exec echo {} +
rsync -a -v -e File File File
find Path -exec grep Regex {} \;
find Path -mindepth Quantity -exec mv {} --target-directory Directory \;
rsync -r -v -z -e ssh -p Regex --progress File File
find Path
find Path -type l
find Path -fstype nfs -print
rsync File File
find Path -size +Size -ls
find Path -name Regex
xargs -I {} cat {}
wc -l
find Path -type d -name Regex
find Path -type d -print0
find Path ! \( -name Regex -or -name Regex \)
chown $( whoami ) File -R
find Path -exec grep -q Regex {} \; -print
find Path -name Regex -exec grep Regex {} \;
find Path -type f
xargs -I {} ls -l -t -r {}
tail -n Quantity
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -exec echo Regex Regex {} Regex \;
find Path -type d -name Regex -print0
xargs -0 -I {} rm -r -f {}
ps -e -f
rsync -a -v -R File File
comm -1 -2 <( sort File ) <( sort File )
wc -l
date hostname echo Regex
sed Program
tr Regex Regex
find Path -type f -mtime +Timespan -print0
xargs -0 -I {} rm {}
seq Number
xargs -P Quantity -I {} echo {}
find Path -type f -exec grep Regex {} \;
cat File
tail -n +Quantity
split --lines Quantity
find Path -name Regex -prune -or -type f
jobs -p
awk Program
grep -E -o Regex File
tr Regex Regex
find Path -type d -name Regex -prune -or -print
source $( dirname Regex )
find Path -name Regex -exec grep Regex {} \; -print
echo Regex
rev
cut -d Regex -f Number
rev
join -1 Regex -2 Regex -a Quantity <( cat -n File
sort -k Number ) <( sort File )
sort -k Number
cut --complement -d Regex -f Number
find Path -name Regex -print -exec grep Regex {} \;
rsync -a -q -z File File
find Path -name Regex -exec grep -r Regex {} \;
cat File
grep -i Regex
more
hostname -I
awk Program
find Path -mindepth Quantity -printf "%T@ %P\n"
sort -n -r
cut -d Regex -f Number
tail -n +Quantity
read -s -N Quantity Regex
du -h --max-depth Quantity File
sort -n -r
gzip -d -c Regex
grep -P --regexp Regex
split -d -l Quantity File Regex
cat -n File
less
find Path -maxdepth Quantity -not -iname Regex
ls -a -l -F -t $( find Path -name Regex )
rev
cut -d Regex -f Number
rev
head - Quantity
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -mmin Quantity
find Path -type f -print
grep -E -i Regex
find Path -name Regex
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -name Regex
zcat Regex
sed -n Program
mktemp -d
find Path \( -name Regex -and \( -name Regex -or -name Regex \) \) -delete
find Path -name Regex -or -name Regex
fold -w Quantity File
find Path -type d -name Regex
xargs -n Quantity -I {} cp File {}
find Path -maxdepth Quantity -type d -iname Regex -exec cp -r {} File \;
find Path -type f -iname Regex -daystart -mtime Timespan -exec cp {} File File \;
find Path -name Regex
find Path -depth -name Regex -prune -or -print0
cpio -0 -p -d -v --quiet Regex
mkdir Directory
find Path -type f -iname Regex ! -path Regex -or -iname Regex ! -path Regex
find Path -type d -name Regex
sort -r
find Path -ctime -Timespan
cpio -p -v -d -m Regex
find Path -type f -mmin -Quantity
find Path -name Regex -exec rm {} \;
find Path -mtime +Timespan -mtime -Timespan
find Path -type f -ctime -Timespan
tail -n Quantity
find Path -name Regex -type f -daystart -mtime +Timespan
xargs -I {} rm -f {}
chmod +Permission $( which Regex )
ssh -f Regex -L Regex -N
find Path -name Regex -type f
cat File
tail -n +Quantity
split --lines Quantity
echo Regex
basename Regex
find Path -type f -atime -Timespan
find Path -name Regex
xargs -I {} rm {}
echo Regex
cut -d Regex -f Number
find Path -ctime -Timespan -print
find Path -path Regex -print
find Path -maxdepth Quantity -type f -regex Regex -not -name Regex
find Path -name Regex
xargs -I {} grep -E Regex {}
tr -c -s Regex
cd $( dirname Regex )
find Path -name Regex -exec rename Regex Regex \;
find Path -type f -exec chmod Permission {} + -or -type d -exec chmod Permission {} +
find Path -type d -perm Permission -print -exec chmod Permission {} \;
find Path -type f
sed -e Program
sort
uniq
find Path -name Regex -execdir diff -u {} File \;
find Path -type f -mtime +Timespan
find Path -empty -delete -print
ifconfig
grep Regex
find Path -name Regex
find Path -type f -exec ls -a -l {} \;
sort -n -r -k Number
head -n Quantity
find Path -type f -name Regex -exec rm {} \;
find Path -type f ! -perm Permission
find Path -name Regex -print
xargs -I {} rm {}
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -type f -exec chmod Permission {} \;
su -l Regex
grep Regex File
wc -l
find Path -group Regex -print
xargs -I {} chown Regex {}
du -a
basename $( echo Regex
tr Regex Regex )
find Path -type f -printf '%T@ %p\n'
sort -n -r
head - Quantity
cut -f Number -d Regex
sed -e Program
xargs -I {} ls -U -l {}
cat File
more
find Path -name Regex -delete
find Path -name Regex
read Regex
find Path -size +Size
split -n Quantity File
sort --merge File
split -l Quantity File Regex
find Path -name Regex -and -size +Size
ssh -p Regex Regex
find
wc -l
mkdir -p Directory
mktemp -p Directory -d Regex
rsync -a -v --ignore-existing File File
find Path -type f -name Regex -exec ls -l {} \;
find Path -name Regex -print0
find Path -print -name Regex -prune
mkdir Directory
cat File
sort --unique
wc -l
find Path -type l -name Regex -ls
readlink -m File
find Path -depth -name Regex -exec rm -r -f {} \;
find Path -type f -name Regex
find Path -mtime Timespan -exec du -k -s {} \;
cut -f Number
read -p Regex
echo -e $( echo -n -e Regex
wc -m )
find Path -name Regex -exec grep Regex File {} +
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
ping -c Quantity -b Regex
sed -n Program
sort
uniq
seq Number Number
awk Program
find Path -type f -name Regex
find Path -iname Regex
xargs -I {} grep Regex {}
find Path -print
xargs -I {} ls {}
find Path -size +Size -ls
find Path -type l -xtype l
dig -x Regex
awk Program
find Path -newer File -user Regex -print
comm -2 -3 <( find Path -type f
sed Program
sort ) <( find Path -type f
sed Program
sort )
sed Program
find Path -name Regex
xargs -I {} grep -v -c Regex {}
awk Program
find Path -type f -name Regex
mkdir Directory Directory Directory Directory Directory
cat -v File
find Path -name Regex -exec cp -a {} File \;
find Path -name Regex -print0
xargs -0 -I {} cp {} File
find Path -type f -print0
xargs -0 -I {} grep -c -H Regex {}
awk -F Regex Program
find Path -exec grep Regex {} \;
find Path -inum Quantity -exec ls -l {} \;
du -c -s -x -b File
md5sum -c File
find Path -name Regex
find Path -type f -exec sed -i Program {} \;
mktemp -t Regex
find Path -type f -print0
tr Regex Regex
find Path -type f -iname Regex -ls
find Path -type f -iname Regex -exec grep -s Regex {} \;
find Path -type f
xargs -I {} grep Regex {}
cat File
xargs -n Quantity -I {} cp File {}
find Path -type f -exec chmod Permission {} \;
find Path -mindepth Quantity -delete
find Path -type d -mindepth Quantity -print0
tail -f Regex
grep --line-buffered Regex
grep Regex
find Path -mtime +Timespan
xargs -I {} tar -c -z -v -P -f $( date +%F ) {}
find Path -type f -name Regex
find Path -size +Size
echo Regex
md5sum
find Path -user Regex
head
find Path -type f -print0
xargs -0 -I {} grep -I -Z -l Regex {}
xargs -0 -I {} grep Regex {}
echo Regex
rev
cut -c Number
rev
find Path -name Regex -print0
xargs -0 -I {} grep -H Regex {}
date -d Regex
find Path -type d -exec chmod Permission {} \;
find Path -type f -name Regex
cut -c Number
nl
find Path -type f -name Regex -size +Size -exec rm -i {} \;
find Path -type d -iname Regex -ls
find Path -name Regex
grep -v Regex
grep -v Regex
grep -v Regex
find Path -daystart -atime Timespan
find Path -name Regex
xargs -I {} grep -E Regex {}
ls
xargs -I {} mv {} File
join -1 Regex -2 Regex -t Regex File File
mv File File
rmdir $( dirname $( dirname Regex ) )
cd $( find Path -name Regex
xargs -I {} dirname {} )
shopt -s extglob progcomp
echo $( pwd )
$( date "+%s:%N" )
find Path -type f -exec grep Regex {} \;
date --date Regex +"%d"
mkdir Directory
find Path -name Regex -type d
rename Regex
echo $( date )
mkdir Directory
find Path -name Regex
xargs -i -I {} rm -r -f {} {}
cat File
tr -s Regex
cut -d Regex -f Number
split --help
find Path ! \( -name Regex -or -name Regex \) {} Path -print
find Path -type f -name Regex
find Path -xdev -type f -size +Size -name Regex -exec gzip -v {} \;
find Path -name Regex
find Path -depth -type d
sed Program
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
cat File
paste -d Regex File File
readlink -f File
cut -d Regex -f Number File
paste -d Regex -s
find Path -name Regex -exec ls {} \;
find Path -type d -maxdepth Quantity -empty -delete
mkdir -p Directory
find Path -mmin -Quantity
find Path ! -name Regex
grep Regex
find Path -perm Permission
head
readlink -f $( which Regex )
set -- $( cal DateTime DateTime )
dirname Regex
split -n Quantity File
find
grep -E Regex
find Path -name Regex -maxdepth Quantity -print0
xargs -0 -I {} mv {} File
finger
sed Program
sed Program
awk Program
sort
uniq
find Path -mtime Timespan -type f -ls
find Path -mtime -Timespan -type f -print0
xargs -0 -I {} tar -r -v -f File {}
ls -F -l -t -r
find Path -user Regex
find Path -name Regex -ls
awk Program
find Path -type d -exec ls -d -l -r -t {} \;
wc --lines
echo Regex
awk Program
find Path -name Regex -print0
split File Regex
find Path -type d -name Regex -exec chmod Permission {} \;
find Path -type d -exec chmod Permission {} +
cat File
xargs -I {} du -c {}
tail - Quantity
awk Program
find Path -perm Permission -type f
sed Program
sort
diff -u Quantity File
mkdir Directory
find Path \( -name Regex -or -name Regex \) -prune -or -name Regex -type f -print
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -iname Regex -type f
find Path -mtime -Timespan
mv File $( ls File
rev
cut -c Number
rev )
find Path -mtime -Timespan ! -name Regex -type f -exec basename {} \;
join -j Regex -o 2.1,2.2,1.2,1.3 <( sort File ) <( sort File )
echo -e $( echo -n -e Regex
wc -m )
comm -3 File File
read -p Regex
find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -exec ls -l -d {} \;
find Path -nouser
find Path -type f -name Regex -exec sed Program File \;
find Path -name Regex
find Path -print0
grep -a -z -Z Regex
xargs -0 -I {} file {}
find Path Path Path -print
tee File
shopt -s -o nounset
find Path Path -name Regex
shopt -p
grep Regex
find Path -name Regex
cd $( dirname $( which Regex ) )
find Path -user Regex -perm -Permission
find Path -name Regex
xargs -0 -I {} ls {}
mkdir --parents Directory
find Path -uid Regex
find Path -type f -name Regex -print0
xargs -0 -I {} cp -a {} File
find -L Path
grep $( dirname Regex ) File
find Path -name Regex -print0
xargs -0 -I {} tar -u -f File {}
echo Regex
tee File
sort File File
uniq -d
wc -l
find Path -iname Regex -printf "%p %f\n"
cat <( crontab -l ) <( echo Regex )
crontab File
ps -A -o pid
xargs -I {} readlink File
xargs -I {} dirname Regex
find Path -maxdepth Quantity -print
date -d Regex '+%Y-%m-%d'
nl -n rz -w Quantity -s Regex File
sed Program File
find Path -name Regex -print
less
env
grep Regex
find -type d Path Path Path {} +
find Path -maxdepth Quantity -not -iwholename Regex
find Path -size +Size -iname Regex
cat File
cut -f Number -d Regex
find Path -name Regex -type f -exec chmod Permission {} \;
mount -o ro,remount -t yaffs2 Regex Regex
find Path -name Regex
awk Program Program
find Path -name Regex
find Path -user Regex
find Path -type d -exec chmod Permission {} \;
find Path -not \( -name Regex -or -name Regex \) {} Path -print
find Path -name Regex -type f -not -path Regex -print0
xargs -0 -I {} cp -t Directory {}
du -a File
sort -n -r
head -n Quantity
ssh-keygen -f File -P Regex
mkdir -p Directory
find Path -nouser
xargs -I {} rm {}
grep Regex $( find Path )
find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} +
ssh -R Regex Regex
find Path -name Regex -exec chmod Permission {} \; -exec echo {} \;
wc -l
cat File
grep -F -v -f Regex
grep Regex
read Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
w
awk Program
source $( which Regex )
ssh -M -S Path -f -n -N -T -L Regex Regex
find Path -type d
grep -E -v Regex
less
echo $( groups Regex
sed -e Program -e Program )
pstree -a Regex
cat File
wc -l
find Path -name Regex -or -name Regex
xargs -I {} wc -l {}
ssh -L Regex Regex
find Path \( -perm -Permission -or -perm -Permission \) -ls
find Path -xtype l
echo Regex
cut -d Regex -f Number
find Path -name Regex
find Path -name Regex -exec grep Regex {} \;
finger
awk Program
sed Program File
xargs -I {} mkdir -p {}
find Path -printf "%y %p\n"
find Path -type f -mtime Timespan
xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {}
echo $( sed -e Program Program )
find Path
find Path -L -xtype l
find Path -exec gunzip -v -t {} +
find Path -name Regex
shopt -s globstar
find Path -type f
xargs
wc -c
yes Regex
nl
tee File
mkdir -p $( seq -s Regex Number )
shopt
grep Regex
find Path -name Regex -print0
xargs -0 -I {} grep -H Regex {}
rsync -a -f Program -f Program File File
finger -l
awk Program
sed Program
find Path -type f -exec chmod Permission {} \;
od -t x1 -A n File
head
find Path -name Regex
xargs -I {} ls -t -l {}
seq Number Number
cat File
sed Program
find Path -iname Regex
find Path -name Regex -exec grep Regex {} File \;
find Path -name Regex -print0
xargs -I {} -0 bzip2 -d -c {}
cut -f Number -d Regex
find Path -type f -printf "\n%Ab %p"
head -n Quantity
pstree -p -s Regex
set -e
find Path -type f \( -name Regex -or -name Regex \) -exec wc -l {} +
find Path -cmin -Quantity
head
find Path
find Path
head
dig Regex Regex @resolver1.opendns.com
find Path -perm -Permission -print
find Path -size -Size
find Path -name Regex
xargs -I {} cp File {}
find Path -amin -Quantity
chown Regex -R File
find Path -atime +Timespan -exec rm {} \;
source <( curl Regex Regex )
man Regex
find Path -type f -newerct Regex ! -newerct Regex
ls -1
rsync File File
find Path -name Regex
gunzip -c Regex
grep -f File
sort
uniq -c
find Path -perm Permission
find Path -type f -name Regex -exec rm -f {} \;
rsync -a -v -z -r -u --delete-excluded File File
kill - Regex Regex
find Path -name Regex -exec rm -f {} \;
paste -s -d Regex File
ls
xargs -n Quantity -I {} cp -i File {}
find Path
xargs -I {} grep Regex -l -s {}
find Path -name Regex
tr Regex Regex
xargs -0 -I {} rm {}
find Path -type f Path
grep -v Regex
cat File
md5sum
hostname -I
find Path -type f -exec sed -i Program {} \;
find Path -type d -exec mkdir -p Directory \; -or -type f -exec touch File \;
find Path -type f -mtime +Timespan
chgrp Regex File
find Path -name Regex
sort
xargs -I {} wc -l {}
find Path -perm Permission
find Path -type f -name Regex -execdir mv {} File \;
find Path -maxdepth Quantity -name Regex
find Path -name Regex
find Path -type f -name Regex -exec sed -i Program {} \;
find Path -type f -iname Regex -print0
xargs -0 -I {} grep Regex {}
find Path ! -path Regex
find Path -type f -regextype posix-extended \( ! -regex Regex \) -print0
xargs -0 -I {} cp -p --target-directory Directory {}
mkdir -p Directory
find Path -xtype f ! -iname Regex -exec mv -i -v {} File \;
find Path -regex Regex
find Path -type f -size +Size
find Path -type d -print
find Path -maxdepth Quantity -name Regex -print0
xargs -0 -I {} zcat {}
awk -F Regex Program
find Path -iname Regex -type f -exec sed Program -i Regex {} \; -exec rm File \;
find Path -type f -print0
xargs -0 -I {} rm {}
cal DateTime DateTime
sed -e Program -e Program -e Program
history
tail - Quantity
grep Regex
set
grep -E Regex
sed -r -e Program
find Path -type d -name Regex
find Path -type f
wc -l
ls $( pwd )
find Path -name Regex -exec grep --with-filename Regex {} \;
find Path -type f -regex Regex
wc -l
find Path -name Regex
xargs -I {} cp -a --target-directory Directory --parents {}
find Path \( -newer File -or -user Regex \) -print
find Path -name Regex -print
find Path -xtype l
tail -n $( grep -n Regex File
head -n Quantity
cut -d Regex -f Number ) File
echo Regex
tee File
echo <( true )
find Path -type f -name Regex
xargs -I {} tar -c -v -f File File {}
find Path -name Regex -print0
xargs -0 -I {} grep -E Regex {}
split -b Size File Regex
sed Program
rev
cut -d Regex -f Number
rev
echo Regex
tee File
find Path -type d
tr Regex Regex
ping -c Quantity Regex
tail - Quantity
awk Program
cut -d Regex -f Number
find Path
xargs -I {} file {}
find Path -name Regex
wc -l
find Path -name Regex
xargs -I {} rm -r -f {}
tree
cd Directory
file $( which Regex )
sort File
uniq -c
find Path -regextype posix-egrep -regex Regex
ls $( pwd )
find Path -name Regex -prune -or -print
echo $( whoami )
file File
grep Regex
find Path ! -path Regex -print
find Path -iname Regex ! -iname Regex
cd $( dirname $( which Regex ) )
find Path ! -user Regex -print0
xargs -0
find Path -user Regex -name Regex
find Path -path Regex -print
find Path -depth -name Regex
set
grep -P Regex
grep -o -P Regex
mount Regex Regex -o loop -t vfat
find Path -ctime -Timespan -type f -printf "%P\n"
xargs -I {} rsync -a -v -R File File
find Path -size +Size -exec ls -l -S {} +
head - Quantity
sed Program File
od -c
find Path Path -name Regex
find Path -type d -exec chown Regex {} \;
find Path -mtime -Timespan -type f
set -o errexit
find Path Path -type d Path \( -path Regex Path -or Path -name Regex Path \) Path -prune Path -or Path -type f -name Regex -print
find Path -type f -exec du -S -h {} +
sort -r -h
head -n Quantity
echo Regex
od -A n -v -t x1
tr -d Regex
find Path -name Regex -printf '%h\n'
split -a Quantity -d -l Quantity File Regex
diff File <( sort File ) <( sort File )
find Path -newer File -print
chmod Permission -R File
find Path -mtime -Timespan -print0
xargs -0 -I {} tar -r -f File {}
bind -p
grep Regex
find Path
grep Regex
find Path ! -user Regex
find Path -name Regex -type f -print0
xargs -0 -I {} rm -i {}
find Path -depth -type d -empty -exec rmdir {} \;
find Path -mindepth Quantity -maxdepth Quantity
cat File
split -l Quantity File Regex
find -x Path -inum Quantity
shopt -o extglob
kill $( jobs -l -p )
ls -l
grep Regex
read -p $( echo -e Regex ) Regex
find Path ! -name Regex
find Path Path -name Regex -or -name Regex
find Path -type d
ping -c Quantity Regex
head -n Quantity
grep -E -o -w Regex
grep -R -I -l Regex File
find Path -name Regex
xargs -s Quantity -I {} rename Regex {}
find Path -name Regex -print0
xargs -0 -n Quantity -I {} dirname {}
sort
uniq
echo $( basename $( dirname $( dirname Regex ) ) )
readlink $( which Regex )
mkdir -p Directory
find Path -type f -print0
xargs -0 -I {} grep -l -E Regex {}
split -b Size File Regex
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -name Regex -print
gunzip -c Regex
tar -x -f File
find Path -maxdepth Quantity -name Regex -prune -or -print0
xargs -0 -i -I {} cp {} File {}
find Path -type f -print0
xargs -0 -I {} grep -I Regex {}
zcat Regex
tar -x -v -f File
find Path -name Regex
sed Program
xargs -n Quantity -I {} wget {}
awk Program <( rev File )
find Path -user Regex -or -user Regex
tar -c -v -f File $( find Path -iname Regex )
find Path -type f -print0
xargs -r -0 -I {} grep -F Regex {}
find Path -name Regex
xargs -I {} grep Regex {}
find Path -name Regex
xargs -I {} cat {}
find Path -name Regex
chmod Permission File
find Path -type f -printf "%s %p\n"
sort -r -n
head -n Quantity
echo $( find Path -type f -perm -Permission ) Regex Regex Regex Regex
find Path -size +Size -printf "%12s %t %h/%fn"
find Path -name Regex -exec rm -f {} \;
find Path -name Regex -prune -or -mindepth Quantity -print
find Path -name Regex -exec echo {} \;
find Path -type f -name Regex
xargs -I {} sed -i Program {}
find Path -type f -execdir sort -o File {} \;
find Path -name Regex
find Path -maxdepth Quantity -type f -perm -Permission
rm -r File
read -t Quantity -n Quantity -r -p Regex Regex
find Path -daystart -mtime +Timespan -mtime -Timespan Path -printf "%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h/%f\n"
awk Program
find Path -iname Regex
grep -v Regex
tree -f -i
grep -v Regex
find Path -type d -empty -exec cp File {} \;
find Path $( pwd ) -name Regex
xargs -l Quantity -I {} dirname {}
ls -t -p
grep -v Regex
tail -n +Quantity
xargs -I {} rm -- {}
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -name Regex -exec zcat {} \;
chown $( whoami ) File
echo Regex
cut -d Regex -f Number
find Path -type d -exec chmod Permission {} \;
find Path -name Regex -exec rm {} \;
find Path -newer File
find Path -name Regex
find Path -daystart -mtime -Timespan
find Path -size +Size -exec ls -l -h {} +
find Path -type d -maxdepth Quantity
chown Regex File
find Path -perm -Permission
split -a Quantity File
find Path -name Regex -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -type f -exec chown Regex {} \;
find Path -type f -empty -print0
xargs -0 -I {} rm {}
echo Regex
grep --only-matching Regex
xargs
tr --delete Regex
echo Regex $( pwd )
find Path -type d -and ! -name Regex -or -name Regex -and ! -prune
mkdir Directory
find Path \( -name Regex -or -name Regex \) -print
find Path -maxdepth Quantity -type d -mtime +Timespan -exec rm -r -f {} \;
find Path -type d -exec chmod Permission {} \;
cd Directory
find Path -empty
diff --brief <( awk Program Program ) <( tac File
awk Program )
find Path -path Regex -prune -or -nouser -or -nogroup
find Path -newermt Regex
find Path -name Regex
find Path -name Regex -print
grep -v Regex
sort --random-sort File
head -n Quantity
tac File
sed -e Program
tac
sed -e Program
find Path -mtime +Timespan
mount
sed -n -e Program
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path -type f -name Regex -printf "cp '%p' '/tmp/test_%f'\n"
bash
find Path -mmin Quantity -print0
xargs -0 -r -I {} ls -l {}
find Path -name Regex
crontab File
cp -R File File
find Path -maxdepth Quantity -type f -exec md5sum {} \;
awk Program
chown -R Regex File
crontab -l
find Path -type f -size -Size
find Path -exec chmod Permission {} \;
grep -i -n -r Regex File
find Path -name Regex -print0
xargs -r -0 -I {} grep -l Regex {}
find Path -mtime +Timespan -exec rm {} \;
find Path -maxdepth Quantity -name Regex -exec rm -r {} \;
find Path -iname Regex
touch -d $( date -r File ) File
find Path -name Regex -name Regex
find Path -iname Regex
find Path -type -f Path Path -print0
xargs -0 -I {} ls -1 -h -s -S {}
find Path -perm Permission -type f -exec ls -l {} \;
find Path -atime -Timespan
find Path -name Regex -exec grep -i -n Regex {} +
grep Regex
cut -d Regex -f Number
uniq
find Path -name Regex
echo Regex
rev
cut -d Regex -f Number
rev
find Path -type f -exec sed -i Program {} \;
find Path -ctime Timespan -type f
find Path -exec echo {} +
find Path -type f -newermt Regex ! -newermt Regex -exec ls -l File \;
cat --help
basename Regex
yes
cat -n
head - Quantity
awk Program
find Path -maxdepth Quantity -type d -print
wc -l
find Path -print
xargs -I {} grep Regex {}
finger -l
grep Regex
cut -d Regex -f Number
cut -c Number
sort
uniq
find Path -amin -Quantity -type f
split -b Size -d -a Quantity File Regex
find Path -name Regex -exec grep Regex {} \; -print
grep Regex File File
find Path -type f -exec cat {} \;
tr -c Regex Regex
grep Regex
find Path -depth -type d -mtime Timespan -exec mv -t Directory {} +
find Path -size +Size -name Regex -print0
xargs -0 -I {} ls -l -S -h {}
scp -q -v File File
read -s Regex
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
find Path $( pwd ) -name Regex -exec dirname {} \;
find Path -name Regex
grep -v Regex
grep -v Regex
find Path -prune -newer File
find Path -mindepth Quantity -delete
find Path -type d -name Regex -ok cp File {} \;
echo Regex
sed Program
find Path -type f -mtime +Timespan -printf "%h\n"
sort
uniq
find Path
head
false true
find Path -type d -name Regex
find Path -name Regex -print
find Path
echo -e Regex
awk Program
od -a
find Path -xdev -samefile Regex -exec rm {} +
find Path -daystart -mtime Timespan
find Path -type f -print0
find Path -type f \( -name Regex -or -name Regex \) -print0
xargs --null -I {} grep --with-filename --line-number --no-messages --color --ignore-case Regex {}
find Path -type -f -mtime Timespan -exec rm {} \; -printf '.'
wc -c
find Path -name Regex -exec  \; -print
find Path -mindepth Quantity -type d -empty -delete
date -u -d Regex
find Path -type f -exec touch {} +
grep -F --include Regex -r -l Regex
xargs -L Quantity -I {} dirname {}
ssh -X Regex
find Path -type f -name Regex -exec rm {} \;
find Path -type f
readlink -f $( which Regex )
sed Program
chmod Permission $( find Path -type f )
find Path -name Regex -exec grep Regex {} \; -print
date -d Regex +'%Y-%m-%d %H:%M:%S'
mkdir -p Directory
find Path -name Regex
tac File
sed Program
tac
file File
grep Regex
ls -t
head -n Quantity
find Path -type f
xargs -I {} grep Regex {}
cat File
nl
find Path -name Regex
sed Program
xargs -i -I {} echo Regex Regex Regex {}
sh
ln -s File
mv File File
bzip2 -t File
tail -n Quantity File
find Path -type f -follow
xargs -I {} ls -a -l {}
awk Program
sort -u
ln File -s
find Path -mindepth Quantity -name Regex
find Path -type f -printf '%s\n'
awk Program
find Path -name Regex -prune -or -depth Path -print
ls $( which Regex ) -a -l
find Path -perm Permission
find Path -name Regex
find Path -newermt Regex
diff File File -r -x Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -amin -Quantity
find Path -name Regex
ls -l
grep Regex
awk -F Regex Program
tree --help
head -n Quantity
find Path -type f -name Regex -exec rm -f {} \;
su Regex
find Path -type f -exec grep -l Regex {} \; -exec file {} \;
grep Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
dig Regex Regex "$domain"
wc -l
find Path -name Regex ! -name Regex -prune
which -a Regex
wc -l
find Path -printf "%T@ %p\n"
sort -n
head - Quantity
cut -d Regex -f Number
xargs -I {} ls -a -l {}
find Path -name Regex -ctime +Timespan -exec rm -f {} \;
find Path -name Regex -type f -ls
sort -n -k File File
tac
cal
sed -e Program -e Program
chown -R Regex File
watch command
echo Regex
awk Program
su Regex -s /bin/ksh
find Path -type f ! -size Size
find Path -name Regex -prune -or -type f -print
find Path -type f
grep -E Regex
find Path -type f -mtime +Timespan -mtime -Timespan
xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {}
find Path -name Regex -fprint File
rsync -p -g -o -d -t File File
find Path -name Regex
find Path -type f -name Regex
find Path -path Regex
find Path -type d -mtime -Timespan -print0
xargs -0 -I {} mv -t Directory {}
find Path -name Regex
find Path -type f -newer File
finger
sed Program
find Path -type d -mmin +Quantity -print0
xargs -0 -I {} rmdir {}
find Path -name Regex -exec echo Regex \;
find Path ! -perm -Permission -prune
chmod Permission File
find Path -name Regex -prune -or -type d -printf ':%p'
cal
awk -v Program -v Program Program
history -w
find Path -name Regex
sed -i $( hostname ) File
find Path -name Regex -ls
find Path Path -type f -exec md5 File {} \;
sort
find Path -maxdepth Quantity -type d -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -type f -size +Size
find Path -perm -Permission
dig Regex Regex o-o.myaddr.l.google.com @8.8.8.8
ln -s File
chgrp Regex File File
ssh -i File -p Regex Regex
find Path -type l -xtype l
find Path -name Regex -type f
xargs -I {} wc -l {}
find Path -amin +Quantity -amin -Quantity
find -L Path -type l -delete
bunzip2 File File
wc -c
find Path -name Regex -type d -prune -or -name Regex -print
yes Regex
head -n Quantity
xargs -I {} echo {}
zcat Regex
awk Program
head
find Path -size +Size -size -Size
head - Quantity File
tail - Quantity
tr Regex Regex
find -L Path -type l
find Path -mindepth Quantity -name Regex
find Path -type f -exec chmod Permission {} +
find Path -type l
find Path -type d -exec mkdir -p -- Directory \;
find Path -name Regex
kill - Regex $( cat File )
find Path -name Regex
tail - Quantity
xargs -I {} rm {}
find Path -iname Regex
xargs -I {} sed -i Program {}
find Path -ctime +Timespan -type f -exec rm -f {} \;
find Path -type f -mtime -Timespan
find Path -name Regex -print0
xargs -0 -I {} tar -r -f File {}
find Path -regex Regex
find Path -name Regex -exec rm -r -f {} \;
ssh -i File Regex
find Path -type d -exec basename {} \;
wc -l
find Path -type d
sed -r Program
find Path -type f -maxdepth Quantity -exec sed -i Program {} \;
find Path -printf "././%f\n"
cpio -o -F Regex
set Regex
find Path -name Regex -print
xargs -I {} sed -i Program {}
find Path -type d
ssh Regex xargs -I {} mkdir -p Directory
find Path -name Regex -exec rm -r -f {} \;
md5sum $( which Regex )
find Path -amin -Quantity
env $( cat File ) Program
find Path -size +Size
crontab File
find Path -uid Regex
find Path -size +Size
find Path Path
mkdir Directory
find Path -size -Size -exec rm {} \;
chown -R Regex File
ln -s -F File Regex
find Path -mtime +Timespan -mtime -Timespan
head
find Path -path Regex -print
tar File File
split -b Size File Regex
ssh Regex
rmdir $( dirname Regex )
find Path -name Regex -exec du -k {} \;
awk Program
find Path -mindepth Quantity -maxdepth Quantity -type d
df File
awk Program
read -p $( pwd -P ) Regex
find Path -perm Permission
find Path -not -path Regex -type f \( ! -iname Regex \)
sort -n -r -k File File
rm --force File
ssh -t Regex command
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -type d
sed Program
tr Regex Regex
sed Program
scp -P Regex File File
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -type f -printf '"%p"\n'
xargs -I {} rm -f {}
find Path -mtime -Timespan
chmod Permission File File File
echo Regex $( ls -1 File
wc -l )
find Path -regextype posix-egrep -type d -regex Regex
find Path -type d
df File -B Size
tail - Quantity
awk Program
grep Regex
find Path -name Regex
find Path -mtime +Timespan -mtime -Timespan
hostname
find Path -print0
xargs -0 -I {} mv -t Directory {}
find Path -mtime Timespan -daystart -exec cp -a {} File File \;
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -name Regex -mtime +Timespan
find Path -name Regex
find Path -print
grep Regex
tree --help
find Path -type f -print0
xargs -0 -I {} grep Regex {}
find Path -type f -name Regex -exec grep -l Regex {} \;
find Path -name Regex -exec grep -i -l Regex {} \;
find Path -name Regex -not -path Regex -not -path Regex
finger -l
awk Program
echo Regex
od -c
find Path -maxdepth Quantity
find Path -type f -print0
xargs -0 -I {} chown Regex {}
find Path -name Regex -type f
mkdir Directory
chown -R $( whoami ) File
chown -R Regex File File File File File
find Path -name Regex
diff -q File File
rsync --exclude Regex --exclude Regex File File
find Path -type f -newermt Regex ! -newermt Regex
find Path -type f -name Regex -exec sed -i -e Program {} \;
find Path -type d -exec chmod Permission {} +
mkdir Directory Directory
tree
md5sum
chgrp -R Regex File
ssh-keygen -f File -N Regex
find Path -exec chown Regex {} \;
find Path -name Regex -prune -or \( -type f -print0 \)
mktemp -u -t Regex
find Path -type f -atime -Timespan
find Path -type f ! -name Regex -mtime -Timespan
grep -E -v -f Regex
find Path -type f -iname Regex -or -iname Regex ! -path Regex
find Path -atime Timespan
find Path -name Regex -delete
find Path -amin +Quantity -amin -Quantity
tr -c -d Regex
find Path
cpio -p -d -u -m -v Regex
find Path -type f -newer File
find Path -mmin -Quantity
xargs -r -I {} ls -l -d {}
echo Regex
rev
cut -d Regex -f Number
mv File File
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
find Path -type f -name Regex
xargs -I {} zcat {}
wc -l
find Path -size +Size -size -Size -print
find Path -mindepth Quantity -type d ! -path Regex -name Regex -print
find Path -type f -perm Permission
xargs -I {} file {}
grep Regex
cut -d Regex -f Number
mv File File
ln -s -f File Regex
find Path -type f \( -name Regex -or -name Regex \) -print0
xargs -0 -I {} ls -t {}
tail - Quantity
xargs -I {} rm {}
find Path -wholename Regex -prune -or -print
find Path -type f -mmin -Quantity -print0
xargs -r -0 -I {} ls -l {}
grep -v Regex File
find Path -type f -name Regex -exec ls -l {} \;
find Path -name Regex -maxdepth Quantity -exec mv -t Directory {} +
find Path -name Regex
sed -n Program
xargs -L Quantity -I {} echo Regex {}
find Path -perm Permission
xargs -I {} chmod Permission File
gzip -d -c Regex
tar -x -v -f File
find Path -mtime -Timespan
find Path -print -or -name Regex -prune
mount
find Path -samefile Regex
find Path -name Regex
find Path -user Regex
ifconfig Regex
grep -E -o Regex
grep -E -o Regex
grep -v Regex
find Path -name Regex -prune -or -type f -print
find Path -type f -not -name Regex
xargs -I {} rm {}
find Path -mtime +Timespan -delete
find Path -type d -size +Size
mount Regex -t tmpfs Regex
find Path -exec grep Regex {} +
find Path Path Path -type f
xargs -I {} chmod Permission {}
column -s Regex -t
od -c File
head - Quantity
find Path -type d -iname Regex
find Path -iname Regex
sort -r
find Path -name Regex
find Path -type f -maxdepth Quantity -empty -print0
xargs -0 -I {} rm {}
find Path -type d -print
find Path -maxdepth Quantity -type f -empty -delete
find Path -type f -delete
find Path -name Regex -exec rename Regex {} \;
chown Regex File
find Path -name Regex -print
tee -a File
find Path -daystart -mtime -Timespan
find Path -newer File
find -x Path -user Regex -print0
xargs -0 -I {} chown Regex {}
date +"%Y/%m/%d (%H:%M)" history Quantity
cut -c Number
find Path -print
xargs -I {} chmod Permission {}
find Path -name Regex -exec mv {} $( basename {} Regex ) \;
find Path -name Regex
xargs -I {} wc {}
find Path -path Regex -prune -or -type f -name Regex -print
find Path -type f -exec echo Regex Regex {} \;
echo Regex
tr Regex Regex
find Path -not -path Regex -not -name Regex
grep Regex
find Path -type f
xargs -I {} grep -l -i Regex {}
pstree -s Regex
echo Regex
rev
cut -d Regex -f Number
rev
find Path -name Regex -print0
xargs -0 -I {} grep -n Regex {}
find Path -exec mv {} File \;
find Path -daystart -mtime +Timespan
basename Regex
date -r File +\ %s
comm -1 -2 <( sort File ) <( sort File )
find Path -mtime Timespan
cut -d Regex -f Number File
sort
$( md5sum File )
find Path -name Regex -maxdepth Quantity -print0
xargs -0 -I {} mv {} File
find Path -size +Size
paste -d Regex File
sed Program
$( cat File )
find Path -type d -exec chmod Permission {} \;
find Path
grep Regex
xargs -I {} cp {} File
find Path -name Regex -ls
df -h
awk Program
readlink -f File
find Path -name Regex -print
xargs -I {} grep -H -n -T Regex {}
echo Regex
awk -F Regex -f File
paste -s -d Regex
wc -l File
awk Program
cp -r -v $( ls -A
grep -v -E Regex ) File
tail -f Regex
read -n Quantity -r
sort File File File File File File File File File File File
more
find Path -name Regex -exec wc -l {} \;
awk Program
find Path -type d
tr Regex Regex
sed Program
awk Program Program
sort -t Regex -k Number
uniq -u --skip-fields Quantity
sort -k Number -t Regex
cut -f Number -d Regex
find Path -type d -exec chmod Permission {} \;
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -type f
find Path -type f -exec grep -q Regex {} +
mkdir Directory
find Path -nouser -or -nogroup
grep --exclude-dir Directory -r -n -w Regex -e Regex
cat File
xargs -i -I {} dig -x {} Regex {}
find Path -size +Size
find Path -exec echo {} \;
cd $( dirname $( which Regex ) )
ifconfig Regex Regex Regex Regex
find Path -type f -regex Regex -exec ls {} \;
find Path -maxdepth Quantity -ipath Regex -print Path
find Path -name Regex
xargs -I {} rm {}
grep -F Regex
find Path -type f -exec split -l Quantity {} {} \;
find Path -path Regex -or -print
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -name Regex
find Path -name Regex
fold -w Quantity
find Path -type f -name Regex -ok ls -l {} \;
find Path -xdev -samefile Regex
find Path -size -Size -print
find Path -iname Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -maxdepth Quantity -type d -print0
find Path -iname Regex -exec rm {} \;
df File
grep Regex
find Path -type f -name Regex -exec rm -f {} \;
source <( sed Program File )
find Path
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
find Path -name Regex -print
find Path -type f -exec du -S -h {} +
sort -r -h
head -n Quantity
find Path -type f ! -size Size -exec ls -l {} \;
find Path -type d -exec chmod Permission {} \;
find Path -iname Regex -printf "%p %f\n"
find Path -path Regex -prune -or -print
cut -d Regex -f Number File
comm -1 -3 File File
find Path -xdev -name Regex
find Path -atime +Timespan
find Path -depth -type d -empty -delete
find Path -mtime +Timespan -print
find Path -name Regex
cat File
xargs -I {} ln -s {} Regex
env
grep Regex
find Path -mindepth Quantity -maxdepth Quantity -type d
xargs -n Quantity -I {} cp -i File {}
find Path
xargs -I {} grep Regex {}
find Path -iname Regex
chown Regex File
find Path -atime +Timespan -print
find Path -type f -perm -Permission
find Path -type f -exec grep -l -i Regex {} \;
find Path -type f -name Regex -exec cp {} File \;
find Path -group Regex -exec chown Regex {} \;
seq Number Number
sed Program
ifconfig Regex
grep Regex
cut -d Regex -f Number
cut -d Regex -f Number
mv File File
history
sed Program
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type f -print0
xargs -0 -n Quantity -P Quantity -I {} gzip -9 {}
bzip2 -c File
tee -a File
rsync -r --verbose --exclude Regex File File
sed -i Regex Program File
find Path -group Regex
find Path -type f
xargs -I {} chmod Permission {}
yes Regex
head -n Quantity
find Path -type f
echo Regex
cut -f Number -d Regex
find Path -size Size
find Path -name Regex -exec tar -u -f File {} \;
find Path -name Regex
find Path -name Regex
history
vim -R File
find Path -name Regex -exec cp -t Directory -- {} +
find Path -type f -mtime +Timespan -exec rm {} \;
shopt globstar
find Path -type f -exec chmod Permission {} +
find Path -perm Permission
find Path -name Regex
chown Regex File -R
wc -l $( tree -i -f --noreport
grep -e Regex )
find Path -mmin -Quantity -type f -exec ls -l {} +
mktemp -d
find Path -type f -name Regex -print0
xargs -I {} -0 grep -l Regex {}
find Path -mtime -Timespan
find Path -type d -perm Permission -print -exec chmod Permission {} \;
find Path -type f -exec chmod Permission {} \;
find Path -user Regex -exec chown -h Regex {} \;
bind Regex
find Path -maxdepth Quantity -type d -mtime -Timespan
scp -r File File
find Path -name Regex
xargs -I {} grep -E Regex {}
find Path -maxdepth Quantity -type d -printf "%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\n"
kill - Regex $( cat File )
cat $( find Path -name Regex )
dig -x Regex
awk Program
mount Regex Regex Directory -o rw,uid=test,gid=test
mkdir -p Directory
find Path -maxdepth Quantity -print0
find Path -name Regex -type f -ls
find Path -mmin -Quantity -type f -exec ls -l {} \;
ln -s -f File Regex
awk Program Program
column -t
find Path -type f -exec chmod Permission {} +
rsync -a -P -S -H -i -v File File
rm -f File
find Path -name Regex -atime +Timespan -type f
find Path -name Regex -prune -or -exec mv {} $( echo {}
tr Regex Regex ) \; -print
env
sed Program
mount -v
grep Regex
awk Program
xargs -I {} ls -l -s -R {}
comm -1 -2 <( zcat Regex ) <( zcat Regex )
sed Program
find Path -type f -iname Regex -print
xargs -I {} grep Regex {}
find Path -name Regex -prune -or -name Regex -print
find Path -group Regex
basename Regex
cut -d Regex -f -Number
find Path -user Regex -exec chown Regex {} \;
find Path -name Regex
grep -f <( sed Program File )
xargs -I {} cp {} File
find Path -type f -print
sed -e Program -e Program
xargs -I {} chmod Permission {}
find Path -name Regex
find Path -name Regex
mkdir Directory
find Path -type d -empty
find Path -type f -name Regex
find Path -name Regex
xargs -n Quantity -I {} dirname {}
bg Regex Regex Regex Regex Regex Regex Regex Regex
find Path -type d
find Path -type f -name Regex -size +Size -exec rm {} \;
chown -R Regex File
find Path -mtime -Timespan
sed -e Program
find Path -maxdepth Quantity -type f -not -regex Regex
comm <( sort File ) <( sort File )
sed Program File
find Path -size +Size -ls
find Path -maxdepth Quantity -name Regex
find Path -type d -name Regex
find Path -type f -name Regex -exec grep -H Regex {} \;
find Path -type f -printf "%f %s\n"
find Path -name Regex
wc -l
cp -r File File
gzip -d -c Regex
basename Regex
find Path -name Regex
find Path -name Regex
pstree --show-parents -p Regex
head -n Quantity
sed Program
less
tar -z -c -v -f File File
find Path -type f -size +Size -exec ls -l -h {} \;
nl -v Quantity File
find Path -size +Size -mtime +Timespan -exec ls -l {} \;
find
xargs
chown Regex File
find Path -mindepth Quantity
xargs -I {} chmod Permission {}
find Path -type f -atime +Timespan
find Path -mmin -Quantity -ls
mount Regex Regex
shopt -s
grep -E -i Regex
ln -s -n File Regex
seq Number
tac
sed Program
tac
find Path -type f \( -iname Regex -or -iname Regex \)
jobs -l
find Path Path
shopt compat31
uname -o
join -t Regex -o 1.2,2.2,2.3 -a Quantity -a Quantity -e Regex File <( sort File )
find Path -mtime Timespan
ssh -f -N -L Regex Regex
find Path -type f -name Regex -exec cat {} \;
sed Program
wc -l
find Path -type f -size +Size -exec rm {} +
find Path -name Regex -exec ls -a -l {} \;
find Path -name Regex -exec mv {} File \;
find Path
xargs -I {} tar -c -v -f File {}
pstree Regex
shopt -s dotglob
find Path -name Regex
find Path -name Regex -print0
xargs -0 -I {} wc -l {}
find Path -not -name Regex
bind -l
grep Regex
cat File
grep Regex
wc -l
ifconfig
grep -A Quantity Regex
grep Regex
sed -r Program
head - Quantity
sort File File
uniq -u
tail -n +Quantity File
bzip2 -k -v File
find Path -mindepth Quantity -name Regex
find Path -type f -name Regex -delete -printf "%h\0"
xargs -0 -I {} rmdir {}
find Path -group Regex
grep -r -n -w Regex
find Path -type f -print0
xargs -r -0 -I {} grep -F Regex {}
find Path -inum Quantity -exec rm {} \;
find Path -type f -name Regex
find Path -name Regex -daystart -mtime +Timespan -mtime -Timespan
cat File
find Path -iname Regex -exec bzip2 -d {} \;
find Path -newer File
find Path -name Regex -print0
xargs -0 -I {} cp -t Directory {}
crontab -l
sed Program
crontab File
find Path -name Regex -type f -print0
xargs -0 -I {} rm -f {}
find Path -regextype posix-extended -regex Regex -prune -or -print
su
find Path ! -name Regex -print
find Path -perm -Permission -print
find Path -exec grep Regex {} \;
find Path -type d -mtime Timespan -name Regex -exec rm -f -r {} \;
chmod Permission File
find Path -mtime Timespan -print
find Path -type f -name Regex
xargs -I {} tar -c -v -f File {}
find Path -name Regex -prune -or -print0
xargs -0 -I {} chown Regex {}
find Path -type f
xargs -I {} chmod Permission {}
ls -d File
xargs -i Regex -I {} cp File File {}
grep -i -H Regex $( find Path -name Regex )
find Path -name Regex
rename -v Regex Regex
chgrp -R Regex File
find Path -name Regex -type l
mount
grep $( readlink -f File )
find Path -perm Permission
split -l Quantity File Regex
find Path -type f -name Regex -exec sed --in-place Regex {} +
mkdir -p Directory
find Path -maxdepth Quantity -iname Regex
find Path -name Regex -print
find Path -maxdepth Quantity -xdev -type f -exec grep -Z -l -i Regex {} +
md5sum $( which Regex )
ping -c Quantity Regex
tee >( split -d -b Size File Regex )
find Path -type f
awk -F Regex Program
sort -f
uniq -i -d
find Path -type f -name Regex
find Path -name Regex
sed Program
xargs -I {} touch {}
find Path -name Regex -exec dirname {} \;
diff File File
grep Regex
head - Quantity
cut -d Regex -f Number
find Path -name Regex -exec du -h -c {} +
tail -n Quantity
tac
sed -n Program
tac
head -c Quantity File
tr Regex Regex
awk Program Program
cat File
wc -l
chmod -R -f Permission File
find Path -mindepth Quantity -type d -empty -delete
readlink -f File
sed Program
find Path -name Regex -print
find Path -name Regex
xargs -I {} grep -l Regex {}
find Path -type f
env -i Program Program
find Path -name Regex
cp -n -r File File
find Path -perm -Permission
find Path -wholename Regex -prune -print -or -print
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -print
rsync -a -v -h File File
find Path -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \;
cd Directory
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path -name Regex -print
xargs -I {} wc -l {}
find Path -maxdepth Quantity -type f -exec ls -l {} \;
less
ls -l -R File
grep -v Regex
awk Program
find Path -type f -exec ls -l {} \;
ln -r -s File Regex
cd Directory
find Path -user Regex -type f -exec chown Regex {} \;
find Path -type f -size Size -exec ls {} \;
find Path -name Regex -print
find Path -type d -mtime -Timespan -print0
xargs -0 -I {} mv -t Directory {}
find Path ! -path Regex -iname Regex
find Path -L -type l
history Quantity
tac
nl
tac
sed Program
su Regex
find Path -maxdepth Quantity -empty -exec echo Regex \;
find Path -atime Timespan
nl File
sort -n -r
cut -b Number
find Path -perm +Permission
comm File File
find Path -print0
xargs -0 -l -i -I {} echo {} {}
find Path -size +Size -size -Size -print
find Path -size +Size
find Path -name Regex
grep -v Regex
cat File
sort -u
shopt -s direxpand
find Path -name Regex -print -exec awk Program {} \;
tmux
find Path -maxdepth Quantity -type f -printf '%T@ %p\0'
sort -r -z -n
awk Program
xargs -0 -I {} rm -f {}
find Path -type f -size Size -print
find Path -maxdepth Quantity -type f
xargs -I {} grep -F Regex {}
wc $( find )
find Path -type f -exec grep -i Regex {} \; -print
uname -s
find Path ! -name Regex
find Path Path
cat -v -e -t File
watch -n Quantity cat File
find Path -type f -printf "\n%AD %AT %p"
head -n Quantity
sort -k Number -k Number -k Number
diff -u Quantity File
grep -E Regex
find Path -iname Regex -print
find Path -type f -newer File
find Path -name Regex
readlink -f File
find Path -name Regex
xargs -I {} wc -l {}
find Path -type d -name Regex -print0
xargs -0 -I {} chmod -R Permission {}
ln -s File Regex
hostname
find Path -type d -name Regex
sort -r
find Path -type f
find Path -ls
tr -s Regex Regex
groups Regex Regex Regex Regex Regex Regex Regex Regex
find Path -mmin -Quantity
diff File File -r -q -X File
find Path -user Regex
find Path -type d -exec chmod Permission {} \;
find Path -type f ! -perm -Permission -ls
touch -d $( date -r File ) File
find Path -regextype posix-extended -regex Regex
comm -1 -3 <( grep Regex File
sort ) <( grep Regex File
sort )
dig Regex Regex
find Path ! -perm Permission
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -type f -regex Regex
tail -F File
tee -a File
rm $( du File
awk Program )
find Path \( -user Regex Path Path Path \) -print
find Path -name Regex -exec cp {} File \;
man Regex
chown Regex File
chgrp -R Regex File
grep Regex
sort -u
nl
find Path -xdev -name Regex
cut -d Regex -f Number File
uniq
xargs -I {} grep -m Quantity {} File
find Path -type f -print0
xargs -t -0 -I {} chmod -v Permission {}
find Path -name Regex
find Path -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -not \( -path Regex -prune \) -name Regex
rsync --iconv UTF-8,UTF-8-MAC File File
find Path -print -name Regex -prune
find Path -regex Regex -exec cp {} File \;
find Path -type f -name Regex -prune -or -print
source <( echo Regex )
ls -t -r
head -n -Quantity
xargs -I {} rm {}
find Path -perm Permission
find Path -iname Regex
find Path -size -Size
diff <( fold -w Quantity <( sed Program File ) ) <( fold -w Quantity <( sed Program File ) )
awk Program
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
mv $( find Path $( find Path -name Regex -printf "%h\n"
uniq ) -type f ) File
find Path -type f -daystart -mtime -Timespan
nl -w Quantity File
sort -k Number -u
sort -n
cut -f Number
find Path -type f Path -exec sed -i Program {} +
find Path -type f ! -newer File -exec rm {} +
ls -1
tr Regex Regex
sed Program
find Path -newer File
echo Regex
grep -q Regex
hostname -I
awk Program
find Path -perm Permission
chown Regex File
find Path -type f -print0
xargs -0 -I {} ls {}
touch -t $( date +%m%d0000 ) File
touch -m --date Regex File
find Path -name Regex -print -exec awk Program {} \;
find Path -name Regex -exec grep -H Regex {} \;
find Path -group Regex -exec chgrp Regex {} \;
split -n Quantity File
find Path -iregex Regex
find Path -size +Size
find Path -user Regex -exec rm {} \;
env
awk -F Regex Program
find Path -type type_descriptor
tac File
sed Program
tac
find Path \( -name Regex -or -name Regex \)
tr Regex Regex
sort -n -u -t Regex -k Number -k Number -k Number -k Number
tr Regex Regex
read -n Quantity -r -p Regex Regex
find Path -type f -exec ln -s {} Regex + Path
ls -d File
grep -v Regex
xargs -d Regex -I {} chown -R Regex {}
find Path -name Regex
chown -R $( whoami ) File
ifconfig Regex
head -n Quantity
tr -s Regex
cut -d Regex -f Number
echo $( seq Number )
xargs -P Quantity -I {} -d Regex ping -W Quantity -c Quantity Regex
grep -E Regex
find Path -type f -name Regex
yes Regex
bash
find Path -name Regex
df File
awk Program
paste <( paste -d Regex File File ) File
find Path -type f ! -perm -Permission
find Path -name Regex -type f -exec grep -H -n Regex {} \;
find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%Tc %p\n'
find Path -type f
awk -F Regex Program
awk Program
find Path -name Regex
date "+%Y-%m-%d"
find Path -type f -print
xargs -I {} chmod Permission {}
mktemp --directory
find Path -name Regex -type f -exec basename {} \;
ssh -t Regex command
find Path -newer File -user Regex -print
find Path -xdev -samefile Regex
mkdir -p Directory
find Path -name Regex
wc -l
find Path -mtime +Timespan
watch ls -l
find Path -type f -path Regex
env
grep Regex
awk Program
find Path -name Regex -type f -print
find {} -name Regex -type f -or -type l -maxdepth Quantity -perm +Permission
find Path -name Regex
cal -h
cut -c Number
echo Regex
tr Regex Regex
tac
tr Regex Regex
find Path -print0
xargs -0 -I {} echo {}
chmod Permission File File File
chmod +Permission File
find Path -name Regex -exec grep -n -e Regex {} \;
hostname -I
cut -d Regex -f Number
find Path -type f -name Regex -print0
xargs -0 -I {} tar -x -z -f {}
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -iname Regex -mtime -Timespan
find Path -name Regex
find Path -type f -mmin -Quantity
ls File
find Path -prune -cmin +Quantity -print
grep -q Regex
ping -a Regex
echo -e Regex
awk -v Program Program
od -a
rsync -a -v -z --ignore-existing File File File
find Path -name Regex -print0
xargs -0 -I {} head - Quantity {}
find Path -name Regex -type f
rename Regex
shopt extglob
find Path -type f
find Path -type f ! -perm -Permission
dig Regex Regex
find Path -iname Regex
join -t Regex <( sort File ) <( sort File )
join -t Regex File <( sort File )
find Path -type f
tr Regex Regex
find Path -name Regex -exec rm -r -f {} \;
find Path -mtime -Timespan
chown Regex File
sort File -o File
find Path -name Regex -exec rm {} \;
find Path -print
xargs -I {} grep Regex {}
mount -n -o remount -t extX Regex Regex
find Path -name Regex -delete
find Path -name Regex -print -exec rm {} \;
find Path -iname Regex -type f
yes
head -n Quantity
awk Program
find Path -name Regex
find Path -type d -exec chmod Permission {} +
find Path -newer File
find Path -type f -name Regex -exec awk Program {} +
true
false
true
chown Regex File
find Path -type d -name Regex -exec rsync -a -v -R {} File \;
find Path -type f -mtime -Timespan -daystart -exec ls -l {} \;
rsync -r -t -v -p -l File File
find Path -type f
xargs -I {} ls {}
find Path -type f
cpio -p -v -d -m -B Regex
find Path -size +Size -iname Regex
find Path -name Regex -prune -or -type f -and -perm Permission -print
sed Program
sort
uniq
tr -d Regex
sed Program
find Path -type f -ls
find Path -iname Regex -atime +Timespan
who
grep Regex
yes
more
cd $( which Regex
xargs -I {} dirname {} )
find Path -path Regex -prune -or -perm -Permission ! -type l -ls
echo Regex
fold -w Quantity
tac
tr -d Regex
find Path -mmin +Quantity -delete
diff --brief -N -r File File
find Path -type f -name Regex -exec sed -i Program {} \;
find Path -mindepth Quantity -maxdepth Quantity -name Regex
find Path -not -path Regex -type f -name Regex
echo Regex
tee --append File
find Path -user Regex
find Path -prune -print
find Path -size +Size -print
find Path -mtime Timespan
find Path -empty -ok rm File \;
find Path -iname Regex -exec ln -s {} Regex \;
find Path
find Path -perm -Permission -print
find Path -type f -print0
xargs -0 -I {} grep -c -H Regex {}
grep Regex
find Path -type f -name Regex
history
vim File
find Path -maxdepth Quantity -name Regex
find Path Path Path Path
ifconfig Regex
grep Regex
awk Program
cut -d Regex -f Number
find Path -type d -exec chmod Permission {} \;
chown -R -f Regex File
find Path -name Regex -exec chmod Permission {} \;
echo Regex
rev
cut -d Regex -f -Number
rev
find Path Path
grep -P Regex
find Path -size +Size -size -Size
grep -o Regex File
tr Regex Regex
sort
uniq -c
sort -n -r
chown Regex -R File
find Path -xdev -inum Quantity
xargs -I {} rm {}
find Path -name Regex -print
xargs -I {} wc -l {}
find Path -iname Regex
sort
diff -r File File
cp File File
sed Program File
join -a Quantity -e Regex -j Regex -o 1.1,2.2 File File
find Path \( -type f -or -type d \) -name Regex -print
find Path -name Regex -print
xargs -I {} rm {}
find Path -name Regex
mkdir Directory
ssh -O Regex Regex
find Path -type f -print -exec grep -n -i Regex {} \;
chmod Permission $( which Regex )
find Path -mtime +Timespan
find Path -perm Permission -and -mtime Timespan -and -print
find Path Path -iname Regex -print0
du --files0-from File -c -s
tail - Quantity
find Path -name Regex -ctime +Timespan -exec bzip2 -z -v {} \;
find Path -name Regex -exec mv {} File \;
touch File
cd $( dirname $( find Path -name Regex
sed Program ) )
join -t Regex File File
join -t Regex File File
join -t Regex File File
cat File
wc -l
find Path -name Regex
echo Regex
tail -c +Quantity
head -c Quantity
chown -R Regex File
find Path -path Regex -prune -or -print
find Path -perm -Permission -type f -exec ls -l {} \;
find Path -mtime -Timespan
find Path -type d -name Regex -exec dirname {} +
find Path -type f -name Regex -print
find Path -type f -mtime +Timespan
mv File File
comm -2 -3 File File
wc -l
find Path -type f -not -name Regex -exec mv {} File \;
find Path -name Regex -type f -print0
xargs -0 -n Quantity -I {} echo {}
rsync -a --stats --progress --delete File File
find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \;
cat File
wc -l
echo Regex
cut -d Regex -f Number
find Path -type f
xargs -I {} grep Regex {}
rm $( find Path -name Regex )
more File
grep Regex
awk Program
find Path -name Regex
find Path -type f -exec chmod Permission {} \;
chown -R Regex File
wc -l $( find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -print )
find Path -type d
xargs -I {} chmod -v Permission {}
find Path -name Regex -or -name Regex
find Path -type f -printf "%s %p\n"
sort -n -r
head -n Quantity
date --set Regex
find Path -type f -name Regex
sed -e Program
xargs -n Quantity -I {} grep -l Regex {}
sed -e Program
dig Regex Regex
grep -v Regex
grep Regex
find Path -depth -print
cpio -o -O Regex
echo -n Regex
md5sum
cut -c -Number
cd $( find Path -name Regex -printf '%h\n' )
yes Regex
head - Quantity
echo Regex Regex Regex
xargs -n Quantity -I {} cp File {}
find Path -mindepth Quantity -name Regex -prune -or \( -type d -print \)
find Path ! -path Regex -iname Regex
find Path -type f -perm -Permission
awk -- Program
find Path -newerct Regex -print
chown Regex File
rsync -u File File
echo <( true )
find Path -newer File
find Path -name Regex -size Size
echo Regex
sed Program
chown -R Regex File
$( echo Regex
wc -c )
file File
find Path -type f -mtime -Timespan
cat File
head -n Quantity
tail -n Quantity
find Path -prune -empty -type d
find Path -name Regex -print
find Path -name Regex -mtime +Timespan -exec rm {} \;
find Path -name Regex -type d -exec rm -r -f {} \;
kill - Regex $( jobs -p )
sed -r Program File
column -t
find Path -type f -ctime -Timespan -name Regex
xargs -I {} bzip2 {}
tar -x -v -z -f File
find Path -type d -empty
df -i
find Path -iname Regex
find Path
grep -E -Z Regex
xargs -0 -I {} echo {}
find Path -type d -exec ls -l -d {} \;
rsync -a -z --delete File File
find Path -print
grep -i Regex
rsync -R -v File File File
join -t Regex -o 1.1,1.2,2.3 -a Quantity File File
ps -o uid,pid,cmd
awk Program
xargs -I {} kill - Regex {}
readlink --canonicalize --no-newline File
chmod Permission $( which Regex )
rename Regex Regex File
chown Regex File
ls -d File
grep Regex $( uname -r )
find Path -name Regex
uname -r
cd Directory
find Path -mindepth Quantity -mmin -Quantity
xargs -r -I {} ls -l -d {}
find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \;
find Path ! -path Regex ! -path Regex -name Regex
find Path -type f -name Regex
find Path ! -name Regex -print
apropos Regex
grep -i Regex
find Path -type d -name Regex -exec rm -r -f File \;
find Path -type d -exec chmod Permission {} \; -or -type f -exec chmod Permission {} \;
rev File
cut -d Regex -f Number
rev
paste -d Regex File File
find Path -iname Regex
find Path -path Regex -prune -or -print
find Path -amin -Quantity
find Path -name Regex -exec gzip -d {} \;
zcat Regex
tar -x
find Path -exec chgrp Regex {} \;
paste <( cal DateTime DateTime ) <( cal DateTime DateTime )
find Path -type f -name Regex -exec rm {} \;
find Path -name Regex -print0
cpio -p -a -m -v -d -0 Regex
find Path -type d -name Regex -execdir tar -c -v -f File File \;
comm -1 -2 <( sort File ) <( sort File )
chown -R Regex File File File
find Path ! -name Regex -print
sort -o File File
find Path -name Regex -print
find Path -name Regex
find Path ! -perm -Permission
yes Regex
sed -e Program -e Program
history
grep -C Quantity Regex
nl -s Regex -b a -n rz
find Path -path Regex
find Path -mtime Timespan -type f
find Path -amin +Quantity -amin -Quantity
yes
head -n Quantity
awk Program
bash File
tee File
find Path -name Regex -and -name Regex -and -not -name Regex
find Path -type f -exec basename {} \;
wc -l
find Path -type f -exec rename Regex {} \;
find Path -name Regex -ctime +Timespan -ctime -Timespan
find Path -name Regex -exec grep Regex {} \; -print
find Path -type f -exec chmod Permission {} \;
find Path -name Regex
cd $( dirname $( which Regex ) )
find Path -type f -mtime Timespan
find Path -regextype sed -regex Regex
find Path -name Regex -type f -print
read -p Regex Regex
shopt -u compat31
find Path -type f -execdir echo {} \;
find Path -mtime -Timespan
find Path -type f -atime +Timespan -name Regex -print -delete
rsync -a -v File File
awk Program Program
sort -t Regex -k Number
uniq --skip-fields Quantity
sort -k Number -t Regex
cut -f Number -d Regex
find Path -mmin +Quantity -print
grep Regex File
find Path -mmin -Quantity
ssh -l Regex Regex
find Path -name Regex
xargs -I {} wc -l {}
sort -n -r
grep -E -v Regex
less
find Path -type d
find Path -name Regex
date +%Y-%m-%d
find Path -iname Regex -printf "%P\n "
xargs -I {} -n Quantity cp {} File
find Path -name Regex
find Path Path -iname Regex -print0
du --files0-from File -c -s
tail - Quantity
read -p Regex Regex
find Path -type f
sed -e Program
sed -e Program
sort
uniq -c
sort -r -n
sort File
uniq
find Path -size -Size -xdev -print
find Path -type f -size +Size -delete
watch ls
ln -s -T -f -v File Regex
find Path -type f -mtime +Timespan -exec rm {} +
cat File
sort
sort -u -c
rsync -a --relative File File
find Path -name Regex -type d -prune -exec rm -r -f {} +
find Path -type f
find Path -mtime Timespan -mtime -Timespan -daystart -iname Regex
find Path -prune
find Path
grep Regex
xargs -I {} cp {} File
cat File
tr -d Regex
fold File
find Path -type f -size +Size -exec ls -a -l {} \;
scp -B -p -q -r File File
find Path -size Size -ls
find Path -type f -name Regex -or -name Regex -or -name Regex
find Path -type f -perm Permission
find Path -maxdepth Quantity
awk -F Regex Program
find Path -iname Regex -size +Size
find Path -name Regex -print0
find Path -atime +Timespan -size +Size -print
find Path -mmin -Quantity
xargs -I {} ls -l {}
find Path -daystart -ctime Timespan -type f
find Path -type f -maxdepth Quantity -name Regex -print0
sort -z
xargs -0 -I {} bash File {}
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
ls -l -d $( find Path )
column -t -s Regex File
od -c File
find Path -name Regex
find Path -regextype sed -regex Regex
shopt -s expand_aliases extglob xpg_echo
find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex -ls
find Path -name Regex
xargs -I {} cp -a -v --target-directory Directory --parents {}
mkdir Directory
echo Regex
tr Regex Regex
nl
sort -u -k Number
sort -n
cut -f Number
find Path -name Regex -and -not -name Regex
find Path -exec chown Regex {} +
who
sed -e Program
head -n Quantity
find Path -name Regex
sort
find Path -mmin -Quantity
find Path -type f -name Regex -exec rm -f {} \;
gzip -d --stdout Regex
bash
find Path Path
xargs -d Regex -I {} cp -t Directory {}
bind -q Regex
find Path -mtime +Timespan -and -mtime -Timespan -print0
find Path -links Quantity
gzip -k Regex
column -t File
uniq -w Quantity -c
du -s -h File
sort -n
find Path -name Regex
xargs
find Path -type f -group Regex
find Path --version
find Path -name Regex
xargs -I {} grep -l Regex {}
wc -l
find Path -name Regex -delete
find Path -type f -not -path Regex
which -a Regex
xargs -I {} readlink -f {}
xargs -I {} file {}
find Path -type f ! -name Regex -mtime -Timespan
grep -E -v -f Regex
find Path -name Regex
grep Regex
ln -s File Regex
find Path -iname Regex -atime Timespan -type -f
find Path -atime +Timespan -exec ls \;
wc -l
find Path -size Size Path
find Path -perm -Permission -exec chmod Permission {} \;
tar -I File -c -f File File
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -maxdepth Quantity -type d -print0
xargs -0 -I {} ls -d {}
find Path -name Regex -type f -print
ls -l File
find Path -iname Regex
find Path -maxdepth Quantity -name Regex
mktemp Regex
mv File File
find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -print
grep -E Regex
grep -v Regex
xargs -I {} cat {}
sed Program
wc -l
diff -y File File
find Path -mmin -Quantity -type d
find Path -gid Regex -exec chown -h Regex {} \;
rsync --recursive File File
find Path -name Regex
find Path -name Regex -exec awk Program {} \;
find Path -mtime +Timespan -print
find Path -name Regex -ctime +Timespan -exec rm -f {} \;
find Path ! -name Regex -exec compress -f {} \;
md5sum File
grep Regex
sed -n Program
echo Regex
column -t
find Path -type f -name Regex -print0
xargs -0 -I {} sed -i Regex Program {}
find Path -newerct Regex -print
find Path -anewer File
find Path -iname Regex
echo Regex
rev
cut -d Regex -f Number
rev
find Path -newer File
find Path -iname Regex
cat File
sort -r -h
find Path -maxdepth Quantity -name Regex
find Path -type d -perm Permission -print -exec chmod Permission {} \;
find Path -name Regex
paste -s -d Regex File
find Path -type f -exec ls -s {} \;
sort -n
head - Quantity
cp -v -i $( uname -r ) File
find Path -type f
xargs -I {} mv {} File
$( dirname $( readlink -e File ) )
mkdir Directory
find Path -name Regex -exec tar -u -f File {} +
find Path -type f -iname Regex -exec file {} +
grep Regex
find Path -exec echo -n Regex \;
chmod Permission File File
find Path -perm Permission -type f -exec ls -l {} \;
find Path -mtime -Timespan
find Path -iname Regex -exec rm -r -f {} \;
find Path -type d -printf "newdir/%P\0"
xargs -0 -I {} mkdir -p {}
sed Program File
column -s Regex -t
find Path -type f -exec chmod Permission {} \;
ifconfig
grep -E Regex
grep -v Regex
awk Program
cut -f Number -d Regex
tail -f Regex
grep --line-buffered Regex
find Path -name Regex
rm -r -f File File File File File File
find Path -size Size
find Path -name Regex -type d
rename Regex
find Path -type f -empty
find Path -name Regex
find Path -iname Regex -atime +Timespan
date -d Regex
ifconfig
grep Regex
grep -v Regex
grep -E -o Regex
head - Quantity
curl Regex Regex
tr -d Regex
w
awk Program
sed Program
md5sum File
cut -f Number -d Regex
find Path -name Regex -exec grep -i Regex {} \; -print
find Path -type f -mtime Timespan -exec rm -f {} \;
seq Number
sed Program
find Path -name Regex -exec rm {} \;
find Path -maxdepth Quantity -type f -perm -Permission
find Path -type f -name Regex
xargs -r -I {} rename Regex {}
find Path -type f -iname Regex
history
cat File
grep -c Regex
rmdir Directory Directory
find Path -maxdepth Quantity -type f
ls -l File
wc -l
find Path -name Regex -exec grep -H -n Regex {} \;
find Path -type f -name Regex ! -perm Permission
find Path -name Regex
sed Program File
split -l Quantity File Regex
find Path -type f -size Size -print
xargs -I {} rm {}
find Path -size +Size -size -Size
zcat Regex
cut -f Number -d Regex
sort
uniq -c
sort -n
find Path -name Regex
xargs -I {} ls -l {}
find Path -daystart -mtime -Timespan -and -mtime +Timespan
sed -e Program Program
split -n Quantity File
find Path -type f -name Regex -print
xargs -I {} rm {}
find Path -type f -exec rm {} +
chown Regex File
gzip -d Regex
find Path -type d
xargs -I {} chmod Permission {}
find Path -size Size
find Path -name Regex -print -or -path Regex -prune
cp File $( uname -r )
find Path -name Regex -print
find Path -type f \( -name Regex -or -name Regex \)
find Path -type f -iname Regex
find Path -follow -uid Regex -print
find Path -type f -size +Size -print
xargs -I {} ls -l -d {}
more
sed -i Program File
cd Directory
ls -l File
sed Program
find Path $( uname -r ) -regex Regex
find Path -type f -exec rm {} \;
find Path -type f -exec wc -l {} \;
awk Program
find Path -path Regex -type d -delete
bind Regex
find Path -type f \( -name Regex -or -name Regex \)
history
head -n Quantity
tail -n Quantity
find Path
grep Regex
tr Regex Regex
xargs -0 -I {} cp {} File
zcat Regex
wc -l
awk Program Program
find Path -name Regex
find Path -mtime -Timespan
xargs -I {} ls -l -d {}
find Path -type d -name Regex -exec touch File \;
chmod Permission $( find Path -type f -print )
find Path -type f -name Regex
xargs --replace Regex -I {} sed --in-place Regex Program {}
tar -c File
md5sum
find Path -perm -Permission -print
echo Regex
tee File
find Path -name Regex -prune -or -print
wc File
ls File
find Path -name Regex -daystart -mtime +Timespan -mtime -Timespan
find Path -type f -name Regex
find Path -type f -iname Regex -print0
du -c --files0-from File
find Path -name Regex Path Path
zcat Regex
split -d -l Quantity -a Quantity File Regex
find Path -print0 -iname Regex
tar -c -v -f File -T File
find Path -name Regex -exec echo {} \;
mv File File
dirname $( find Path -name Regex
grep Regex )
find Path -type f -name Regex -size +Size -exec rm {} \;
find Path -user Regex -type f -amin -Quantity -name Regex
cat File
xargs -n Quantity -I {} ping -c Quantity {}
yes Regex
gunzip Regex
find Path -group Regex -print
find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \;
find Path -ctime +Timespan
find Path
xargs -I {} wc -l {}
find Path -type f -empty -delete
zcat Regex
grep -o Regex
sort
uniq -c
sort -n
chgrp -R Regex File
find Path -type f -exec echo Regex Regex Regex {} \;
mkdir Directory
bzip2 -d -c File
tar -x -v -f File File
find Path -type f -not -name Regex
find Path -maxdepth Quantity -xdev -type f -print -exec grep -i Regex -q {} \;
find Path -type f \( -name Regex Path -name Regex \) -delete
find Path -type f -name Regex -exec grep --with-filename Regex {} \;
date -u -I seconds
find Path -type f -perm Permission -print
find Path -atime +Timespan -ok rm {} \;
find Path -print0
xargs -0 -I {} rm {}
find Path -name Regex
chgrp -R Regex File
find Path -name Regex
find Path
find Path -type f -exec mv -v {} File \;
rsync -a -z File File
find Path -name Regex
find Path -type d -empty -exec cp File {} \;
find Path -empty
find Path -name Regex -exec ls {} \;
find Path Path -lname Regex
find Path -name Regex -exec mv {} File \;
find
wc -l
rsync -a -v -z File File
find Path -type f -iname Regex -exec rename Regex {} \;
find Path -group Regex -iname Regex
ls -d -1 File
nl
find Path -name Regex -exec rm {} \;
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type f
xargs -I {} grep -l Regex {}
cpio -p -V Regex
chgrp Regex File
find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -print0
xargs -0 -I {} file -I -n {}
grep -v Regex
cut -d Regex -f Number
xargs -0 -I {} sed -i Program File File {}
find Path -exec ls {} +
join -t Regex <( sort File ) <( sort File )
find Path -print0 -name Regex
xargs -I {} -0 mv {} File
chmod Permission File File File
cat File
nl
sed -n Program
grep -i -n Regex
awk Program
find Path -type f -exec ln -s {} \;
find Path -name Regex -atime +Timespan -print
xargs -I {} rm {}
dig Regex Regex @resolver1.opendns.com
find Path -iname Regex -exec grep -l Regex {} \; -and -exec cp {} File \;
find Path -ls
awk Program
find Path -name Regex
xargs -I {} cat {}
wc -l
find Path -gid Regex -exec chown -h Regex {} \;
find Path -name Regex
xargs -I {} grep -L Regex {}
find Path -name Regex -exec rename Regex {} \;
find Path -name Regex -printf "%f accessed %AF %Ar, modified %TF %Tr\n"
find Path -printf "%s %p\n"
crontab -e
find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -l {} \; -exec sed -i Program {} \;
who
find Path -type f ! -newer File ! -samefile Regex -delete
mkdir -p $( seq -s Regex Number )
find Path ! -path Regex
find Path -name Regex
basename Regex
find Path -name Regex -maxdepth Quantity
find Path -depth -type d -print0
xargs -0 -I {} rmdir {}
shopt -s histappend
rm File File
find Path -name Regex
dirname Regex basename Regex
tr Regex Regex
find Path -type d -print
sed Program
xargs -I {} mkdir -p {}
find Path -name Regex -print0
shopt -s failglob
find Path -iname Regex -type d
cat File File
crontab
find Path -name Regex -exec rm {} \;
echo Regex
cut -c Number
md5sum
jobs -x Regex Regex
echo Regex
echo $( cat )
curl Regex Regex
md5
find Path -type d -name Regex
tr Regex Regex
sed Program
find Path -type f -iname Regex
find Path -mtime -Timespan
join -j Regex -t Regex -o 2.1,2.2,2.4,1.3 <( sort File ) <( sort File )
find Path -name Regex
mount -o remount,size=40G Regex
find Path -ctime -Timespan -name Regex -exec mv {} File \;
find Path -name Regex -print
vim File
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
find Path -name Regex -size Size -delete
find Path -type d -mtime -Timespan -print0
xargs -0 -I {} mv -t Directory {}
find Path -maxdepth Quantity -name Regex -print0
grep -c -z Regex
set -e -x
ssh -S Path -O Regex Regex
find Path Path Path
mv File File
find Path
grep -E -v Regex
sort
ping Regex -n Regex
grep Regex
awk Program
sed Program
cd $( find Path -maxdepth Quantity -type d
grep Regex )
find Path -depth -print
cpio -o -O Regex
df -P File
awk Program
mount -o remount,rw Regex
ping Regex
awk -F Regex Program
find Path -type f -group Regex
chmod +Permission File
find Path -type f -regex Regex
xargs -I {} rm {}
set -H
find Path -type f -size +Size -print -name Regex -exec rm {} \;
find Path -atime Timespan
basename -a Regex
find Path -name Regex -print
find Path -user Regex -perm -Permission -print
find Path -name Regex -exec grep Regex {} \;
set
grep Regex
cut -d Regex -f Number
find Path -type d -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -name Regex -exec chmod Permission {} \; -exec echo {} \;
wc -l
find Path -type d -name Regex -exec chmod Permission {} \; -prune
ping -W Quantity -c Quantity Regex
grep Regex
find Path -nouser -print
cd
find Path -prune -empty -type d
find Path -type f -name Regex
find Path -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -newer File
ls
grep Regex
nl
grep -o Regex File
sort
uniq -c
sort -n -r
find Path -type d -mtime +Timespan -exec compress File {} \;
env
grep Regex
find Path -type f
wc -l
find Path -user Regex -print
find Path -type f
grep -i Regex
find Path Path Path Path -type d -exec cp File {} \;
find Path -type d
sed -r Program
od -t uI -N File File
awk Program
find Path -type f -name Regex -exec md5sum {} +
awk Program
sort
md5sum
rsync -a -v -l -z -p File File
find Path -type f -regex Regex
wc -l
find Path -not -path Regex -type d -exec mkdir -p -- Directory \;
find Path -type f
ls File
xargs -L Quantity -I {} chown Regex {}
find Path -type d -name Regex -exec rm -r {} \;
find Path -not \( -path Regex -prune \) -name Regex
source $( dirname Regex )
cat $( uname -r )
set
grep Regex
find Path -user Regex -iname Regex
find Path -type f \( -name Regex ! -name Regex ! -name Regex \)
split -b Size File Regex
find Path -perm Permission -iname Regex
find Path -name Regex -print
mkdir Directory
find Path -mtime -Timespan
find Path -name Regex
ping -s Quantity Regex Regex
comm -2 -3 <( sort File ) <( sort File )
split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex
find Path -type d -exec rmdir Directory \;
find Path -type f -print
xargs -I {} grep Regex {}
find Path -mtime Timespan
set -o noclobber
find Path -perm Permission -type f -exec ls -l {} \;
find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%TY %p\n'
find Path -iname Regex -exec grep Regex {} \; -print
find Path -name Regex -newer File
which Regex
xargs -I {} ls -l {}
find Path -exec curl Regex Regex Regex {} Regex \;
find Path -daystart -ctime Timespan -type f
find Path -type f -print0
sed Program File
less
nl
sort -t Regex -k Number -k Number File
split -l Quantity File
find Path -mindepth Quantity -maxdepth Quantity -print0
xargs -0 -I {} mv --target-directory Directory {}
find Path -group Regex -perm -Permission -print
mkdir Directory
sed -e Program
find Path -name Regex -exec rm -r -f {} +
du -s -k $( find Path -type d )
sort -n -k Number
find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -execdir echo Regex \;
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type f -name Regex
find Path -iname Regex
find Path Path -name Regex -type f
cd $( which Regex
xargs -I {} dirname {} )
find Path -mindepth Quantity -maxdepth Quantity
find Path -ipath Regex
find Path -newer File
find Path -mtime Timespan
ssh -q Regex command
rm File
gzip -l Regex
find Path -type f -exec grep -i Regex {} +
find Path -path Regex -or -path Regex
cpio -p -a -d -l -u -v Regex
du -h -D -a -x -d Quantity File
sort -h
tail -n Quantity
find Path -name Regex -exec rm -f {} \;
echo $( dirname $( readlink -e File ) )
env -i Program Program
find Path
find Path -type f
env -i Program Program
find Path -type f -printf '%s %p\n'
find Path -type f -name Regex
xargs -I {} sed -i Program {}
find Path -iname Regex
find Path -name Regex
find Path -name Regex
cd $( uname -r )
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -user Regex
ssh -o ControlPath="$MASTERSOCK" -M -N -f Regex
find Path -type f -daystart -mtime Timespan
find Path -name Regex -exec grep -i -q Regex {} \; -exec grep -i -q Regex {} \; -print
nl -n rz -w Quantity File
find Path -maxdepth Quantity -type d \( ! -name Regex -and ! -name Regex -and ! -name Regex -and ! -name Regex \) -delete
find Path -type d -exec mkdir Directory \;
find Path -maxdepth Quantity -iname Regex
gunzip Regex
find Path -name Regex
find Path -type f -printf "f %s %p\n"
set -o history -o histexpand
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -size +Size -exec ls -l -h {} \;
find Path -name Regex -type f -print0
sort -z -u
xargs -0 -I {} cp -t Directory {}
mkdir Directory
find Path -print
xargs -I {} grep Regex {}
tail - Quantity File
find Path -name Regex -exec wc -l {} \;
echo $( basename Regex )
find Path -name Regex
xargs -I {} mv {} $( basename {} Regex ) File
find Path -type d -exec mkdir -p Directory \;
ls
xargs -I {} rmdir {}
dig Regex -f File
find Path -iname Regex -exec echo {} \; -or -iname Regex -exec echo {} \;
sort -u -t Regex -k Number File
find Path -type d -iname Regex -ls
find Path -name Regex -type f
find Path -type d
cpio -p -d Regex
find Path -size +Size -exec ls -l {} \; -print
ssh -i File Regex
find Path -size +Size -type f
xargs -r -I {} ls -S -s -h {}
find Path -type f Path -print
set
cut -d Regex -f Number
grep Regex
ls -l
head - Quantity
tail - Quantity
tail -n +Quantity File File File
gunzip -l Regex
find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0
xargs -0 -I {} sed -i Program File File {}
find Path -atime +Timespan -ok rm {} \;
find Path -name Regex
find Path -mtime +Timespan -type d
xargs -I {} rm -f -r {}
echo Regex
sed -e Program -e Program
column -t
find Path -mtime Timespan
find Path -type l -xtype l
comm -2 -3 <( sort -n File ) <( sort -n File )
find Path -type l -exec file {} \;
grep Regex
find Path -type f -exec rm -f {} +
tmux -V
cut -c Number
find Path -mtime Timespan
find Path
xargs -I {} grep Regex {}
join -t Regex File File
awk -F Regex Program
yes
cp -r -f File File
find Path -L -type l
find Path -iname Regex -exec tar -r -v -f File {} \;
man Regex
less -I -p File
gzip -d -c Regex
tar -x -f File -C Directory
find Path -type d
find Path -name Regex
xargs -I {} grep -L Regex {}
find Path -name Regex -print0
find Path -mtime +Timespan -print
mkdir -p Directory
find Path -maxdepth Quantity -name Regex
find Path --help
diff -q <( sort File ) <( sort File )
ls -d File
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
split -b Size File
find Path -type f -name Regex -exec grep -s Regex {} \; -print
find Path -iname Regex -exec cp -r {} File \;
join -t Regex File File
find Path -perm Permission
find Path -type f -exec sed -i Program {} +
find Path -type f
cat File
grep -i Regex
wc -l
chmod -R Permission File
find Path
grep Regex
xargs -I {} cp {} File
diff File
grep Regex
find Path -type f -exec wc -l {} \;
awk Program
find Path -atime +Timespan
find Path -type d -iname Regex -print0
xargs -0 -I {} rmdir {}
find Path -name Regex -exec grep -l -- Regex {} +
find Path -name Regex -type d
find Path -size -Size
zcat Regex
awk -v Program Program
which Regex
find Path -name Regex
xargs -I {} grep -E Regex {}
ping -c Quantity Regex
awk Program
readlink File
echo -n Regex
od -x
find Path -type f -name Regex -print0
xargs -0 -I {} rm -v {}
find Path -perm Permission
diff File File File
find Path -type d
find Path -type f
find Path -size +Size -type f
find Path -type f
xargs -I {} sort -o File {}
find Path -name Regex -or -name Regex -type f
sort
head -n Quantity
find Path -cmin -Quantity
find Path -depth -type d -empty -exec rmdir {} \;
find Path -type d -ls
find Path -user Regex -not -size +Size
uname -r
find Path -name Regex
xargs -I {} tar -z -c -f File {}
find Path -size +Size
find Path -perm Permission
tar -x -z -v -f File
find Path -name Regex
find Path -size +Size -size -Size -print
ln -s File Regex
find Path -type d -printf '%p:'
pushd Directory
find Path Path -print Path
find Path -exec ls -l -d {} \;
find Path \( -name Regex -or -name Regex \) -atime +Timespan -exec rm {} \;
find Path -mmin -Quantity -not -name Regex
rm -r -f File
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
od -x -c File
grep -o Regex File
head -n Quantity
find Path -name Regex -print0
xargs -0 -I {} ls {}
dig -x Regex
find Path -size +Size -name Regex -exec rm -r -f {} \;
ls -i File
cut -d Regex -f Number
bind -P
find Path Path -name Regex -type f -exec chmod Permission {} \;
find Path -type f -not -name Regex
find Path -name Regex -exec grep -i Regex {} \;
find Path -type f -exec grep -I -q Regex {} \; -and -print
find Path -size Size
find Path -type f -mtime +Timespan
tee File
xargs -I {} -P Quantity compress {}
find Path -iname Regex
find Path -name Regex
read -p Regex Regex
finger -s
awk Program
sort -u File
find Path \( -name Regex -or -prune \)
find Path -name Regex
find Path -size +Size
find Path -name Regex
find Path -type f -exec grep -i -l Regex {} \;
date -d $( date +%F ) +%s
find Path -mnewer File
find Path Path -name Regex -type d -print
find Path -type d
tr Regex Regex
sed Program
find Path ! -name Regex -type d
find Path -type f
xargs -I {} grep Regex {}
echo $( cal DateTime DateTime )
cp $( find Path -perm -Permission -type f ) File
find Path -type d -name Regex -print
find Path -name Regex -print0
xargs -0 -I {} grep Regex {}
mv File
find Path -name Regex -exec md5sum {} \;
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
ssh Regex command
find Path -type f -exec grep -q -i -F Regex File \; -print
find Path -user Regex -mtime Timespan
find Path -mtime Timespan -name Regex -print
find Path -name Regex
ls
column -c Quantity
find Path -type f -exec chmod Permission {} \;
ssh -i File Regex
find Path
find Path -iname Regex
find Path -type f
ssh Regex -L Regex -N
find Path -type f -mmin -Quantity
xargs -r -I {} ls -l {}
find Path -user Regex
find Path -user Regex -print
find Path -maxdepth Quantity -name Regex
cat -n File
join -t Regex -j Regex <( sort File ) <( sort File )
find Path Path
ls -F -l -t -r File File
mktemp $( dirname Regex )
gzip
source <( wget -q -O File Regex )
find Path -type f -print0
xargs -0 -I {} awk Program {}
shopt -u dotglob
find Path -type f -not -iname Regex -exec cp {} File \;
echo Regex
column -t
fold
column -t
find Path -type f -name Regex -mtime -Timespan -exec gzip -9 -f {} \;
find Path -type d
find Path -maxdepth Quantity -type d
crontab -l
sed -r -e Program
crontab File
read -r -d Regex
find Path -perm -Permission -exec chmod Permission {} \;
find Path -size +Size -iname Regex
find Path -atime Timespan
find Path -type l
find Path -name Regex -type f -mtime +Timespan -delete
ln -s File Regex
find Path
xargs
find Path -type f -exec chmod Permission {} \;
find Path -type f -exec grep -l Regex {} +
find Path -type f -exec sed -i Program {} +
find Path -type d
sed Program
tr Regex Regex
sed Program
finger Regex
ifconfig
sed -n Program
rsync -a File File
cat <( grep -F -i -v Regex <( crontab -u Regex -l ) ) <( echo Regex )
crontab -u Regex File
find Path ! -regex Regex
find Path -atime Timespan
find Path -type f -atime +Timespan -exec rm {} \;
find Path -inum Quantity -exec rm -i {} \;
find Path -depth -print
cpio -d -u -m -p Regex
find Path -atime Timespan -print
find Path -type f -name Regex -printf "%s\n"
awk Program
uname -a date
ls -1
tr Regex Regex
sort
uniq -c
grep -v Regex
find Path -maxdepth Quantity -name Regex -maxdepth Quantity
xargs -I {} rm {}
ln -s $( pwd ) Regex
df -k File
find Path \( -name Regex -or -name Regex \) -and -ctime -Timespan -exec ln {} Regex \;
mktemp
find Path $( pwd ) -type f
xargs -I {} sed -i Program {}
find Path -name Regex
find Path -size +Size
find Path -type f -mtime -Timespan -exec echo {} +
find Path -type f -name Regex -print
tar -z -x -v -f File
find Path
grep -E -v Regex
xargs -I {} rm {}
find Path -type f -printf "%C@ %p\n"
sort -r -n
head -n Quantity
find Path -type d
paste -d Regex -s
find Path -type f -perm Permission
wc -l
find Path -type f
wc -l
du -k -s File
sort -n -r
tac File
sed Program
tac
find Path -name Regex -print0
xargs -0 -I {} wc -l {}
grep -v Regex
awk Program
ln -s $( pwd ) Regex
cat File
grep Regex
paste -s -d Regex
find Path -name Regex -exec rm {} \;
find Path -daystart -mtime Timespan
diff <( zcat Regex ) <( zcat Regex )
find Path -type f -print0
xargs -0 -I {} ls -d -r -t {}
tail -n Quantity
touch $( cat File )
comm -1 -2 File File
wc -l
find Path -iname Regex
find Path -name Regex
xargs -I {} gunzip -v -t {}
find Path -name Regex -or -name Regex
find Path -user Regex -mtime Timespan -iname Regex
cd $( echo Regex
sed Program )
diff -y File File
diff -N -a -u Quantity File File
find Path -type f
sort
cal
awk Program
find Path -path Regex -print
find Path -path Regex -prune -or \( -type f -print0 \)
ln -s $( readlink -f File ) Regex
echo $( basename Regex )
mv -f File File
env -i
find Path -name Regex
read -r Regex
rsync -v -a -u -t File File File
find Path -type f -maxdepth Quantity -not -empty -print0
xargs -0 -i -I {} cp File {} {}
read -p Regex -r Regex
find Path -depth -name Regex -execdir rename Regex {} \;
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -name Regex
find Path
echo -e Regex
paste File File
column -t
find Path -name Regex -print0
xargs -0 -I {} du -c -h {}
tail -n Quantity
find Path -name Regex -printf '%h\n'
sort --unique
find Path -mindepth Quantity -iname Regex
find Path -maxdepth Quantity -name Regex -print Path
basename Regex
find Path -type f -name Regex
kill $( pstree -p Regex
sed Program
grep Regex
sed Program
tr Regex Regex )
find Path -print0
xargs -I {} -0 echo {}
find Path -maxdepth Quantity -type f
find Path -ls
awk Program
find Path -mtime -Timespan -print
tar -I File -c -f File File
w
cut -d Regex -f Number
mkdir -p $( echo -e Regex
sed Program )
which Regex
find Path -user Regex -ok rm {} \;
find Path -name Regex
find Path -type f -exec wc -l {} +
find Path -name Regex -mtime +Timespan
find Path -iname Regex
$( mktemp -u )
find Path -name Regex -exec rm {} \;
find Path -name Regex
xargs -I {} vim {}
find Path -maxdepth Quantity -name Regex -prune -or -print
rsync File File File
source <( grep Regex File )
comm -1 -2 <( ls File ) <( ls File )
find Path -type f -name Regex -exec grep -H -c -m Quantity Regex {} +
sed -n Program
find Path -type d -name Regex -prune -or -name Regex
tail -n +Quantity File
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
pstree
find Path -type f -print0
xargs -0 -I {} grep -l -i -w -Z Regex {}
xargs -0 -I {} rm -f {}
find Path -mindepth Quantity -type f -execdir mv {} File \;
find Path -type b -name Regex -print
find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and \( -size +Size -fprintf File '%-10s %p\n' \)
find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex -ls
find Path -type d -printf '%T+ %p\n'
sort
find Path -group Regex
find Path -type f -name Regex -exec rm {} \;
diff -r -q File File
grep -E Regex
sed -n Program
awk Program
find Path -iname Regex
diff -a -r -q File File
chown Regex File
find Path -name Regex -type d
od --read-bytes Size File
find Path -name Regex -exec ln -s {} Regex \;
chmod -R Permission File
find Path -mtime -Timespan -type f -name Regex -exec ls -l {} \;
find Path -type f -mtime -Timespan
find Path -exec grep Regex {} +
find Path Path Path Path -name Regex -type f -ls
find Path -type f -exec ls -1 {} \;
join -t Regex <( sort File ) <( sort File )
join -t Regex File <( sort File )
join -t Regex File <( sort File )
find Path -type d
tar -x -v -f File File
find Path -prune -empty
cat File
wc -l
find Path -name Regex
xargs -I {} gunzip {}
find Path -type f -printf '%p %s\n'
awk Program
find Path -regextype posix-ergep -regex Regex -exec grep -l Regex {} \;
find Path -perm -Permission -type f -exec ls -l {} \;
find Path -print
find Path -iname Regex
ln -s File Regex
mkdir Directory
tac File
sed -n Program
scp -P Regex File File File File File File
split -l Quantity File
find Path -type f -print
xargs -I {} grep -n -i Regex {}
find Path -type f -exec ln -s {} Regex File \;
find Path ! -newer File -exec touch {} \;
find Path -name Regex
find Path -mtime -Timespan
find Path -type d -exec chmod Permission File \;
find Path ! -name Regex ! -path Regex ! -path Regex -exec rm -r -f {} \;
find Path -type f -mmin -Quantity
xargs -I {} ls -l {}
df -P
chown -R Regex File
chgrp Regex File
find Path -type d -print0
read -t Quantity -n Quantity -p Regex Regex
yes
rm -r File
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -exec rm -f {} +
find Path -path Regex -prune -or -type f -print
ssh Regex -L Regex -N
mkdir Directory
find Path -type f -ctime -Timespan
grep -E -m Quantity -n Regex File
sed Program File
sed Program File
sed -f File Program
rev File
cut -d Regex -f Number
rev
echo Regex
grep -E -o Regex
cut -d Regex -f Number
find Path -uid Regex -print
find Path -user Regex
find Path -name Regex -maxdepth Quantity -exec rm -f {} \;
find Path -type d \( ! -wholename Regex ! -wholename Regex \)
find Path -type f -name Regex -size +Size -exec rm {} \;
ls -d File
xargs -i Regex -I {} cp File File {}
echo $( pwd )
crontab
find Path -name Regex
xargs -i -I {} echo Regex Regex {} {}
find Path -name Regex -delete
awk -F Regex Program $( dirname $( readlink -f $( which Regex ) ) )
find Path -type f -print
find Path -type l -printf "%Y %p\n"
grep -w Regex
find Path -type f -print0
xargs -0 -I {} grep -l -i -w -Z Regex {}
xargs -0 -I {} rm -f {}
find Path -name Regex
xargs -I {} rm {}
find Path -maxdepth Quantity -name Regex -type d -print0
xargs -0 -r -I {} mv -t Directory {}
find Path -maxdepth Quantity -type f
find Path -type f -regex Regex
tree -D
find Path -type f -mtime +Timespan -exec rm {} \;
find Path -name Regex
xargs -n Quantity -I {} echo {}
find Path -name Regex -printf "%h\n"
echo Regex
xargs -I {} find {} -mindepth Quantity -maxdepth Quantity Path
find Path \( ! -regex Regex \) -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -amin -Quantity
paste -d Regex File File
paste -d Regex File File
sed Program
find Path -type d -regextype posix-egrep -regex Regex
find Path -name Regex -size -Size
find Path -not -name Regex
find Path -name Regex
readlink -f $( which Regex )
jobs -l
tr Regex Regex
find Path -name Regex
seq Number
awk Program
find Path -mtime -Timespan
find Path -name Regex
grep Regex File
nl
find Path -type f
find Path -type f -ctime Timespan
find Path -type d -exec chmod +Permission {} \;
find Path -size +Size -ls
find Path -name Regex -exec ls {} \;
find Path -iname Regex -type d
find Path -name Regex -exec grep -l -- Regex {} +
read -r -s -p Regex
ls -d File
cd $( pwd -P )
split --lines Quantity
find Path -name Regex
find Path -type f -name Regex
find Path -name Regex
xargs -I {} wc -l {}
find Path -maxdepth Quantity -name Regex -exec rm {} \;
history -r Quantity
split --bytes Size File Regex
find Path \( -name Regex -or -name Regex \) -print0
xargs -0 -I {} grep -H -i -n Regex {}
find Path -name Regex -print0
du -h -c --files0-from File
rsync -a -H -v -z File File
find Path -mmin Quantity
comm -1 -3 File File
df -H
find Path -name Regex -exec rm -v {} \;
find Path Path -size +Size -atime +Timespan -print
find Path -name Regex -exec chmod Permission {} \;
echo $( hostname )
find Path -type f -perm Permission
cd $( cat File )
find Path -regex Regex
find Path
chown -R $( whoami ) File
ssh Regex -l Regex
find Path -type f -name Regex -exec rm {} File \;
find Path -maxdepth Quantity -type d -user Regex -perm -Permission
sort -u -o File File
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -iname Regex
mount Regex Regex -o bind
find Path -user Regex -iname Regex
find Path -name Regex -print0
xargs -0 -I {} grep Regex File {}
find Path -print0
grep -v -E -z -Z Regex
ps -e -o rss=,args=
sort -n -r
head
echo Regex
tr Regex Regex
grep -c Regex
who
cut -d Regex -f Number
sort -u
find Path -type l -print0
xargs -r -0 -I {} file {}
grep Regex
sed -e Program
find Path -type f -name Regex -exec sed Program {} \;
find Path -name Regex
xargs -I {} cp -a -v --target-directory Directory --parents {}
date +%Y-%m-%d:%H:%M:%S
find Path -name Regex
finger
cut -d Regex -f Number
sort -u
find Path
rsync -a --include Regex --exclude Regex File File
find Path -type f -name Regex -delete -printf "%h\0"
xargs -0 -r -I {} rmdir {}
find Path -not -name Regex -print0
xargs -0 -I {} chown Regex {}
find Path -name Regex -exec vim {} +
ls -F -l -t -r File
find Path -type f -name Regex
grep Regex
uname -v
grep -o Regex
find Path \( -size +Size -fprintf File '%-10s %p\n' \)
ssh -o UserKnownHostsFile=/dev/null Regex
df --total
find Path -group Regex -or -nogroup -print0
xargs -0 -I {} chown Regex {}
find Path -maxdepth Quantity -name Regex
find Path -name Regex -type l
find Path -type f -print0
xargs -0 -I {} sed -i Regex -e Program {}
df -k
find Path -size Size
find Path -type f -mtime +Timespan
xargs -r -I {} ls -l {}
date -d Regex +"%a %d/%m/%Y"
comm <( sort -n File ) <( sort -n File )
bind -x Regex
ls File
wc -l
find Path -name Regex
find -L Path -type l -delete -exec ln -s File {} \;
find Path -type f -print0
xargs -0 -I {} find Path -type f -exec diff -q -s --from-file File {} +
echo Regex
fold -w Quantity
sort -u
chgrp -R Regex File
mkdir -p Directory
find Path -perm Permission -print
find Path -type f -atime +Timespan -print
find Path -xdev -name Regex
find Path -type l -print
echo $( date ) Regex
find Path -type f -regex Regex -exec ls {} \;
find Path -type d -empty
find Path -name Regex
find Path -user Regex -iname Regex
find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -prune -or -print
find Path -name Regex
find Path -user Regex -type f -amin -Quantity -name Regex
find Path -depth -name Regex -exec rename Regex {} +
find Path -name Regex -exec ls -l {} \;
find Path -name Regex -print
cat File
xargs -I {} -d Regex -n Quantity grep -r {}
find Path -type f -atime +Timespan -exec rm {} \;
rm -f File File
find Path -type f -not -name Regex -print0
xargs -0 -I {} rename Regex {}
cat File
fold -s -w Quantity
head - Quantity
rsync -a -v -e File File
comm -2 -3 <( sort File
uniq ) <( sort File
uniq )
head - Quantity
find Path -type f -exec grep -l Regex {} \;
find Path -type f -name Regex
find Path -print0
xargs --null
file File
grep Regex
find Path -mtime Timespan
find Path -type f
find Path -maxdepth Quantity -type f -newermt Regex ! -newermt Regex -exec echo {} +
mv File File
find Path -group Regex
head
ls -d -1 File
find Path -type d -perm Permission -print -exec chmod Permission {} \;
find Path ! -user Regex
cd $( find Path -maxdepth Quantity -type d -name Regex
sort -t Regex -k Number -n -r
head - Quantity )
cat File File
sort -u
sed -i Program File
mount -o remount,ro Regex
find Path -mtime +Timespan
find Path -not -empty -type f -exec ls -s {} \;
sort -n
head - Quantity
tac File
awk Program
find Path -path Regex -prune -or -print
cal -m DateTime DateTime
awk Program
rm -f -R File
find Path -type d -mtime +Timespan -exec rm -f {} \;
find Path -name Regex
env
find Path -noleaf -wholename Regex -prune -or -wholename Regex -prune -or -wholename Regex -prune -or -perm -Permission ! -type l ! -type s ! \( -type d -perm -Permission \) -print
dirname $( readlink -f File )
find Path -maxdepth Quantity -type d
xargs -I {} mkdir Directory
sort File File
uniq -d
find Path -type f -empty
wc -l
find Path -name Regex
find Path -name Regex -exec grep -H Regex {} +
find Path -iname Regex
less
find Path
grep Regex
xargs -I {} cp {} File
set -o pipefail
md5sum File
find Path -maxdepth Quantity -type f -exec ls -l {} \;
find Path -exec echo {} \;
find Path -perm Permission
find Path -perm Permission
find Path -type f \( -ctime Timespan -or -atime Timespan -or -mtime Timespan \) -printf "./%P\n"
find Path -size +Size -exec ls -l -d {} \;
find Path -name Regex -print0 -type f
xargs -0 -I {} grep Regex {}
find Path -mtime +Timespan -type f -ls
cp $( which Regex ) File
find Path -type f -name Regex -printf '%s %p\n'
sort -n -r
head -n Quantity
find Path -type f -exec file -N -i -- {} +
sed -n Program
sort File
uniq -c
sort -b -g -r
find Path -type f -iname Regex -exec  \;
find Path -name Regex -exec grep -H Regex {} \;
find Path -iname Regex
find Path -type d -name Regex -exec rmdir {} \;
df -i
find Path -path Regex -print
history
cut -c Number
ls
xargs -I {} echo Regex
xargs -I {} echo {}
find Path -type f -mtime +Timespan
sed Program
tree -i -f
grep Regex
xargs -n Quantity -I {} grep -n -H Regex {}
find Path ! -path Regex -and ! -path Regex
tr -s Regex
cut -d Regex -f Number
find Path -wholename Regex
awk Program
who
cut -d Regex -f Number
grep -e Regex -e Regex
find Path -name Regex
xargs -I {} gzip -l {}
tail -n +Quantity
head -n -Quantity
sort -k Number
tail -n Quantity
awk Program
find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n Quantity
find Path -type d -print
sed -e Program -e Program
xargs -I {} chmod Permission {}
find Path -name Regex
mount -a
find Path -name Regex
echo Regex
tr Regex Regex
tail -n Quantity
find Path -type f -exec sed -i Program File File {} \;
find Path -name Regex -print0
false
find Path -name Regex -exec grep Regex {} +
find Path $( pwd ) -name Regex -print
find Path -type f -perm -Permission -printf '%p has world write -permissions\n'
grep -n Regex File
head -n Quantity
hostname
find Path -name Regex -prune -or -name Regex -type f -print
find Path -size Size
find Path ! -size Size
find Path -name Regex -or -name Regex -or -name Regex
who --ips File
grep Regex
find Path -iname Regex
ln -s -- File Regex
find Path -name Regex -print
which Regex
find Path -name Regex -print0
find Path -type f -size +Size -not -iname Regex
find Path -type f -user Regex
find Path -name Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -amin -Quantity
bzip2 -k -v File
cat $( echo Regex
sort )
md5sum
find Path -name Regex -exec rm {} \;
find Path \( -iname Regex -or -iname Regex -or -iname Regex \) -ls
awk Program
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -user Regex -print
comm -2 -3 <( echo Regex
sort -u ) <( echo Regex
sort -u )
grep -v Regex
date -d Regex +"%Y-%m-%d %H:%M:%S"
ln -s -f File Regex
find Path -type f
xargs -I {} ls -l -t -r {}
tail -n Quantity
find Path -type f -newermt Regex ! -newermt Regex
find Path -name Regex -exec gunzip {} \;
find Path
xargs -n Quantity -I {} echo {}
find Path -name Regex
find Path -type f -wholename Regex -print0
find Path -maxdepth Quantity -type d
xargs -I {} mkdir Directory
find Path -daystart -mtime -Timespan -type f ! -mtime -Timespan -printf '%Tm %p\n'
find Path -name Regex -size +Size -print
find Path -type d ! -perm -Permission
cat File
tr -d -C Regex
find Path -mindepth Quantity
chown -R Regex File
find Path -name Regex -type f -print
xargs -I {} tar -c -v -z -f File {}
sort -b -n -k Number File
read -e -p Regex Regex
mktemp -d -t
comm -1 -2 <( sort -u File ) <( sort -u File )
wc -l
find Path -name Regex
find Path -mtime -Timespan -print
find Path -name Regex -and -not -path Regex
who
awk Program
sort
uniq -c
sort -n
find Path -type f -prune -name Regex -print
tree
tail - Quantity
find Path -exec file {} \;
grep Regex
cut -d Regex -f Number
find Path -maxdepth Quantity
find Path -maxdepth Quantity -name Regex
tail
find Path -maxdepth Quantity -name Regex -print0
xargs -0 -I {} rm {}
find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -q {} \; -print0
xargs -0 -I {} sed Program {}
find Path -type f -name Regex
find Path -regex Regex
find Path -perm Permission
find Path -amin -Quantity
echo Regex
md5sum
mktemp -d -t $( basename Regex )
find Path -type f -exec grep -i Regex {} \; -print
wc -l
find Path -exec rm {} +
diff -r -q File File
find Path -print
find Path -type d -name Regex
dig Regex Regex A
grep Regex
grep -v Regex
find Path -type f -name Regex -print0
xargs -I {} -0 grep -H --color "methodNameHere" {}
find Path -type d
find Path -mtime +Timespan -exec rm {} \;
find Path -maxdepth Quantity -name Regex
find Path -mtime Timespan
find Path -name Regex -exec rename -v Regex {} \;
tree -f -i
find -E Path -type f -regex Regex -exec ls {} \;
find Path -print -name Regex -prune
find Path -name Regex -exec rm {} \;
find Path ! -group Regex
find Path -name Regex
find Path -uid Regex
find Path -maxdepth Quantity -mindepth Quantity -regextype posix-egrep ! -iregex Regex ! -empty -type d
tree Directory
grep -R Regex File
more
find Path -type f -size +Size -delete
find Path -name Regex -or -name Regex
find Path Path -type f -exec chmod Permission {} \;
echo -n Regex Regex Regex $( hostname ) $( date )
ln -s File Regex
find Path -type f -name Regex -ctime -Timespan -exec sed -i Regex -e Program -e Program {} File \;
wc -l
find Path -name Regex
date --date Regex +"%Y"
find Path -type d -exec chmod Permission {} \;
uname -m
grep Regex
find Path -type f -name Regex -exec rm {} \;
split -l Quantity File Regex
find Path -perm Permission
mount
grep -q Regex
find Path -mtime +Timespan
find Path -type f -name Regex ! -name Regex -print
nl -b a File
chown Regex File
find Path -type f -iname Regex -print0
xargs -0 -I {} grep Regex {}
find Path -type l -print0
xargs -0 -I {} file {}
grep Regex
find Path -size +Size
ln -s -f $( readlink -f File ) Regex
find Path ! -name Regex ! -name Regex -exec grep Regex {} File \;
find Path -name Regex -mindepth Quantity -maxdepth Quantity -exec grep -E Regex {} +
wc -l
basename -- Regex
find Path -name Regex
ls -l
tail -n +Quantity
head -n Quantity
find Path -name Regex -exec rm {} \;
find Path -name Regex -empty -delete
find Path -type f -printf "%C@ %p\n"
sort -r -n
head -n Quantity
find Path -type d -empty
find Path ! \( -newer File -user Regex \) -print
find Path -type d -exec chmod Permission {} \;
readlink -f -n -- File
cat File
awk Program
find Path
grep -E Regex
xargs -I {} rm -r -f {}
head - Quantity <( sort File )
find Path -name Regex
find Path -exec sed -i Program {} \;
cat File
sort -t Regex -k Number -n
find Path -type f -mmin -Quantity
split --number Quantity File Regex
find Path -nouser
history
more
find Path -size +Size -exec rm -r -f {} \;
find Path -type f -mtime +Timespan -name Regex -exec cp {} File \;
find Path -user Regex
find Path -name Regex -or -name Regex -or -name Regex
find Path -user Regex -ls
find Path -regex Regex
find Path -name Regex -delete
find Path -newermt Regex ! -newermt Regex -print
find Path -name Regex
grep -v Regex
xargs -I {} grep -H -n Regex {} File {}
find Path -name Regex -type f -exec grep -q Regex {} +
find Path -size Size
cat File
paste -s -d File
su
find Path -name Regex -print0
xargs -I {} rm {}
find Path -atime -Timespan
find Path -type f -size -Size -exec rm {} +
ls -l --color always File
grep -E --color never Regex
find Path -name Regex -exec rm -r -f {} +
find -E Path -iregex Regex
cp -R File File
find Path -type f -printf %P\\n
sort
comm -3 File File
xargs -I {} rm {}
mount
column -t
split -l Quantity File
find Path -name Regex -mtime -Timespan
find Path -type f
find Path -group Regex -perm -Permission -print
find Path -name Regex -exec ls {} \;
cal DateTime DateTime
find Path -name Regex
find Path -user Regex -type f
find Path -size +Size
find Path -newer File -ls
find Path -wholename Regex -prune -and -print
tac File
sed Program
tac
find Path -name Regex -type f -print0
xargs -0 -n Quantity -I {} grep -H -n Regex {}
find Path -name Regex -type f -daystart -mtime +Timespan -mtime -Timespan
mkdir Directory
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -iname Regex -exec cat {} \;
find Path -name Regex \( -exec echo {} \; -or -exec true \; \) -exec grep Regex {} \;
echo $( date ) Regex
tee -a File
find Path -name Regex
mount -o remount,ro -t yaffs2 Regex Regex
find Path -type f -print0
xargs -0 -n Quantity -P Quantity -I {} bzip2 {}
find Path -daystart -ctime -Timespan
find Path -mtime -Timespan -print
sed Program File
find Path -name Regex
find Path -mindepth Quantity
mktemp $( dirname Regex )
find Path -size +Size -print
find Path -perm Permission
find Path -type f -name Regex -execdir chown Regex {} \;
find -mindepth Quantity -maxdepth Quantity Path
find Path -print
find Path -maxdepth Quantity -type d
shopt -s checkwinsize
rsync -a -v --files-from File --rsync-path Program File File
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -name Regex
find Path ! -name Regex -prune
find Path -nouser -print
find Path -size +Size -exec mv {} File +
split -l Quantity -d -a Quantity File
find Path Path -name Regex -type f -ls
comm -3 <( sort File ) <( sort File )
sed Program
echo Regex
tee -a File
find Path -name Regex
cpio -p -d Regex
find Path -type f -name Regex
sed -e Program
xargs -n Quantity -I {} grep -l Regex {}
sed -e Program
xargs -n Quantity -I {} rm -f {}
find Path -type f -perm Permission -exec ls -l {} \;
find Path -type f -perm -Permission
sed Program
find Path -type f
xargs -I {} grep -I Regex {}
find Path -name Regex -perm Permission -print
mkdir -p $( dirname Regex )
find Path -maxdepth Quantity -name Regex -print0
xargs -0 -I {} rm {}
find Path -perm Permission
find Path -mmin -Quantity
find Path -mindepth Quantity -type d -empty -delete
find -P Path -type l -exec echo -n Regex \; -exec readlink {} \;
find Path -type d -exec chmod Permission {} \;
ping -c Quantity -q Regex
grep -o -P Regex
join <( sort -n File ) <( sort -n File )
mkdir Directory
find Path -name Regex -exec ls {} \;
find Path -size -Size
find Path -name Regex
find Path -type f -exec chmod Permission {} \;
find Path -maxdepth Quantity -type d
sed Program
xargs -n Quantity -I {} mv {}
df File
grep Regex
find Path -type f -size -Size
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -type d
find Path -type d
find Path -atime +Timespan
dirname $( mktemp -u -t Regex )
find Path
grep Regex
grep Regex
find Path -name Regex
awk -f File Program
column -t
grep -n -i Regex File
wc -l
find Path -perm Permission
find Path Path
find Path -perm Permission
read -p Regex Regex
find Path -type f -empty
read -r -s -p Regex -d Regex
cpio -i Regex Regex
md5sum
ln File Regex
find Path -name Regex
grep -n Regex
find Path -name Regex -type f -print
xargs -I {} rm {}
basename Regex date "+%Y%m%d_%H%M"
find Path -type d -exec chmod Permission {} +
echo -n Regex
tr Regex Regex
find Path -iname Regex
readlink -f File
find Path -perm -Permission -print0
xargs -I {} chmod Permission {}
find Path -print0
xargs -0 -I {} cat {}
find Path -type f -exec cp -t Directory {} +
find Path -type l -exec ls -l {} \;
read -p Regex Regex
find Path -type f -atime +Timespan -exec rm {} \;
find Path -name Regex -prune -or -name Regex -print
find Path Path -iname Regex
grep -f File Regex
sort -u
fold -w Quantity
cal DateTime DateTime
find Path -type f -name Regex -newermt Regex ! -newermt Regex -ls
find Path -name Regex
xargs -I {} sed -i Program File {}
find Path -type f
xargs -I {} md5sum {}
sort
uniq -D w32
tmux -2
join -t Regex <( sort File ) <( sort File )
find Path -empty
mv File File
find Path -name Regex
chgrp Regex File
ifconfig Regex
grep Regex
cut -d Regex -f Number
awk Program
echo Regex
ssh Regex
find Path -type f -print0
xargs -0 -I {} ls -d -r -t {}
tail -n Quantity
tac File
sort -t Regex -k Number -n
find Path -type d -exec chmod Permission {} \;
find Path -name Regex -exec wc -c {} +
tail -n Quantity
find Path -name Regex -prune -or -name Regex -prune -or -type f -print
xargs -I {} grep -E -i -l Regex {}
find Path -type f -name Regex -atime -Timespan -user Regex
sort File -o File
dirname $( find Path -name Regex
grep Regex
head - Quantity )
find Path -name Regex
xargs -I {} vim {}
find Path -type d -exec chmod Permission {} \;
find Path -name Regex
find Path -mmin -Quantity \( ! -regex Regex \)
ifconfig
grep -o -P Regex
find Path -name Regex -execdir pwd \;
cat File
column -c Quantity -s Regex
rsync -a -v --progress File File --exclude Regex
find Path -type f -name Regex
find Path -name Regex -delete
pwd
grep -o Regex
find Path -newermt Regex
find Path -type f -mtime Timespan
find Path \( -type d -name Regex -or -type f -name Regex \) -prune -or -print0
find Path -name Regex
grep -f <( sed Program File )
find Path -amin -Quantity
find Path -inum Quantity
find Path -name Regex
find Path -type f -name Regex -exec cp {} File \;
read Regex
find Path -mtime -Timespan
find Path -type f -exec rm -r -f {} \;
find Path -newer File -and ! -newer File -print
find Path -path Regex -prune -or -perm -Permission ! -type l -ls
sed -e Program Program
column -t -s Regex
awk Program
tail File
find Path -name Regex -printf '%h\n'
xargs -I {} ls -l {}
cal DateTime DateTime
awk -v Program -f File
ln -s -f File Regex
find Path -type f -name Regex
ifconfig Regex Regex
find Path
wc -l
find Path -user Regex -name Regex
find Path -name Regex -delete
find Path -name Regex -print0
tar --one-file-system -c -z -v File
split -b Size File Regex
sed Program File
find Path -type f -print0
tar -c -v -z -f File File
find Path -type d -exec chmod Permission {} \;
false
tee File
find Path -name Regex -print0
xargs -0 -I {} rename Regex {}
echo $( date ) Regex
tee -a File
find Path -type f -atime -Timespan -exec ls -l {} \;
find Path -fprint File -and \( -name Regex -exec rm {} \; \)
find Path -perm Permission
echo Regex Regex Regex Regex Regex Regex Regex
rev
cut -b Number
rev
find Path -name Regex -print0
xargs -0 -p -I {} rm {}
who -m
awk Program
sed Program
find Path -perm -Permission
find Path -maxdepth Quantity -name Regex
find Path -amin Quantity
find Path -type l -ls
find Path -mindepth Quantity
xargs -I {} chmod Permission {}
find Path -name Regex -print
grep -P Regex
fold -b -w Quantity
cut --output-delimiter Regex -b Number
find Path -name Regex -print0
xargs -0 -I {} rm {}
seq -w Number
find Path \( -name Regex -and -type d \)
find Path -mtime -Timespan
pushd $( dirname Regex )
chown -R Regex File
basename Regex
cut -d Regex -f -Number
find Path -name Regex -exec grep Regex {} \;
find Path -newerct Regex -print
find Path -type d -exec chmod Permission {} \;
find Path -iname Regex
find Path -name Regex -exec echo {} \;
ls -l File
vim $( which Regex )
find Path -name Regex
xargs -I {} cat {}
awk Program
groups Regex Regex Regex Regex Regex Regex Regex Regex
nl -n ln
sort -u -k Number
sort -k Number
cut -f Number
find Path -name Regex
cat -e File
less
find Path -perm -Permission
find Path -iname Regex -size +Size
tail -n +Quantity File
read -p $( echo Regex ) Regex
find Path -nouser -ok rm {} \;
find Path -perm Permission
od -t x1 File
cut -c Number
find Path -name Regex -exec rm {} +
find Path -path Regex -prune -or -path Regex -prune -or -type f -name Regex
find Path -type d -exec ls -l -d {} \;
find Path -name Regex -print
find -L Path -type f -perm -Permission ! -perm -Permission
find Path -type f -exec grep Regex {} \; -print
find Path -path Regex -print
find Path -group Regex -perm -Permission -print
find Path -ls
$( mktemp )
find Path -name Regex -or -name Regex
find Path -name Regex
mkdir -p Directory
join -v Quantity File <( nl File )
find Path -maxdepth Quantity -print
chgrp -R Regex File
find Path -atime Timespan
find Path -iname Regex -exec ls {} \;
find Path -name Regex
find Path Path -name Regex -type f -print
dig Regex -x Regex
sed Program
mkdir -p Directory
find Path -newer File
ls
xargs -I {} mv {} File
find Path -iname Regex -exec cp {} File \;
mv $( readlink -f File ) File
find Path -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -type d -exec chmod Permission {} +
find Path -follow -iname Regex -print0
xargs -i -0 -I {} mv {} File {}
find Path -print
xargs -I {} chgrp Regex {}
find Path -name Regex -print0
xargs -0 -I {} rm {}
sed Program File
split -l Quantity File Regex
find Path -type d -exec find {} -maxdepth Quantity ! -type d -iname Regex \;
set $( cal DateTime DateTime )
mktemp --suffix Regex
ssh Regex
column -s Regex -t
sed -n Program
find Path -type d -empty -exec rmdir {} \;
column -t -s Regex File
find Path -maxdepth Quantity -type f -printf '%TY-%Tm\n'
sort
uniq -c
ping -c Quantity Regex
grep Regex
cut -f Number -d Regex
find Path -depth -name Regex -exec rm -f -r {} \;
find Path -name Regex -or -name Regex
find Path -type f
find Path Path -xdev -name Regex -print
find Path -name Regex
find Path -type f -exec sed -i Program {} \;
ls -d File
sed Program
find Path -name Regex
find Path -depth -type d -empty -exec rmdir {} \;
find Path \( -nogroup -or Path \) -ls
split -l Quantity File
find Path -type f -exec chmod Permission {} +
find Path -name Regex -prune -or \( ! -name Regex -print0 \)
find Path -name Regex -ls
ssh -p Regex Regex
echo Regex
xargs -I {} find {} -mindepth Quantity -maxdepth Quantity -type d
find Path -type f -print
xargs -I {} ls -l {}
find Path -type f \( ! -iname Regex \) -mtime +Timespan -exec ls {} \;
find Path -type d -empty
find Path -type f -name Regex -delete
find Path -type f -name Regex -print0
xargs -0 -I {} sed -i Regex Program {}
find Path -perm Permission -type f -exec ls -l {} \;
find Path -name Regex -ls
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -name Regex
find Path -mindepth Quantity -maxdepth Quantity -type d
find Path -type f -ls
find Path -name Regex -delete
find Path -daystart -type f -mtime Timespan
find Path -exec grep Regex {} File \; -print
seq Number Number
split -l Quantity -a Quantity -d File Regex
find Path -name Regex -exec mv {} File \;
find Path -name Regex -depth -exec rm {} \;
set -u
rm $( ls -t
awk Program )
od -t c File
find Path -print0
find Path -perm +Permission
find Path -user Regex
tar -C Directory -z -c -v -f File File File File
echo Regex
awk Program
find Path -type f -print0
find Path -daystart -type f -mtime Timespan
find Path -name Regex -type f -exec rm {} \;
find Path -name Regex -print0
xargs -0 -I {} wc -w {}
find Path -type f -print0
xargs -0 -I {} grep -E Regex {}
grep -E -v Regex
chown -R Regex File File File File File
find Path $( pwd ) -name Regex
rm -r -f File
find Path -print
xargs -I {} ls -g -i -l -d -s {}
find Path -type d ! -perm -Permission
source File
find Path -name Regex
xargs -I {} grep -i Regex {}
find Path -type f -name Regex -exec rm -f {} \;
find Path -type f -name Regex -execdir pwd \;
ls -t -r $( find Path -name Regex -or -name Regex )
head - Quantity
xargs -I {} rm -f {}
find Path -depth -type f -print
find Path -mtime Timespan -mtime -Timespan -daystart
find Path -type d -name Regex
find Path -newer File -print
find Path ! -type d
xargs -I {} wc -c {}
shopt dotglob
mktemp -t
find Path -name Regex -type d
cal -h
sed -r $( date
cut -d Regex -f Number )
find Path -type f
chown -R Regex File File
find Path ! -name Regex -print
ls
sed Program
tr -d Regex
find Path -type f -name Regex -print0
xargs -0 -I {} chown Regex $( mktemp ) {}
tree -d -f -i $( pwd )
find Path -type f -name Regex -print -exec sed -n Program {} \;
env -u Regex Program
find Path -iname Regex
read -a Regex
find Path $( pwd ) -name Regex -exec dirname {} \;
find Path -mtime -Timespan -exec rm -r -f {} \;
find Path -newerct Regex -print
xargs -I {} rm {}
echo Regex
cat
find Path
sed -e Program -e Program
tr Regex Regex
diff File File
nl -n rz -w Quantity -s Regex File
sed -r Program
find Path -maxdepth Quantity -mtime +Timespan -exec gzip -N {} \;
column -t File
find Path -perm -Permission
find Path -type f -exec sed -i Program {} \;
sort File
uniq -c
sort -n -r
find Path -size Size -printf '%M %n %u %g %s %Tb\n \b%Td %Tk:%TM %p\n'
find Path -maxdepth Quantity -type f
find Path
ifconfig
grep Regex
grep -v Regex
head -n Quantity
cut -f Number -d Regex
cut -f Number -d Regex
find Path -iname Regex -print0
find Path -iname Regex -mtime -Timespan
wc -l
cat File
wc -l
find Path -name Regex
grep -i -o -h Regex File
sort
uniq -c
sort -n
find Path -size -Size -size +Size -exec ls -l {} \;
find Path -name Regex -type f
ls -l $( which Regex )
sed Program
find Path ! -name Regex -prune
find Path -name Regex -print
grep -v Regex
find Path ! -type d -printf "%s\n"
awk Program
find Path -name Regex -exec pwd \;
echo $( readlink -f File ) Regex Regex
find Path -name Regex
find Path -type d -name Regex -print
rsync -r -l --delete-after --safe-links File File
find Path -name Regex -delete
find Path -print0
xargs -0 -I {} file {}
cat File
gunzip -c
tar File File
find Path -perm Permission
find Path -name Regex -exec sed -i -r Program {} \;
find Path -name Regex -print0
find Path -name Regex -print0
xargs -0 -n Quantity -P Quantity -I {} bzip2 {}
set -x
find Path -name Regex -type f -exec file {} \;
find Path -mindepth Quantity -print0
xargs -0 -I {} mv --target-directory Directory {}
scp -o StrictHostKeyChecking=no File
grep -r Regex File
awk Program
xargs -I {} dirname {}
find Path -name Regex
xargs -n Quantity -I {} echo Regex Regex {}
mv File File
find Path -type f
cd $( whoami )
cat File
grep -i Regex
find Path -name Regex
xargs -I {} rm {}
find Path -type f -name Regex -exec mv {} $( basename {} Regex ) File \;
find Path -type f -exec wc -l {} +
find Path -name Regex -delete
date "+%Y-%m-%d %H:%M:%S"
seq Number Number
sed -n Program
find Path -maxdepth Quantity -name Regex -print0
grep -c -z Regex
cat -v -e -t File
less
echo Regex
fold -s -w File
find Path -name Regex
xargs -I {} grep Regex {}
less
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
find Path -type l
set $( od -j Size -N File -t u1 File )
find Path -perm Permission
head
who
awk -F Regex Program
sort -u
wc -l
find Path -type d -empty -delete
find Path -name Regex
find Path -empty
find Path -name Regex
sed -e Program
sort
uniq
find Path -type f -iname Regex -print
find Path -exec grep -l Regex {} +
cat File
xargs -I {} dig Regex {}
mkdir -p Directory Directory
chown Regex File File
cat File
od -t x1 -w Size
find -L Path -type l -delete
read -p Regex Regex
find Path -name Regex -type f -print
xargs -I {} rm -f {}
find
xargs
mount -o rw,remount -t rootfs Regex
mount -t ntfs -o ro Regex Regex
find Path -name Regex -exec ls -l {} \;
man Regex
find Path -maxdepth Quantity -mindepth Quantity -type d
echo Regex
tee File
diff -r -q -y -l File File --exclude Regex
find Path -ctime +Timespan -type f -exec rm {} \;
find Path -mtime +Timespan -type d -exec rmdir {} \;
find Path -type f -name Regex
xargs -I {} cp -t Directory {}
find Path -size +Size
grep Regex $( uname -r )
find Path -empty
w
grep Regex
pwd -P
echo Regex
cut -d Regex -f Number
find Path -type f -name Regex -print
cat File
awk Program
sort
uniq
xargs -i -I {} grep {} File {}
cat File
xargs -0 -I {} echo {}
find Path -name Regex ! -wholename Regex -exec grep Regex {} \; -print
find Path -xdev -name Regex -print
grep -f File Regex
sort
uniq
tail -n +Quantity File
split -l Quantity File Regex
rsync -z -v -r --include Regex --exclude Regex File File
find Path -iname Regex -exec mv {} File +
mount -o rw,remount -t rfs Regex Regex
find Path -size +Size
find Path -name Regex
find Path -type f -print0
xargs -0 -I {} grep -c Regex {}
grep -v Regex
find Path -type f -exec md5 {} \;
whoami hostname -f
find Path -type f
wc -l
find Path -name Regex -print0
read -p Regex
cat File
find Path -name Regex -type d
find Path -type f -iname Regex -exec mv -t Directory {} +
find Path -depth -empty -type d -delete
find Path -inum Quantity -exec rm {} \;
find Path -name Regex -ls
find Path -cnewer File
find Path -name Regex -exec grep -H Regex {} +
find Path -name Regex
sed Program
sh
find Path -name Regex -type f -cmin +Quantity -exec basename {} \;
find Path -print0
sort -z
cpio -p -d -v -0 Regex
find Path -maxdepth Quantity -mindepth Quantity \( -name Regex -not -name Regex -not -name Regex \)
find Path -type f -name Regex
find Path -path Regex
find Path -iname Regex
echo Regex
wc -l
tr -d Regex
ls -t -r
head -n -Quantity
xargs -I {} rm {}
mkdir Directory Directory Directory Directory Directory
ifconfig Regex
grep Regex
awk Program
cut -d Regex -f Number
echo Regex
grep -o Regex
sort
uniq -c
sort -n -r
find Path -exec echo -n Regex \;
tr Regex Regex
find Path -name Regex
set -x
ssh -N -L Regex Regex
find Path -type f -exec sed Program -i Regex {} \; -exec rm File \;
set
grep Regex
find Path -type d -exec mkdir -p Directory \; -or -type f -exec touch File \;
find Path -name Regex -exec grep Regex {} +
wc -l
find Path -name Regex -print -exec false \;
find Path -name Regex
xargs -I {} wc -l {}
sort -r
find Path -type f -exec chmod Permission {} +
find Path -maxdepth Quantity -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -xdev -printf '%s %p\n'
sort -n -r
head - Quantity
df -k File
curl Regex
tac
tac
grep -q -s Regex
find Path -type f -exec grep Regex {} \;
find Path -type f -not -iwholename Regex -print0
xargs -0 -I {} sed -i Program File File {}
echo Regex
tee File
tr Regex Regex
find Path -type f ! -newer File ! -samefile Regex -exec rm {} +
find Path -fstype ext3 -name Regex -ls
find Path -maxdepth Quantity -type f -exec chmod Permission {} \;
find Path -exec grep Regex {} \;
find Path -size -Size -xdev -print
find Path -name Regex
find Path -name Regex
find Path -type f -name Regex -print
xargs -I {} rm {}
find Path -name Regex
find Path -type f -name Regex
sed Program
sed Program
sh
find Path -name Regex -or -type d
awk -F Regex Program Program
find Path -name Regex
echo -n $( hostname )
find Path -name Regex
mkdir Directory
echo Regex
sed -e Program
sed -e Program
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -type f -printf "%i@%p\n"
mount -t cpuset Regex Regex
find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and Path \( -size +Size -fprintf File '%-10s %p\n' \)
find Path -type f -name Regex -exec grep -E -l Regex {} \;
find Path -type f -exec rm {} \;
find Path -perm +Permission -type f
find Path -mtime +Timespan
xargs -I {} rm {}
find Path -iname Regex -exec du -b {} +
awk Program
find Path -type f -mtime Timespan
find Path -cmin -Quantity
read -s Regex
rsync -a -v File File
who
sed Program
wc -l
find Path -type f -exec grep -q -i -F Regex File \; -delete
find Path -newerct Regex -print
find Path -type d \( ! -name Regex \) -or \( ! -name Regex \) -print
find Path -type f
find Path -L -maxdepth Quantity -name Regex -type f -perm Permission
find Path -type f -and -mmin -Quantity
find Path -type f -name Regex -exec rm -f {} \;
find Path -type f -perm Permission -print
find Path -group Regex
find Path -maxdepth Quantity -type f -name Regex -print0
find Path -type f
xargs
wc -c
find Path -maxdepth Quantity -not -iname Regex
nl -b a -n ln File
grep Regex
find Path -ctime Timespan -type f
find Path
xargs -I {} mv {} File
find Path -name Regex -print -or -name Regex -print
find Path -type d -and ! -name Regex -or ! -prune
find Path -type f -name Regex -print
cat File
fold -w Quantity
head -n Quantity
find Path -name Regex -mmin -Quantity -print
head -n Quantity
find Path -maxdepth Quantity -type f
xargs -I {} grep -F Regex {}
find Path -name Regex -exec ln -s {} \;
df --total
tail -n Quantity
ls -m
tr -d Regex
tr Regex Regex
find Path -iname Regex
find Path -type f -atime Timespan
find Path -type f -mtime -Timespan -print0
find Path -name Regex
find Path -type f -exec sed Program {} +
grep Regex
find Path -exec grep -q Regex {} \; -print
find Path -name Regex -not \( -path Regex -or -path Regex \)
find Path -type f -mtime -Timespan -exec ln -s {} Regex \;
find Path -regextype posix-egrep -regex Regex
uname -s -r -v
find Path -print
find Path -name Regex
awk Program
xargs -I {} wc -l {}
find Path -name Regex -exec rm {} +
grep -R -i Regex File
awk Program
find Path -name Regex -type f -exec chmod Permission {} \;
du -s -m -c File
sort -n
join <( sort File ) <( sort File )
sort -k Number
find Path \( -name Regex -or -name Regex \) -prune -or -name Regex -type f -print
find Path -group Regex
head
date -j -v-1d
find Path -type f -exec file {} \;
find Path -name Regex -exec rm {} \;
find Path ! -path Regex -and ! -name Regex
find Path -regextype sed -regex Regex
find Path -type l
find Path -size +Size -exec rm -r -f {} \;
zcat Regex
awk -F Regex Program
find Path -name Regex -ctime +Timespan -exec ls -l {} \;
find Path -L -samefile Regex
find Path -type f -mtime +Timespan -exec rm -f {} \;
find Path -name Regex -print Path
xargs -0 -I {} cp {} File
find Path -mmin Quantity -type f
find Path -name Regex -print
xargs -I {} gzip -l {}
awk Program
grep -v Regex
sort -n
tail - Quantity
find Path -type f Path -exec file {} \;
grep -w -E Regex
find Path ! -perm Permission
find Path -type f -exec ls -l -r -t {} \;
awk -F Regex Program
rename -v Regex Regex
ln File Regex
find Path -atime +Timespan
find Path -type f -perm -Permission
find Path -type f -ctime -Timespan -printf "%C@ %p\n"
sort
tail -n Quantity
sed Program
find Path -print
cal -3
rename Regex Regex
mv File File
find Path -name Regex -exec file {} \;
grep -o -P Regex
find Path -perm Permission
mkdir Directory Directory
find Path -type f -perm -Permission
find Path -name Regex -type d -prune -or -print
find Path -type f -exec grep -i -l Regex {} \;
find Path -perm Permission -exec chmod Permission {} \;
find Path -name Regex
find Path -type f \( -name Regex -or -name Regex \) -print
gzip -d -c Regex
tar -x -f File
cat $( whoami )
grep -v Regex File
nl -s Regex -w Quantity
tr -s Regex Regex
find Path -name Regex -exec chmod Permission {} \;
tee File
mktemp
find Path -name Regex
find Path -type f
find Path -name Regex -exec wc -l {} \;
find Path -name Regex -print0
xargs -0 -I {} rename Regex {}
find Path -daystart -mtime +Timespan
cat File
md5sum
chown Regex File File File File File
grep -m Quantity -a -o Regex File
sed Program
head -n Quantity
dirname $( readlink -f File )
find Path -type f -print
xargs -L Quantity -I {} wc -l {}
find Path -name Regex
xargs -I {} grep -E Regex {}
find Path -name Regex
find Path -name Regex -size +Size
cat File
find Path -type f -print0
xargs -0 -I {} grep -c Regex {}
grep -v Regex
find Path -path Regex -print
cp -R File File
find Path -type f -printf "%C@ %p\n"
sort -r -n
head -n Quantity
pwd
awk -F Regex Program
find Path -name Regex -type f
xargs -I {} echo Regex {} Regex
find Path -type f -print -or -type d -prune
find Path -type f -name Regex
find Path -group Regex -type f
find Path -type d -exec chmod Permission {} \;
find Path -type f -name Regex
find Path -mmin -Quantity
find Path Path Path -name Regex
df File
grep Regex
find Path -type d -print0
tr Regex Regex
ifconfig Regex
grep Regex
find Path -type l -exec cp {} File \; -exec mv File {} \;
find Path \( -name Regex -or -name Regex \)
find Path
xargs
grep Regex $( find Path -name Regex )
find Path -type f -exec bzip2 {} \;
find Path -name Regex -print
dirname $( dirname $( which Regex ) )
find Path
cpio -p -d -u -m -v Regex
find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \;
du -k -s -h File
sort -n -r
sort File File
join -t Regex -o 1.2,2.2,2.3 -a Quantity -e Regex File <( sort File )
find Path -name Regex -type d -prune -or -name Regex
find Path -type f -perm Permission -print
find Path -type f -name Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -iname Regex -exec du -b {} +
awk Program
find Path -name Regex
find Path \( ! -regex Regex \) -type f -print0
xargs -0 -I {} sed -i Program {}
comm -2 -3 <( sort File ) <( cut -d Regex -f Number File
sort -u )
find Path -maxdepth Quantity -not -iname Regex
find Path -maxdepth Quantity -type f -exec bzip2 -z -k {} \;
find Path -print0
xargs -0
mkdir Directory
mv File
readlink --canonicalize File
cat File
less
ls -t -p
grep -v Regex
tail -n +Quantity
tr Regex Regex
xargs -0 -I {} rm -- {}
find Path -type d -exec chmod Permission {} \;
mount Regex -o remount,rw
find Path -type f -mtime -Timespan
find Path -type f -size +Size
xargs -I {} du -s -h {}
find Path -type f -name Regex -print0
find Path \( -name Regex -or -name Regex \) -prune -and -mtime Timespan ! -name Regex
find Path -name Regex -exec diff {} File \; -print
find Path -maxdepth Quantity -name Regex -mtime +Timespan
find Path -mtime -Timespan
echo Regex
awk Program
find Path -amin -Quantity
find Path -maxdepth Quantity -type f
xargs -x -I {} ls -t {}
awk Program
xargs -L Quantity -I {} rm {}
find Path -name Regex
find Path -type f -iname Regex
find Path Path Path -name Regex
shopt -s nullglob extglob
find Path -type f -name Regex
find Path -inum Quantity -delete
echo $( date -d Regex +%j )
find Path -type f ! -perm -Permission
find Path -type d
tee -a File
find Path -type d -mtime +Timespan -exec rm -f {} \;
echo Regex
bash
find Path -name Regex -exec ls -a -l {} \;
find Path -name Regex
ping -w Timespan Regex
find Path -name Regex -exec cat {} \;
watch -n Quantity ls
find Path -type f -exec grep -l Regex {} \;
comm -2 -3 File File
comm -2 -3 File File
comm -2 -3 File File
uname -m
set
grep -P Regex
du
awk Program
find Path -nouser -nogroup
mount -o remount Regex
find Path -user Regex -name Regex
cat File
grep -v Regex
ssh -t Regex command
find Path -name Regex -print -exec rm {} \;
echo Regex
tr -c -d Regex
find Path
xargs -I {} file {}
finger
sed Program
dirname Regex
find Path -perm Permission
head
grep -R Regex File
find Path -exec ls {} \;
scp -C File File
dirname $( which Regex )
find Path -nouser -print
who -b
awk Program
date -f File
find Path \( -iname Regex -or -name Regex \) -and ! -type d -and -mmin -Quantity
find Path -name Regex -prune -or -type f -and -perm Permission -printf ':%h\n'
sort
uniq
tr -d Regex
find Path -iname Regex -type f -exec mv {} File \;
fg Regex
find Path -atime +Timespan -exec rm {} \;
ps -u $( whoami )
grep Regex
rev File
uniq -f Quantity
rev
find Path -type f -exec file {} \;
grep -o -P Regex
find Path -depth -type d -mtime Timespan -exec mv -t Directory {} +
find Path -name Regex
ln -n -s -f File Regex
find Path -type f \( -iname Regex -or -iname Regex \) ! -path Regex
find Path -path Regex -print
find Path -name Regex
chown -R Regex File
find Path -name Regex
rev
cut -d Regex -f Number
rev
find Path -maxdepth Quantity -type d -exec ls -l -d {} \;
find Path -uid Regex
find Path -type f -print
xargs -L Quantity -I {} wc -l {}
find Path -user Regex
seq -w Number
find Path -type d -exec chmod +Permission {} \;
find Path -mtime +Timespan -type d
find Path -name Regex
echo Regex
tee File
find Path -size +Size -print
find Path -type d -empty -exec rmdir {} \;
find Path -type d
cpio -p -d -v -m Regex
ps -a -u Regex
awk Program
xargs -I {} pstree {}
find Path -type f -name Regex
find
head
find Path -name Regex -size +Size -print
find Path -exec grep -i Regex {} \;
find -L Path -type f \( -perm -Permission -or -perm -Permission -or -perm -Permission \)
$( md5sum File
awk Program )
find Path -name Regex
xargs -I {} grep Regex {}
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
ls -l -R File
tee File
find Path -perm Permission
find Path -type f -exec chmod Permission {} \;
find Path -type f -name Regex
xargs -I {} sed -i Program {}
seq -f "#" -s Regex Number
find Path -type d -exec chmod Permission {} \;
find Path -perm -Permission
find Path -mtime -Timespan -type f
hostname
tr Regex Regex
tr -d Regex
awk Program
find Path -type d -exec chmod Permission {} \;
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type d ! -perm -Permission
find Path -name Regex -print
ssh -F File Regex
find Path -name Regex -or -name Regex
find Path -name Regex -print
whoami
tr Regex Regex
find Path -name Regex
sort -S Size File
find Path -iname Regex
grep -i Regex
cat File
awk Program
tail - Quantity
grep -r --include Regex Regex File
set -x
find Path \( -size +Size -and -size -Size \)
find Path -name Regex
find Path -name Regex
grep Regex File
less
find Path -type f -size -Size -exec ls -l {} \;
find Path -type f -empty -delete
find Path -group Regex
find Path -print0 -name Regex
xargs -0 -I {} grep -m Quantity -r -i Regex {}
find Path -mtime +Timespan -delete
find Path -not -name Regex
find Path -name Regex -exec grep -l Regex {} \;
wc -l
which Regex
zcat Regex
sed -e Program
find Path -type f -perm +Permission
wc -l
find Path -type f \( -iname Regex -and -perm -Permission \)
find Path -type f -empty
read -r -p Regex Regex
find Path -type f -name Regex -exec sed -i Program {} \;
read -u Regex Regex
find Path -mtime +Timespan
find Path ! -name Regex
find Path Path Path Path -name Regex -exec rm -f {} \;
find Path -mindepth Quantity -size +Size -delete
chown -R Regex File
ssh Regex -S Path
find Path -size +Size -size -Size
find Path -name Regex ! -name Regex ! -name Regex -delete
find Path -maxdepth Quantity -name Regex -or -name Regex
find Path -type f -exec chmod Permission {} +
find Path -type f
find Path -name Regex -maxdepth Quantity
find Path -type f -name Regex -size +Size -exec rm {} \;
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type d
sort
awk Program
echo $( uname -a
awk Program )
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -type f -name Regex -exec sed --in-place Regex {} +
find Path Path -name Regex
find Path -atime +Timespan -exec rm -f {} \;
find Path -mtime -Timespan
ln -d File Regex
mkdir Directory
find Path -depth -type d -exec rmdir {} \;
ln -s File Regex
find Path -name Regex
grep -E Regex
join -o 1.1,1.2,1.3,1.4 -t Regex File File
sed -n Program File
find Path -name Regex -print
xargs -I {} grep -l Regex {}
find Path \( -name Regex -or -name Regex -or -name Regex \) -print
xargs -I {} chmod Permission {}
find Path -name Regex
find Path -name Regex -prune
find Path -type f -exec file {} \;
set
grep Regex
find Path -newer File -user Regex -print
find Path -type f -user Regex -exec ls -l -s {} \;
find Path -path Regex -prune -or -print
set
more
chown -R Regex File
find Path -type f -execdir grep -i -H Regex {} \;
tee File
grep -i -o -h Regex File
sort
uniq -c
sort -n
find Path -size +Size -iname Regex
find Path -type d -print
find Path -perm Permission
file -i -b File
find Path -type d -exec chmod Permission {} \;
find Path -newer File
cd $( find Path -name Regex
xargs -I {} dirname {} )
find Path -regextype posix-egrep -regex Regex
find Path -maxdepth Quantity -type f -exec md5sum {} \;
sed Program
find Path
cpio -p -d -u -m -v Regex
find Path -depth -name Regex -type f
xargs -I {} rm -f {}
find Path -type f \( -iname Regex ! -perm -Permission \)
chown Regex File
find Path -name Regex -exec echo Regex {} \;
find Path -iname Regex
find Path -name Regex
xargs -I {} rm -f -r {}
find Path -type d -mtime -Timespan -exec compress File {} \;
find Path -type f -newer File -not -newer File
find Path -print0
echo $( yes Regex
head -n Quantity )
find Path -maxdepth Quantity -type d
echo $( echo Regex )
od -c
find Path -exec grep Regex {} \;
find Path -size -Size -size +Size -ls
find Path \( \( -path Regex -type d \) -or -path Regex \) -prune -or -type f -print
find Path -type f -mtime -Timespan -exec ls -l {} \;
find Path -name Regex -type f
wc -l
mount
grep Regex
find Path -atime -Timespan
find Path -cmin -Quantity
find Path \( -name Regex -or -name Regex \) -exec rm {} \;
find Path -type f -mtime Timespan -iname Regex
find Path -name Regex -exec rm -f {} \;
find Path -type f -exec basename {} \;
find Path -name Regex -print
xargs -l -i -I {} wc {} {}
sed -i Regex Program File
find Path -name Regex
sed -n Program
find Path -type f -perm -Permission
find Path -type f \( -iname Regex ! -iname Regex \)
tail -n +Quantity File
split -l Quantity File Regex
apropos Regex Regex
ls
split -l Quantity File Regex
find Path -mindepth Quantity -type f -execdir mv {} $( dirname {} ) \;
find Path -amin -Quantity
find Path -type f -exec chmod Permission {} \;
find -L Path -type l
ping -c Quantity -n Regex
awk -F Regex -v Program Program
find Path -daystart -atime Timespan -ls
find Path -name Regex
find Path -type f -mtime -Timespan
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -atime -Timespan -name Regex
sort -k Number -k Number -t Regex --stable File
cat
find Path -size +Size
echo Regex
read Regex
true
cd Directory
ssh-keygen -t rsa -C Regex -N Regex -f File
diff File File
grep -l Regex
xargs -I {} mv {} File
find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf '%T@ %p\n'
sort -k Number -n
sed Program
find Path -name Regex -exec nano {} \;
find Path -type f -ctime -Timespan
sort <( ls File ) <( ls File )
uniq -d
echo Regex
grep -E --invert-match Regex
find Path -type d -and -atime +Timespan
find Path -name Regex -printf "mv '%h/%f' '%h/lib%f'\n"
less -S
find Path -name Regex
sed Program
xargs -i -I {} echo Regex Regex Regex {}
sh
curl Regex Regex
gunzip Regex
less
man Regex
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
split --number Quantity File Regex
find Path -path Regex -prune -or -user Regex -ls
find Path -type d -exec ls -a -l -g -d {} \;
bzip2 File
find Path -depth -type d -mtime Timespan -exec mv -t Directory {} +
find Path -newer File -print
grep -E -o Regex File
tr -d Regex
find Path -type f -not -path Regex -exec cp {} File \;
find Path -type f -maxdepth Quantity
more
find Path -not -name Regex
find Path -empty -type -f
ps -A
grep Regex
chgrp
find Path -name Regex -print0
xargs -0 -I {} chmod Permission {}
echo <( yes )
find Path -maxdepth Quantity
find Path -name Regex -exec grep Regex {} +
wc -l
find Path -path Regex -print
rsync -a -v -z File File
find Path -type f -print0
xargs -0 -I {} file {}
find Path -inum Quantity -exec mv {} File \;
find Path -name Regex
ping -b Regex
grep Regex
awk Program
rsync -a --delete File File
touch File
find Path -maxdepth Quantity ! -perm -Permission
find Path -type f -print0
xargs -0 -I {} ls -l -t -r {}
tail -n Quantity
find -type d Path Path Path {} +
find Path -type f -name Regex -exec grep -i -l Regex {} \;
find Path -name Regex -type d -exec rm -r {} +
find Path -name Regex -print0
xargs -0 -I {} mv -t Directory {} {}
cat File
xargs -n Quantity -I {} echo Regex Regex Regex {}
find Path -type f -name Regex -exec sed -i -e Program {} \;
find Path -type f -mtime -Timespan
xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {}
find Path -name Regex
find Path -print
grep Regex File
find Path -type f \( -name Regex -or -name Regex \)
ps
grep $( echo Regex )
awk Program
find Path --version
cd $( find Path -print0
sort -z
tr Regex Regex
tail - Quantity )
seq Number
xargs
find Path -perm +Permission
find Path -mmin -Quantity
xargs -r -I {} ls -l {}
find Path -type d
find Path -name Regex -printf "%T+ %p\n"
find Path -name Regex -exec grep -H -i -n Regex {} \;
ping -c Quantity Regex
cd $( readlink -f $( dirname Regex ) )
find Path -maxdepth Quantity -type f -delete
find Path -mmin -Quantity -ls
find Path -type l -exec readlink -f {} \;
grep -v $( readlink -f File )
comm -1 -2 <( echo Regex
awk -F Regex Program ) <( echo Regex
awk -F Regex Program )
tr -d Regex
pushd $( pwd )
cd $( dirname $( dirname $( which Regex ) ) )
pushd $( whoami )
find Path -name Regex -exec echo {} \;
find Path -perm +Permission
find Path -type f -exec sed -i Program {} \;
find Path -type f ! -perm Permission
find Path -name Regex -type d -delete
find
head
who
grep -v Regex
wc -l
find Path -name Regex -type f -print0
xargs -0 -I {} rm -f {}
find Path $( pwd ) -type f -exec ls -l {} \;
wc -l
find Path -atime -Timespan -print
find Path -name Regex -or -name Regex -print0
find Path -name Regex
xargs -I {} rm {}
find Path -maxdepth Quantity -name Regex
tail
find Path -user Regex
gunzip -c Regex
tar -t -v -f File
find Path -type f ! -perm Permission -print0
xargs -0 -I {} chmod Permission {}
find Path Path -name Regex -print0
xargs -0
md5sum File
sort
uniq -d -w Quantity
find Path -name Regex -mtime +Timespan
ls
tr Regex Regex
curl Regex
grep -o Regex File
sort -f
uniq -i -c
find Path -path Regex -prune -or -type f -perm +Permission -ls
ln -s File -t Directory
find Path -path Regex -prune -or -print
find Path -print0
find Path -newermt $( date +%Y-%m-%d -d Regex ) -type f -print
find Path -mtime -Timespan
find Path -regex Regex
tac
sed Program
tac
chown -R Regex File
history
grep Regex
find Path -type f
yes -- Regex
head -n Quantity
find Path -type f -empty
cp -a File File
ln -n -s -f File Regex
ln -s File Regex
echo Regex
readlink File
pstree -p Regex
sed Program
grep Regex
sed Program
find Path -regex Regex
find Path -type f -print
xargs -l Quantity -I {} mv -f {} File
find Path -name Regex -exec grep -E Regex {} \;
df
grep Regex
find Path -newermt Regex -not -newermt Regex -ls
dirname $( readlink -e File )
du -s -h File
whoami
bzip2 -d -c File
diff -r -q -y -l File File --exclude Regex
find Path -fstype ext3 -name Regex
find Path -maxdepth Quantity -type d -empty
comm -2 -3 File File
find Path -iname Regex
find Path -iname Regex ! -size +Size
find Path -name Regex -exec grep Regex {} \; -print
find Path -type f -mtime +Timespan -print0
xargs -0 -r -I {} rm -f {}
find Path -type d -name Regex
find Path -depth -name Regex -execdir rename Regex {} \;
ls -1
paste -s -d File File
find Path -mindepth Quantity -type f -exec mv {} File \;
find Path -type f -print
xargs -I {} grep -i -l Regex {}
ifconfig Regex
grep Regex
grep -v Regex
awk Program
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
ls File
find Path -name Regex -maxdepth Quantity -exec rm -f {} \;
mount Regex Regex -o loop
find Path -newerct Regex -print
find Path -name Regex -print
read -p Regex Regex
ls -1 -p
grep Regex
sed Program
find Path -type f -print0
xargs -0 -L Quantity -I {} wc -l {}
find Path -newer File
find Path -user Regex
find Path -type d
find Path -perm Permission
find Path
xargs -r -t -I {} sed -i Program {}
find Path -name Regex -exec chmod Permission {} \;
find Path -type f
sed Program File
sed -n -f Program File
echo Regex Regex
tee File
awk Program
pushd Directory
cat File
ssh Regex command
find Path \( -path Regex -and -not -path Regex -or -path Regex \) -prune -or -type f -print
find Path -maxdepth Quantity ! -regex Regex ! -regex Regex Path ! -regex Regex -exec grep --color "#define" {} +
echo Regex
sed Program
find Path -type d -name Regex -exec chmod Permission {} \;
find Path -newer File
find Path -nouser
xargs -0 -I {} rm {}
find Path -lname Regex
vim <( history )
find Path -maxdepth Quantity -type d -iname Regex -print0
xargs -I {} -0 rm -r -v -f {}
find Path -type f -cmin -Quantity -exec cp {} File \;
find Path -mindepth Quantity -depth -print0
grep -v -E -z -Z Regex
xargs -0 -I {} rm -r -v -f {}
find Path -print
find Path -name Regex -type f -exec du -h {} \;
df -H
find Path -name Regex -prune -or -name Regex -print
ping -c Quantity Regex
tee >( split -d -b Size File Regex )
find Path -mtime +Timespan
find Path -mmin -Quantity -print
chown Regex File
env
grep Regex
awk Program Program
find Path -name Regex
xargs -d Regex -I {} rm {}
chown -R $( whoami ) File
find Path -mtime -Timespan
grep -F -f Regex File
sort
uniq -c
sort -n
tail -n Quantity
cd $( find Path -name Regex -exec dirname {} \; )
find Path -mmin -Quantity -mmin +Quantity
chown Regex -R File
find Path -mtime +Timespan
find Path -name Regex
find Path -maxdepth Quantity -type f -print0
xargs -0 -n Quantity -I {} ls -l {}
find Path -name Regex -type f -print
pstree
grep Regex
cut -c Number
find Path -name Regex -exec grep Regex {} File \;
find Path -name Regex
xargs -I {} grep Regex {}
find Path -type f -atime +Timespan -exec rm {} \;
find Path -type f ! -name Regex ! -name Regex -print
find Path -type f -print0
xargs -0 -I {} grep -l -i -w -Z Regex {}
xargs -0 -I {} rm -f {}
mount -o rw,remount Regex
find Path -name Regex
find Path -iname Regex
history -d Quantity
find Path -exec grep Regex {} \; -print
curl Regex Regex Regex
nl -s Regex
pwd
cut -f Number -d Regex --output-delimiter Regex
ls -l --time-style long-iso
sort -k Number
find Path -type f -exec grep -H Regex {} +
find Path
grep -E -v Regex
vim File
read -p Regex
find Path -mmin Quantity
find Path -type f -mtime +Timespan -printf '%s\n'
awk Program
find Path -iname Regex
find Path -type d
sed -e Program -e Program
grep -v Regex
awk Program
xargs -I {} chgrp {}
rsync --recursive --prune-empty-dirs --include Regex --filter Program File File
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
sed Program
xargs -I {} ls -l {}
grep -e Regex Regex
cut -d Regex --complement -s -f Number
find Path -name Regex -prune -or -name Regex -prune -or -name Regex -prune -or -print0
xargs -0 -I {} grep -I -R Regex {}
man Regex
find Path -name Regex -print
shopt -s nullglob dotglob
find Path -size Size
find Path -type f -print0
xargs -0 -I {} mv {} File
mkdir Directory
find Path -name Regex -type f
head File -c Quantity
od -t x1 -w Size
head -n Quantity
cut -d Regex -f Number
tr -d Regex
find Path -perm Permission
ping Regex
awk -F Regex Program
find Path -perm Permission
ssh -f -N -T -L Regex -L Regex Regex
find Path -type d -maxdepth Quantity -exec ls -d -l -r -t {} \;
find Path -name Regex -print
wc -l
awk Program Program
xargs -I {} dig Regex {}
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path -type d -exec chmod Permission {} +
dig Regex
cd Directory
cat
find Path -mtime Timespan
find Path -mmin Quantity -print0
xargs -0 -r -I {} ls -l {}
find Path -name Regex
kill $( ps -A -o stat,ppid
awk Program )
basename $( pwd )
find Path -mtime +Timespan -print
find Path -mtime +Timespan -exec rm {} \;
find Path -type f -exec grep -H Regex {} \;
find Path -mtime -Timespan -print
find Path -type f -empty -delete
find Path -ctime +Timespan -print
readlink --canonicalize --no-newline File
find Path -type f -print0
xargs -0 -r -I {} gzip {}
find Path -name Regex -maxdepth Quantity -print0
xargs -0 -I {} rm {}
find Path -iname Regex -print
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -iname Regex -type f
xargs -I {} mv {} File
tail File
find Path -type f -size +Size
xargs -I {} du -s -h {}
find Path -type f -name Regex
find Path -type f
find Path -name Regex -exec echo {} \;
find Path -group Regex -print
find Path -name Regex -printf "%T+ %p\n"
sort
tail - Quantity
find Path -name Regex
find Path -name Regex
find Path -name Regex -exec cat {} \;
find Path -type f
cat File
grep Regex
split -l Quantity
find Path -type f -exec cp {} File +
find Path -name Regex -exec awk Program {} \;
scp -r File File File
find Path -type f -exec echo {} \;
find Path -exec grep -l Regex {} +
find Path -exec echo {} \;
comm -2 -3 File File
rsync -a -v File File
echo Regex $( gzip
wc -c )
head -c Quantity File
tree -L Number
chgrp -R Regex File
find Path -type f -print0
xargs -0 -I {} grep -l -i Regex {}
whoami
find Path -name Regex -exec grep Regex {} +
find Path -name Regex
find Path -name Regex -prune -and -name Regex -prune -or -name Regex -print
find Path -mtime -Timespan
find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf "%T+\t%p\n"
sort
awk Program
find Path -mindepth Quantity -mtime Timespan -delete
find Path -mtime +Timespan -type f -exec rm -f {} \;
read -n Quantity -p Regex Regex
find Path -size Size
find Path -mtime -Timespan -type d
find Path -xtype l
find Path -regex Regex
wc -l $( tree -i -f --noreport
grep -e Regex )
find Path -mtime -Timespan -print
find Path -name Regex -type f
find Path -name Regex -print0
xargs -0 -I {} grep Regex {}
mkdir Directory
find Path -type f -size -Size
set
grep Regex
sed Program
find Path -size +Size -exec ls -s -h {} +
find Path -type d -name Regex -print
xargs -I {} rm -r -f {}
$( mktemp Regex )
find Path -type f -exec chmod Permission {} \;
find Path ! -path Regex -type f -name Regex
find Path -name Regex
ping -q -c Quantity Regex
tail -n Quantity
cut -f Number -d Regex
find Path -name Regex
awk Program Program
paste -s -d Regex
sed Program
od -c -A n
find Path -name Regex
find Path -type f -printf '%TY-%Tm-%Td %TT   %p\n'
sort
uname -i
find Path -print
grep Regex
xargs -I {} grep -i Regex {}
find Path -name Regex
sort File
grep -v Regex
find Path Path -name Regex -print
find Path -name Regex
awk Program
find Path -name Regex -exec cat {} +
find Path \( ! -regex Regex \)
sed Program
readlink -f File
find Path -mindepth Quantity -type d -size +Size -exec rm -r -f {} \;
find Path -type f -exec basename {} \;
find Path -name Regex -print -xdev
find Path -name Regex -exec echo Regex {} +
find Path -mtime Timespan
find Path -type d
find Path -name Regex -type f
rename Regex
find Path -name Regex
du -h -s File
find Path -iname Regex
xargs -I {} rm {}
rsync -R File File File
find Path -name Regex
find Path -type d -exec find {} -type f -delete \;
df -h File
df File
grep -q Regex
find Path -prune
which Regex
find Path -name Regex
who
sed -e Program
yes Regex
head - Quantity
mount -o rw,remount -t yaffs2 Regex Regex
env
grep Regex
find Path -name Regex -exec basename {} \;
uniq -d
rsync -v -u -a -r --delete-after File File
find Path -type f -exec cat {} \;
tr -c Regex Regex
grep Regex
find Path
sed Program
sort
uniq -D -f File
cut -f Number
find Path -type f -exec grep -H Regex {} \;
ls -h -a -l File
tee File
chown Regex File
whoami
find Path -mmin -Quantity
find Path -type f -print0
xargs -0 -I {} grep -H Regex {}
find Path -iname Regex
xargs -I {} chmod Permission {}
echo -n
md5sum
find Path -mtime Timespan
find Path -name Regex -print
paste -d Regex >( grep Regex File
sed -e Program ) >( grep Regex File
sed -e Program )
echo Regex
tr Regex Regex
tail - Quantity
find Path -regex Regex -and -not -regex Regex
find Path -name Regex -exec cat {} \;
ssh -i File Regex command
find Path -mtime -Timespan -name Regex
grep -v Regex File
cut -d Regex -f Number
nl -w Quantity -s Regex
find Path ! -user Regex
find Path -type l -lname Regex
find Path
xargs -i -I {} rm -f {} {}
who
awk -F Regex Program
grep -v Regex
uniq
find Path -depth -empty -delete
find Path -name Regex -prune
gzip Regex
find Path -type f -name Regex
sed Program
sed Program
xargs -I {} cp -v {} File
bzip2 -k -v File
split --lines Quantity --numeric-suffixes --suffix-length Quantity File Regex
find Path -name Regex -print -exec cat {} \;
mkdir Directory
find Path -name Regex -exec basename Regex Regex \;
find Path -mtime Timespan -exec rm -r -f {} \;
find Path -mindepth Quantity -maxdepth Quantity
sort <( ls File ) <( ls File )
uniq -u
echo $( whoami )
mkdir -p $( file -b --mime-type File
uniq )
diff -b -u Quantity File File
find Path -mtime -Timespan -print
find Path -type d -name Regex -print
find Path -type f -not -iname Regex -exec cp {} File \;
find Path -iname Regex
find Path -name Regex -type f -print
diff -N -a -u Quantity File File
find Path -name Regex
grep Regex
grep -o Regex
find Path -name Regex -type d
ping -c Quantity -q Regex
tail -n Quantity
find Path Path -size +Size -atime +Timespan -print
find Path -name Regex
grep -v Regex
find Path -name Regex
find Path -name Regex -exec dirname {} +
sort -u
tac File
awk Program
tac
mount -o remount,rw -t yaffs2 Regex Regex
find Path -name Regex -type f -exec grep -H -n Regex {} +
ls -l File
find Path $( pwd ) -type f
zcat Regex
cut -d Regex -f Number
sort
uniq -c
find Path -type f -name Regex -print0
xargs -0 -I {} rename Regex {}
find Path -name Regex
finger Regex
awk Program
find Path -name Regex -exec rm -r -f {} \;
cat $( which Regex )
date -d Regex
find Path -newer File
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -size +Size
find Path -type d -execdir echo Regex {} Regex \;
mv File File
find Path -name Regex
cal
awk Program Program
df
grep Regex
yes Regex
sed -e Program -e Program
find Path -name Regex -size +Size -size -Size
find Path -type d -print
sed Program
xargs -I {} mkdir {}
find Path -type f -name Regex -exec grep --with-filename -c Regex {} \;
grep Regex
sort -t Regex -k Number -n -r
find Path -size +Size
find Path -type f -mtime -Timespan
ls -l -R File
tee -a File
chown -R Regex File
find Path -size Size
find Path -maxdepth Quantity
find Path -type f
find Path -daystart -mtime -Timespan
find Path -type f -name Regex
xargs -I {} tar -r -v -f File {}
diff -a -r -q File File
find Path -empty
find Path -perm -Permission
find Path -name Regex -print
find Path -group Regex
bg
find Path -size +Size
find Path -iname Regex
find Path -type f -mtime Timespan -mtime -Timespan -daystart -exec ls -l {} \;
find Path -mtime Timespan
find Path -name Regex -print
cpio -p -v -d Regex
find Path -name Regex
find Path -type f -name Regex
find Path -type f ! -name Regex -exec cp {} File \;
dig Regex Regex ns
tee
find Path -type f \( -name Regex -or -name Regex \) -print
mkdir -p Directory
dirname $( echo Regex
sed -e Program )
find Path -maxdepth Quantity -type d -exec ls -d -l -r -t {} \;
find Path -name Regex -exec rename Regex {} +
find Path -mtime -Timespan -print
find Path -name Regex -exec grep -l Regex {} \;
find Path -perm Permission -type f -exec ls -l {} \;
find Path -type l -print
xargs -I {} ls -l -d {}
awk Program
chmod Permission File -R
curl Regex
sh
find Path -name Regex -exec grep -m Quantity -i Regex {} \;
rmdir Directory
find Path -type f
xargs -I {} chmod Permission {}
find Path -iname Regex -atime Timespan -type -f
find Path -type f -print0
xargs -0 -I {} grep -i -l Regex {}
find Path -perm -Permission -type f
sort -r
echo Regex
ssh Regex
find Path -group Regex -exec chown Regex {} \;
ls File
more
find Path -type l
find Path -name Regex
set Regex
find Path -exec basename {} \;
w
find Path -perm Permission -type d -exec ls -l {} \;
cat File
tee File
find Path -iname Regex
ping Regex -c Quantity
grep -E -o Regex
grep -E -o Regex
sed -i Program -e Program $( find Path -type f )
find Path -printf "%h/%f : dernier accès le %AA %Ad %AB %AY à %AH:%AM:%AS\n"
find Path -name Regex
find Path -print0
grep -a -z -Z Regex
xargs -0 -I {} file {}
find Path -type d
find Path -type d -name Regex
find Path ! -path Regex -type f -print
find Path -size Size -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
find Path -mindepth Quantity -type d -print0
xargs -0 -I {} mv --target-directory Directory {}
find Path -type f -exec grep -n Regex {} \; -print
find Path \( -name Regex -or -name Regex \) -print
find Path -wholename Regex -prune -or -type f -perm -Permission -exec ls -l {} \;
find Path -print0
xargs -0 -I {} chown Regex {}
diff <( ls File ) <( ls File )
chown -R Regex File
rsync -c -h -a -v -z -P --stats File File
env
awk -F Regex Program
grep Regex
mount -t cifs Regex Regex -o username=Username,password=password
mktemp --tmpdir Directory Regex
find Path -type f -exec echo {} \;
find Path -iname Regex -exec  \;
sort
find Path -type f \( -perm -Permission -or -perm -Permission \) -ls
df -i File
echo Regex
tee --append File
find Path -name Regex -or -name Regex
cd $( find Path
sed Program )
md5sum File
awk Program
sort
uniq -d
find Path -type f -exec sed -i Program {} \;
scp -v File
date +%s
od -t fD File
tar -t -f File
cut -d Regex -f Number
uniq
find Path -name Regex -print -xdev
find Path -name Regex -print
xargs -I {} grep Regex File {}
date -r File
tree -a -f -i -s -p -u -g -D --inodes
awk Program
find Path -name Regex -ls
find Path
find Path -name Regex -exec rm {} \;
find Path -name Regex
diff File File
grep Regex
sed Program
find Path -nouser -ls
find Path -atime -Timespan -print
find Path -type f -print0
xargs -0 -I {} grep -l Regex {}
find Path -name Regex
find Path -name Regex -printf "%p:%T@\n"
sort -t Regex -k Number
chown -R $( whoami ) File
find Path Path
mkdir -p Directory
awk Program Program Program
column -t
ifconfig
grep -E -o Regex
grep -E -o Regex
grep -v Regex
find Path -group Regex
pushd $( dirname $( which Regex ) )
yes
rm -i File
find
rename Regex
find Path ! -name Regex -prune -name Regex -exec mv {} File \;
find Path -name Regex -type f
find Path -type f
xargs -I {} grep Regex {}
find Path -type f -regex Regex
find Path -mindepth Quantity -mtime +Timespan -delete
find Path -name Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find {} -name Regex -type f -or -type l -maxdepth Quantity -perm +Permission
ln -s File Regex
find Path -type f -exec grep -H Regex {} \;
xargs -n Quantity -I {} find Path $( pwd ) -type f -inum {} -print
join -v Quantity <( sort File ) <( sort File )
read -p Regex Regex
find Path -exec grep Regex {} \;
find Path -name Regex
sort -V -r
rename Regex
find Path -name Regex
find Path -size +Size -size -Size
find Path -user Regex -print
xargs -I {} chown Regex {}
find Path -type d -mtime +Timespan -exec compress File {} \;
find Path -newer File
find Path -iname Regex -print0
xargs -0 -I {} rm -r {}
find Path -maxdepth Quantity -type d
mount
tail - Quantity
sed Program
find Path -type f ! -perm Permission
head
cp -n File File
find Path -type f -exec chmod Permission {} +
readlink -f $( ls --dereference File )
gzip -l Regex
find Path -nogroup \( -fstype jfs -or -fstype jfs2 \) -ls
mount -o bind Regex Regex
find Path -type d -name Regex -exec rm -r {} \;
rm -d File
ssh Regex
seq -s Regex Number
tr -d Regex
find Path -type f
awk -F Regex Program
find Path -name Regex -exec ls -l -a {} \;
find Path \( -name Regex -or -name Regex \) -name Regex -print
find Path -maxdepth Quantity -xdev -type f -exec grep -l -i Regex {} \;
paste <( head - Quantity File ) <( tail - Quantity File )
column -t File
chown Regex File
cp -n
cat File
grep Regex
cut -f Number -d Regex
chown -R $( whoami ) File
find Path -type f -exec du -S -h {} +
sort -r -h
head -n Quantity
find Path -name Regex
find Path -nogroup
find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -size +Size -and -size -Size
find Path -name Regex -print0
xargs -0 -I {} grep -n -H Regex {}
grep Regex
find Path -name Regex -type f -exec du -h {} \;
find Path -regex Regex
find Path -lname Regex
find Path -type l
xargs -I {} ls -l -d {}
mkdir Directory
find Path -type f -print0
xargs -0 -I {} grep -l -E Regex {}
rsync -r -v -v File File
pushd - Quantity
find Path -type f -mmin Quantity
basename -- $( dirname -- Regex )
paste -s -d File File
ifconfig Regex
grep -o -E Regex
find Path -name Regex -print -exec cat {} \;
fg
find Path -newer File -exec tar -u -v -f File {} \;
find Path -type d -name Regex
find Path -name Regex -print
find Path -name Regex -print0
xargs -0 -I {} gunzip {}
find Path -type d -print
find Path
xargs -I {} sed -i Program {}
find Path -type f -mtime +Timespan -exec rm {} \;
find Path Path -type f
ls -1
paste -s -d File File
find Path -name Regex
grep -v Regex
tr Regex Regex
xargs -0 -I {} tar -c -f File {}
find Path \( -name Regex ! -path Regex \) -exec grep -I -w Regex {} +
find Path -size -Size
cd $( find Path -name Regex -type d
sed Program )
find Path -type f -name Regex
find Path -perm -Permission
find Path -type f -links +Quantity -exec ls -l -r -t {} \;
find Path Path -lname Regex
find Path -type f -name Regex
xargs -I {} sed -i Program {}
find Path -size +Size -size -Size
watch echo -e Regex
find Path -type d
gzip Regex
find Path -name Regex -not -type d -not -name Regex -exec ln -s File Regex \;
find Path -regextype posix-extended -regex Regex -fprint File
find Path -iname Regex -print
xargs -I {} rm -r -f {}
rsync -P -r -t --size-only File File
find Path -type f -not -empty
wc -l
comm -2 -3 <( ls File
sort ) <( ls File
sort )
find Path -iname Regex
od -t x2 -N File File
cut -c Number
grep -E -m Quantity -q Regex
find Path -iname Regex
find Path -type f -wholename Regex -exec grep -H Regex {} \;
rsync -a -u -v -e File File File
find Path -depth -type d -empty -delete
find Path -type f -inum Quantity -delete
fold -w Quantity -s File
find Path -path Regex -prune -or -print -and \( -type f -or -type l -or -type d \)
grep Regex
find Path -maxdepth Quantity -type d -empty -exec rm {} \;
find Path -type f -exec grep Regex {} \; -ls
find Path -name Regex
xargs -I {} wc -l {}
find Path -name Regex -type f -cmin +Quantity
grep Regex
sed Program
chown Regex File
find Path -type f -mtime -Timespan
find Path -iname Regex
xargs --replace Regex -I {} cp File File {}
find Path -type f -exec chmod Permission {} \;
find Path -amin -Quantity
mkdir -p Directory
who File Regex
awk Program
sed Program
cut -f Number -d Regex
sed Program
find Path \( -name Regex -prune \) -or \( -type f -print \)
history
awk Program
awk Program
sort
uniq -c
sort -n -r
head
read -r -p Regex -e -i Regex Regex
find Path -name Regex -type d -exec rm -r {} \;
find Path -type f -name Regex -exec tar -u -v -f File {} \;
find Path -type f -name Regex -exec grep -l Regex {} \;
find Path -perm Permission
wc $( find Path -name Regex )
mkdir Directory
shopt -s cmdhist
find Path -name Regex
xargs -I {} grep Regex {}
find Path -maxdepth Quantity -name Regex -type d -print0
xargs -0 -r -I {} mv -t Directory {}
find Path -iregex Regex -prune -or -type d -name Regex
rsync -a -v --exclude Regex File File
find Path -type f -exec rm -f -v {} \;
find Path -name Regex -exec chmod Permission {} \;
find Path -ls
find Path -type f -name Regex -exec grep -l Regex {} \;
echo -n Regex
md5sum
tr -d Regex
find Path -name Regex -prune -or -print
find Path -s
find Path -type d
find Path -path Regex -prune -or -type f -name Regex -print
find Path -name Regex -exec rm {} File \;
find Path -type f -name Regex
find Path -size +Size -and -size -Size
find Path -size Size
find Path -name Regex
xargs -I {} grep Regex {}
readlink -f File
echo Regex
column
find Path -type f -exec chmod Permission {} \;
find -L Path -name Regex -exec rm {} +
find Path -type f -exec split -l Quantity {} \;
find Path -size +Size
find Path -name Regex -type f -print0
xargs -0 -I {} wc -l {}
find Path -type f -maxdepth Quantity -not -empty -print0
xargs -0 -i -I {} cp File {} {}
find Path -nouser -exec rm {} +
man Regex
find Path -type f -exec grep -l Regex {} \;
gzip -d -c Regex
tar -x -f File -C Directory
find Path -user Regex
more
find Path -type f -print0
xargs -0 -L Quantity -I {} wc -l {}
column -x -c Quantity File
find Path Path -iname Regex -print0
xargs -0 -d Regex -- -I {} grep -i Regex -- {}
find Path -inum Quantity -exec rm {} \;
dig -f File
find Path -type f
xargs -I {} chmod -v Permission {}
find Path -name Regex
wc -l
find Path -mtime +Timespan -mtime -Timespan
read -p Regex Regex
find Path -exec touch {} \;
find Path -iname Regex -print0
xargs -0 -I {} rm {}
find Path -type f -name Regex
grep Regex
find Path -type f -mtime Timespan -ls
chown Regex File
find Path -name Regex -type f
xargs -I {} wc -l {}
find Path -daystart -type f -mtime Timespan
find Path -name Regex -exec wc -c {} +
tail -n Quantity
cut -d Regex -f Number
find Path -nouser -exec chown Regex {} \;
find Path -type -f -cmin +Quantity -delete
find Path -type f -regex Regex
find Path -name Regex
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -type f -exec file {} \;
awk -F Regex Program
wget $( hostname -I ) Regex
find Path -mtime +Timespan
find Path -maxdepth Quantity -size Size -exec rm {} \;
ping -c Quantity Regex
awk Program
cut -d Regex -f Number
find Path
xargs -I {} basename {}
find Path -nogroup -print
df
find Path -name Regex
ls -l
find Path -iname Regex
bind Regex
find Path -mtime -Timespan -name Regex
find Path -name Regex
rename Regex Regex
find Path -type f -mtime +Timespan -print0
awk -v Program -v Program Program
xargs -0 -I {} rm {}
find Path -name Regex -or -name Regex
ls
tee File
find Path -name Regex
df -P -h File
tail - Quantity
awk Program
find Path -mmin Quantity -print
more File
grep $( hostname )
awk Program
bind Regex
crontab
find Path -name Regex
find Path -type f -name Regex -not -name Regex
find Path -maxdepth Quantity ! -path Regex -exec mv {} File \;
find Path -name Regex -type f -exec grep -H -n Regex {} +
wc -l
find Path Path Path Path -type d -exec cp File {} \;
sort -u File File
find Path -type d -printf '%p:'
find Path -iname Regex -exec cp {} File \;
sleep Timespan
find Path -name Regex -prune
find Path -mmin -Quantity
find Path -type d
grep -E -v Regex
less
find Path -iname Regex -or -iname Regex
find Path -perm Permission -type f -exec ls -l {} \;
find Path -iname Regex -or -iname Regex
ln -s File Regex
whoami
tr Regex Regex
find Path Path Path -ok rm {} \;
zcat Regex
grep -E Regex
find Path -inum Quantity -exec rm {} \;
cd $( dirname $( readlink -f File ) )
find Path -maxdepth Quantity -not -name Regex -print0
xargs --null -I {} chown -R Regex {}
echo -e Regex
tr -d Regex
grep Regex
who
awk Program
find Path -name Regex
xargs -I {} grep -i -H Regex {}
find Path -not -path Regex -iname Regex
tar -c -f File File
tar File File
awk Program
grep -v Regex
comm -3 <( sort -u -n File ) <( sort -u -n File )
cat File
tr -d -c Regex
fold -w Quantity
head -n Quantity
xargs -I {} mkdir {}
find Path -type f -exec grep Regex {} \; -print
find Path -inum Quantity
find Path -type f -printf "%f\n" -name Regex
sort -f
uniq -i -d
od -v -t x1 File
read Regex
ifconfig Regex
grep Regex
grep -v Regex
find Path -name Regex -print
xargs -I {} grep Regex {}
ps -e -f
grep Regex
grep $( whoami )
ssh -o ServerAliveInterval=60 Regex
find Path -name Regex -exec ls -l -d {} \;
rsync File File -a --copy-links -v
find Path -type d -exec mv {} File \; -exec mkdir Directory \;
find Path -type d -printf "%A@ %p\n"
sort -n
tail -n Quantity
cut -d Regex -f Number
find Path \( -name Regex -mtime +Timespan -or -name Regex \) -print0
find Path -size +Size -size -Size
crontab -l
grep -E Regex
find Path -type f -print
tree -d
find Path -type d -exec chmod Permission {} \;
find Path -type f -regex Regex -print0
find Path -name Regex
find Path -path Regex
find Path -type f -iregex Regex ! -name Regex -print0
find Path -daystart -mtime +Timespan -type f -exec rm {} \;
find Path -size Size
dig Regex Regex ch txt
find Path -type d -atime +Timespan
chmod Permission $( find Path -name Regex )
find Path -iname Regex
find Path \( -type f -exec chmod Permission {} \; \) -and \( -type d -exec chmod Permission {} \; \)
echo $( pwd )
find Path -name Regex
xargs -I {} grep -E Regex {}
find Path -name Regex -type f
rename Regex
find Path -type f
xargs -I {} grep Regex {}
dig Regex
find Path
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path -type f -name Regex -exec wc -l {} \;
grep -E Regex
find Path -type f -name Regex
find Path -name Regex Path Path -mtime -Timespan -print0
xargs -0 -I {} tar -r -v -f File {}
find Path -type f -exec grep -l Regex {} +
find Path -exec ls {} \;
find Path -mindepth Quantity -maxdepth Quantity -name Regex
find Path -mmin -Quantity
find Path -type f -exec chmod Permission {} +
find Path -name Regex
xargs -P Quantity -I {} rename Regex {}
find Path -mtime -Timespan -ls
scp -p File File
find Path -name Regex -ctime +Timespan -exec rm -f {} \;
find Path
cpio -p -d -u -m -v Regex
md5sum File
cut -d Regex -f Number
find Path -type f -name Regex -print -exec cat {} \; -exec sleep Timespan \;
find Path -iname Regex
find Path -perm Permission
history -n
find Path -type d -name Regex -ls
find Path -name Regex -exec rename Regex {} \;
find -L Path -name Regex
xargs -I {} rm {}
find Path -name Regex
wc -l
find Path -type f -perm Permission -exec ls -l {} \;
find Path -type f -print
find Path -depth -empty -type d -delete
find Path -type f -print
xargs -I {} grep -i -l Regex {}
tee File
gzip {}
find Path -maxdepth Quantity -name Regex -prune -or -exec rm -r -f {} \;
find Path -type f -name Regex -ctime -Timespan -exec sed -i Regex -e Program -e Program {} \;
find Path -type f -print -exec grep -n -i Regex {} \;
cat $( uname -r )
grep Regex
find Path -type d ! -name Regex
echo $( sleep Timespan )
readlink File
find Path -type l -xtype l
cut -f Number File
sort
uniq -c
sort -n -r
find -type f -maxdepth Quantity Path
find Path -type f -print0
xargs -0 -I {} ls -l -t -r {}
head -n Quantity
yes
rm -r -i File
find Path
touch -m File File
find Path -path Regex -print
find Path -type f -exec basename {} \;
xargs -I {} rm {}
od -t x1 --skip-bytes Size --read-bytes Size File
head - Quantity
awk Program
find Path -type f -printf "%f\n"
find Path -type d -maxdepth Quantity -exec basename {} \;
find Path -name Regex -print0
xargs -0 -I {} chmod Permission {}
find Path -type f -perm Permission
find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n'
which Regex
find Path -type f -name Regex -atime -Timespan -user Regex
find Path -atime +Timespan -type f -exec mv {} File \;
cat File
dig Regex
grep Regex
grep -v Regex
awk Program
find Path -type f -exec file {} \;
find Path -name Regex -exec chmod Permission {} \; -exec echo {} \;
wc -l
diff -r -q -x File -x Regex -x Regex File File
grep Regex
grep Regex
find Path -name Regex -not -path Regex
find Path -type f -name Regex
find Path -name Regex -exec chmod Permission {} \;
find Path -name Regex -exec chgrp -v Regex {} \; -exec chmod -v Permission {} \;
find Path -name Regex -print0
xargs -0 -I {} grep -E Regex {}
find Path -mtime -Timespan -print
find Path -name Regex
find Path -name Regex -printf '%h\n'
w
head - Quantity
cut -d Regex -f Number
cut -d Regex -f Number
tr Regex Regex
mv $( find Path -name Regex -printf "%h\n"
uniq ) File
read -n Quantity -p Regex Regex
find Path -iregex Regex -iregex Regex
find Path -name Regex
find Path Path
false
find Path -name Regex -exec cp -t Directory -- {} +
find Path -iname Regex -exec tar -c -v -f File {} \;
find Path -mtime -Timespan -print
find Path -name Regex -execdir ls -l -a {} \;
ls -t File
tail - Quantity
xargs -I {} rm -f {}
cal DateTime DateTime
tee File
more
find Path -path Regex -type f -iname Regex
find Path -type f \( -iname Regex ! -iname Regex \)
$( hostname )
ln -s $( which Regex ) Regex
chown --reference File Regex
find Path -maxdepth Quantity -mindepth Quantity -iname Regex -type f
find Path -type f -user Regex -perm -Permission -exec ls -l {} \;
ls -l $( cat File )
find Path -name Regex
wc -l
find Path -regex Regex -type f -printf '%T+ %p\n'
sort
head -n Quantity
find Path -path Regex -prune -or -name Regex -print
find Path -mmin -Quantity -mmin +Quantity -type f -name Regex -exec ls -l {} \;
find Path -type f -mtime Timespan -exec du -k -s {} \;
cut -f Number
awk Program
find Path -inum Quantity -exec mv {} File \;
find Path -user Regex
find Path -daystart -mtime -Timespan -ls
find Path -type f -regex Regex
cp File File
find Path -type f -print0
xargs -0 -I {} sed -i Program File {}
find Path -regex Regex
find Path -iname Regex -exec grep Regex {} \; -print
sed -r Program
find Path -perm -Permission
find Path -type f -exec basename {} \;
find Path -maxdepth Quantity -name Regex
tail
find Path -type f
wc -l
find Path -name Regex
find Path -type f -name Regex -print0
xargs -0 -I {} rename Regex {}
find Path -type f -name Regex
find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \;
find Path -type f -exec sed -i Program {} +
find Path -cmin -Quantity
gunzip -t Regex
find Path -type f
grep -i Regex
sort
tee File
find Path -type f -name Regex
find Path -type f -not -name Regex
xargs -I {} rm {}
find Path -name Regex
xargs -I {} sed -i Program {}
find Path -name Regex -exec wc -l {} \;
find Path -name Regex -exec grep -H -n Regex {} \; -exec sed -i Program {} \;
find Path -type d -print0
xargs -I {} chmod Permission {}
find Path -name Regex -exec basename {} \;
yes
cp -r -f File File
diff -q File File
find Path -name Regex -print
xargs -I {} grep Regex {}
find Path -type f -print -or -type d -prune
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
cut File -f Number File
gzip -d -c Regex
grep -P --regexp Regex
split -l Quantity
find Path -perm -Permission
find Path -name Regex -exec chmod Permission {} +
mkdir Directory
find Path -name Regex -delete
rsync -p -r File File
find Path -size +Size -size -Size
awk -f File Program Program
rev
column -t
rev
find Path -type d -name Regex -print
find Path -name Regex -print
find Path -name Regex -type f -exec sed -i Program -- {} \;
find Path -mindepth Quantity -type d -print0
find Path -type d -name Regex
find Path -name Regex -print
find Path -type f -exec ls -s {} \;
sort -n -r
find Path -type f -noleaf -links +Quantity -printf "%n %i %f\t%h\n"
sort
less
chmod Permission $( find Path -type d )
find Path -name Regex
tee File
xargs -I {} grep Regex {}
find Path -type f -printf "\n%AD %AT %p"
head -n Quantity
find Path -name Regex -prune -or -regex Regex
find Path -mtime +Timespan -daystart
read -n Quantity -p Regex Regex
rm -r -f File
who -m
dirname Regex basename Regex
tr Regex Regex
find Path -name Regex -type f
sort
xargs -I {} wc -l {}
find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -print0
xargs -0 -n Quantity -I {} echo {}
find Path -depth -wholename Regex -prune -or -mtime -Timespan -print
cpio -o -a -v
join -t Regex -a Quantity -a Quantity <( sort File ) <( sort File )
mount Regex Regex Directory
find Path -name Regex
find Path -type d -print
find Path -type f -exec grep -H Regex {} \;
md5sum File
tree
find Path \( ! -path Regex \) -and -type f -and \( ! -name Regex \) -and \( ! -name Regex \)
xargs -I {} grep -n Regex {}
find Path -type f -name Regex -print0
xargs -0 -I {} sed -i -e Program {}
find Path -name Regex -print
find Path
shopt -s progcomp
find Path -mtime +Timespan -exec rm {} \;
find Path -name Regex -and -type d -prune -or -print
read -e -p Regex -i Regex Regex
find Path -type f -iname Regex
find Path -name Regex -exec grep -i -n Regex {} \;
find Path -iname Regex -print
ln -s -f $( readlink -f File ) Regex
hostname -s
find Path -perm -Permission -print
xargs -I {} chmod Permission {}
find Path -type f -mtime Timespan -iname Regex
find Path -type f -exec chmod Permission {} +
cd -P Directory
find Path -type f
xargs -I {} chmod Permission {}
find Path -type f -exec grep Regex {} \; -ls
awk Program <( w )
yes Regex
nl -b a
sed Program
grep Regex
awk Program
grep -v Regex
paste -s -d Regex File
cal DateTime DateTime
awk Program
ps
tail -n Quantity
sed Program File
seq Number Number
head - Quantity
find Path -mtime +Timespan
cp -n File File
find Path -mindepth Quantity -type f
find Path -cmin Quantity -print
find Path -type f -iname Regex -print0
xargs -0 -I {} mv {} File {}
find Path -maxdepth Quantity -type d -exec chmod -R Permission {} \;
find Path -print0
xargs -0 -I {} grep Regex {}
find Path -perm Permission
find Path -regex Regex
who
awk Program
cd $( ls -r -d File
tail --lines Quantity )
shopt -u nullglob
find Path -user Regex
find Path -not -path Regex
echo Regex
gzip -c -f
find Path -type f -mtime Timespan
find Path -path Regex -prune -or -type f -name Regex
grep -v Regex File
nl -n ln
find Path -type d -exec chmod Permission {} \;
find Path -atime +Timespan -exec ls \;
wc -l
find Path -type f -iname Regex -printf '%h\n'
sort
uniq
xargs -n Quantity -d Regex -I {} mkdir -v -p Directory
awk Program Program
comm -1 -3 File File
join File File
find Path -name Regex
find Path -depth -wholename Regex -prune -or -print
read -n Quantity -e Regex
$( date -u -d Regex +"%s" )
mktemp -p Directory Regex
find Path -mtime +Timespan
find Path -type l -exec readlink -f {} \;
grep -v $( readlink -f File )
find Path -iname Regex -or -iname Regex
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
sed Program
xargs -I {} ls -l {}
find Path -perm Permission
head
seq Number
awk Program
zcat Regex
cat <( yes
tr Regex Regex
head -c Quantity ) <( sleep Timespan )
grep Regex
find Path -name Regex -exec grep -l Regex {} \;
od -a File
find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \;
find Path -name Regex
find Path -name Regex
xargs -I {} grep Regex {}
find Path Path
find Path -type d -exec touch File \;
find Path -type f -printf '.'
wc -c
find Path -type f -print0
xargs -r -0 -I {} grep -F Regex {}
hostname -f
find Path -not -path Regex
info -O Regex
find Path -exec grep Regex {} \;
find Path -user Regex -exec chown Regex {} \;
find Path -type d -empty -print0
xargs -0 -I {} rmdir {}
mkdir Directory
find Path -name Regex -exec rm -f {} \;
find Path -not -name Regex -not -name Regex
find Path -type f -name Regex
head - Quantity
find Path -inum Quantity
od -A n -N File -t u2 File
find Path -name Regex
xargs -I {} ls -l {}
mount -t smbfs -o soft Regex Regex
find Path -iname Regex
echo -e Regex
nl
find Path -inum Quantity
find Path -type d -perm Permission -print -exec chmod Permission {} \;
sort
uniq -c
sort -n
find Path -empty
yes
rm
find Path -name Regex -user Regex -print
find Path -name Regex
find Path -type f -and \( -name Regex -or -name Regex -or -name Regex \)
read -p Regex Regex
find Path -type l -print
echo Regex
crontab File
find Path -name Regex -exec mv -t Directory {} +
shopt -s promptvars
who File Regex
awk Program
read -e -p Regex -i Regex Regex
find Path \( -perm Permission -or -perm Permission \) -print
diff File File
cd -P Directory
cp --remove-destination $( readlink File ) File
find Path -name Regex -not -path Regex -print
comm -2 -3 <( sort -u File ) <( sort File )
sed -i Regex -e Program Program
find Path -cmin -Quantity
find Path -perm Permission
find Path -inum Quantity -exec rm -i {} \;
gzip -d -c Regex
tar -x -f File -C Directory
find Path -name Regex
rename Regex
find Path -print0
xargs -0
find Path -type f -name Regex -exec grep -H Regex {} +
find Path -type f -print
xargs -I {} file {}
tar -c -f File File
tar File File
chown Regex File
curl Regex Regex
find -x Path -name Regex
which Regex
find Path -mindepth Quantity -maxdepth Quantity -type d
cut -c Number
sort -k Number
tail -n Quantity
xargs -r -I {} echo Regex Regex {}
find Path -name Regex -type d -print -exec rm -r -f {} \;
ps -a -u Regex
grep Regex
awk Program
xargs -I {} pstree {}
sort File
uniq
sort -o File
find Path -user Regex -exec chown Regex {} \;
find Path -name Regex -print
head -n Quantity
tree -a Directory
md5sum $( which Regex )
pstree
grep Regex
less -S -E -X
find Path -type d -iname Regex
find Path -iname Regex -exec cp {} File \;
mkdir Directory
mkdir Directory
find Path -mtime -Timespan
find Path -type f -print0
xargs -r -0 -I {} grep -F Regex {}
find Path Path -exec cat {} \; -exec echo \;
find Path -iname Regex \( -type d -or -type f \) -mtime -Timespan
pstree -p Regex
sed Program
sed -n -e Program
read -p Regex
find Path -type f -print
find Path -type l -print
xargs -I {} ls -l -d {}
awk Program
uname -n
find Path -maxdepth Quantity -type d -name Regex
tree -C -s -u
find Path -mtime +Timespan -print
cat File
sed Program
column -t
cat File
nl
sed Program
ps -e -f
grep -v Regex
grep -w -c Regex
shopt nullglob
sed --in-place Regex Program
chmod Permission File File
find Path -iname Regex
find Path -name Regex -type f -exec chmod Permission {} \;
find Path ! -perm Permission -exec chmod Permission {} \;
cat File
fold -w Quantity
head - Quantity
find Path -atime +Timespan -type f -exec mv {} File \;
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
rsync -n -v -r -a -L File File --exclude Regex
find Path -iname Regex -exec ls -l {} \;
find Path -name Regex
wc
diff -b -u Quantity File File
find Path -type f -name Regex
find Path -amin +Quantity -amin -Quantity
find Path -uid Regex -print
find Path -type f -exec cat {} \;
tr -c Regex Regex
grep Regex
find Path -user Regex -print
find Path -type f -print0
xargs -0 -I {} md5sum {}
find Path -atime -Timespan -amin +Quantity
find Path -perm Permission
sort --random-sort File
head -n Quantity
find Path \( -name Regex -and -mtime +Timespan \) -exec rm {} \;
echo -e Regex
tr -d Regex
find Path -name Regex
find Path -type f -printf "%T+ %p\0"
sort -z
grep -z -o -m Regex File
cat
find Path -path Regex
mkdir $( seq -f "$HOME/Labs/lab4a/folder%03g" Number )
find Path -type f \( -iname Regex ! -iname Regex \)
du -h --max-depth Quantity File
sort -h -r
find Path -type f
dig Regex Regex a
find Path \( ! -name Regex -prune \) -name Regex -print
find Path ! Path -prune -or -print
who -l -a
find Path -iname Regex
sort File <( zcat Regex
sort ) <( zcat Regex
sort ) File
find Path -type f -exec grep Regex {} \;
find Path \( \( -name Regex -or -name Regex \) -type d -prune \) -or \( -name Regex -type f -exec grep -i -l Regex {} + \)
find Path -type f -name Regex -delete
find Path -type d
grep Regex
find Path -mindepth Quantity -maxdepth Quantity
find Path -type f -print
xargs -I {} grep -i Regex {}
find Path -name Regex -type d -print -exec rm -r -f {} \;
find Path -empty -exec ls {} \;
find Path -regex Regex
find Path -size +Size -exec rm {} \;
find Path -type f -perm Permission -print
find Path -type d -and -name Regex
mktemp $( basename Regex )
find Path -type f -atime +Timespan -exec rm {} \;
touch $( date --date Regex ) File
find Path -type f -name Regex -exec sed Program {} \;
find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex -exec ln -s -t Directory {} \;
find Path -name Regex -exec grep -n Regex {} File \;
find Path -name Regex
find -name Regex Path
find Path -path Regex
find Path -type f -links +Quantity
find Path -name Regex
history
grep -L -Z -r Regex File
xargs -0 -I {} mv {} File
find Path -type l
find Path -type f -name Regex -exec grep -q Regex {} \; -exec dirname {} \;
pwd -L
find Path -type f -name Regex -printf "found\n"
nl -b a File
sort -k Number
sed Program
sort -k Number
sed Program
find Path -mindepth Quantity -maxdepth Quantity -type d
grep Regex
xargs -n Quantity -I {} cp -i File {}
find Path -user Regex -iname Regex
head
find Path -type f -iname Regex
find Path -name Regex -mtime Timespan
find Path -name Regex -exec grep -n -f File {} \;
find Path -mtime +Timespan
less -N File
$( mktemp )
find Path -type f -exec chmod Permission {} \;
find Path -type f -size +Size -print -name Regex -exec rm {} \;
find Path -name Regex -print
find Path -type f -user Regex
find Path -perm Permission -print
find Path -type f -name Regex
find Path -depth -print0
find Path -type f -mtime Timespan -ls
find Path -name Regex -print Path
find Path -perm Permission
find Path -name Regex
column File
rsync -a --filter Program File File
ln -f File Regex
mv File File
sed Program
find Path Path -type d -exec chown Regex {} \;
find Path -name Regex
find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n'
find Path -iname Regex
find Path -name Regex -exec chmod -Permission {} \;
find Path -name Regex -or -name Regex -or -name Regex -print0
xargs -0 -I {} mv --target-directory Directory {}
chown Regex -R File
fold -w Quantity File
sed -e Program -e Program
file File
find Path -name Regex
xargs -I {} cp -a --target-directory Directory --parents {}
echo Regex
sed Program
column
cat File
wc -c
find Path -type f -perm Permission -print
find Path -name Regex -print0
sed Program
xargs -0 -n Quantity -I {} mv {}
find Path -name Regex
xargs -I {} rm {}
find Path -type d -exec chmod Permission {} +
less -S File
find Path -name Regex -exec grep -H -n Regex {} \;
find Path -name Regex -or -name Regex -or -name Regex
find Path -perm Permission
find Path -name Regex -type f -exec cp {} File \;
find Path -mtime Timespan
find Path -user Regex
ls -l -t
tr -d Regex
find Path -daystart -type f -mtime Timespan
find Path -empty
cat <( grep -v -x -F -f File Regex ) <( grep -v -x -F -f File Regex )
top -b -d Timespan
grep Regex
tee File
find Path -mtime Timespan
grep -v Regex
grep -v Regex
find Path -atime +Timespan -exec ls \;
find Path -type f -name Regex -exec ln -s {} Regex \;
find Path -mindepth Quantity -name Regex
mkdir Directory
diff -q -r File File
cut -d Regex -f Number
xargs -I {} dirname {}
uniq
comm -1 -3 <( sort File ) <( sort File )
find Path -name Regex -exec ls -l -d {} \;
find Path -name Regex -exec chmod Permission {} + -printf '.'
wc -c
find Path -type f -name Regex -exec du -c -h {} +
grep Regex
hostname -I
cut -d Regex -f Number
find Path -name Regex -maxdepth Quantity -exec rm {} \;
dig -x Regex
grep Regex
cut -d Regex -f Number
grep Regex
cut -f Number
chown -R Regex File
find Path -type f -exec grep -o Regex {} \;
wc -l
find Path -name Regex -print0
xargs -0 -I {} ls {}
df File -B Size
tail - Quantity
awk Program
find Path -path Regex
find Path -mtime -Timespan
split --lines Quantity File
find Path -size +Size
find Path Path -type f -exec md5 File {} \;
sort
tar -x -z -f File -C Directory
find Path -name Regex -not -path Regex
$( mktemp Regex )
find Path -name Regex -print0
xargs -0 -I {} grep Regex {}
du -s File
read Regex
rm File File File
tac File
rev
find Path -type f -perm Permission -print -exec chmod Permission {} \;
sort <( sort -u File ) File File
uniq -u
find Path -iname Regex
find Path -name Regex -print0
xargs -0 -I {} grep Regex File {}
du -s -b File
cut -f Number
find Path -name Regex
touch -d Regex File
find Path -print0
xargs -0 -I {} file {}
su Regex
find Path -type d -perm Permission -exec chmod Permission {} \;
find Path -type f -inum Quantity -exec mv {} File \;
find Path -maxdepth Quantity -iname Regex
xargs -I {} tar -c -z -v -f File {}
find Path -type f
xargs -I {} ls -l {}
find Path -type f -iname Regex
find Path -group Regex -name Regex
find Path -type f -wholename Regex -exec grep -H Regex {} \;
find Path -cmin -Quantity
du -B Size --apparent-size File
find Path -atime +Timespan
$( echo Regex
md5sum )
man Regex
grep Regex
ifconfig
grep -v Regex
sed -n Program
find Path -name Regex -printf '%h\n'
uniq
xargs -I {} ls -l {}
find Path -name Regex -type d -exec mv {} File \; -exec mkdir Directory \; -exec sh -c mv File File \;
cat File
sort -r
find Path -type f -name Regex -exec sed --in-place Regex {} +
find Path -name Regex
xargs -I {} grep -l Regex {}
find Path -lname Regex
find Path -type f -name Regex
find Path -maxdepth Quantity -type d
echo $( dirname $( readlink -m File ) )
find Path Path Path Path
pstree --show-parents -p Regex
head -n Quantity
sed Program
wc -l
find Path -type f -printf '%k %p\n'
sort -n
tail -n Quantity
chown Regex File
find Path -type f -name Regex ! -name Regex -print
find Path -amin +Quantity -amin -Quantity
find Path -maxdepth Quantity -empty
find Path -name Regex -type f -print
xargs -I {} rm -f {}
find Path -mtime Timespan
find Path -type f
shred -v -n File File
set
grep Regex
mv File $( dirname Regex )
find Path -name Regex
xargs -r -I {} ls -l -r -t {}
awk Program
ls -l --color always File
grep --color never Regex
pwd
grep -o Regex
find Path -regextype posix-extended -type d -regex Regex
find Path -iname Regex
find Path -mtime -Timespan
jobs -l
echo Regex
md5
find Path -exec echo Regex {} \;
find Path -name Regex -exec ls -a {} \;
find Path -name Regex -mtime Timespan
find Path -name Regex -print0
xargs -0 -I {} mv {} File
chmod Permission File
find Path -name Regex
find Path -depth -path Regex -prune -or -print
echo -n -e Regex
sort -V -r
head -n Quantity
find Path -type f -print0
xargs -0 -n Quantity -I {} md5sum {}
sort -k Number
uniq -w Quantity -d --all-repeated separate
sed -e Program
find Path -mtime +Timespan -exec rm {} \;
split -l Quantity
find Path -mtime -Timespan -print
find Path -type f ! -perm -Permission -ls
find Path -mtime -Timespan -or -newer File
read -r -n Quantity
find Path -name Regex -or -name Regex
hostname -I
awk Program
find Path -mtime Timespan -daystart
chown Regex File
set Regex
sort
uniq -c
find Path -exec chmod Permission {} \;
find Path -depth -type d
sed Program
find Path $( mount -t smbfs
awk Program ) -mount -type f -ls -execdir file {} \;
find Path -atime +Timespan
find Path -name Regex -exec grep -i -H Regex {} \;
find Path -cmin -Quantity
head
find Path -type f -newermt $( date '+%Y-%m-%d %H:%M:%S' -d Regex )
find Path -name Regex -mtime +Timespan Path
xargs -0 -I {} rm {}
df -k File
tail - Quantity
awk Program
find Path \( -name Regex -or -name Regex \)
xargs -I {} grep -l Regex {}
xargs -I {} sed -i -e Program {}
seq Number
awk Program
find Path -type f -exec chmod Permission {} +
find Path
grep -v -f Regex
find Path -type f
grep -E -v Regex
xargs -I {} bzip2 -9 {}
rmdir Directory
echo -e -n Regex
tr Regex Regex
chown -R Regex File File
find Path -name Regex -type f -print0
xargs -0 -n Quantity -P Quantity -I {} grep -H -n Regex {}
find Path -iname Regex -exec grep Regex {} \; -print
grep -o Regex File
sort
uniq -c
dirname $( pwd -P )
find Path -type d
sort
awk Program
find Path -size +Size
find Path -group Regex -print
find Path -name Regex
find Path -type f
xargs -I {} grep -l Regex {}
echo $( basename Regex )
ifconfig
grep -o -P Regex
echo
ssh-keygen -P Regex
find Path -type f -exec echo {} {} \;
find Path -name Regex -exec rm -v {} \;
find Path -name Regex -print
grep Regex File
cut -d Regex -f Number
tr Regex Regex
cat File
paste -s -d File
find Path $( pwd ) -name Regex
chmod Permission $( find Path -type f )
find Path -regex Regex -and -not -regex Regex
history
grep Regex -A Quantity -B Quantity
diff -y -W Quantity File File
find Path -name Regex -print
find Path -regex Regex
sort File
cd $( find Path -name Regex -type d
sed Program )
rm -f File
find Path -type f -exec grep Regex {} \;
find Path -mtime +Timespan
find Path -name Regex -user Regex
find Path -name Regex -ok rm {} \;
ssh-keygen -t rsa
find Path -type d -iname Regex -ls
find Path -iname Regex
whoami
awk Program
split -n Quantity File
find Path -type d
xargs -I {} rmdir {}
find Path -name Regex -exec gunzip {} \;
find Path Path -name Regex
find Path -type d -regex Regex
find {} -type f -depth Path -perm +Permission
sort -r
find Path -name Regex -print
grep -P Regex
find Path
find Path -name Regex -printf 'Since -printf is an action the implicit -print is not applied\n'
hostname -i
find Path -mtime Timespan -name Regex -print
find Path Path -name Regex
find Path -name Regex -exec rm {} \;
find Path -maxdepth Quantity -name Regex -type f -cmin +Quantity -exec basename {} \;
find Path -ctime -Timespan -print
find Path -depth -empty -delete
find Path -name Regex
xargs -I {} rm {}
find Path -iname Regex -exec du -b {} +
cd $( find Path -name Regex )
find Path Path -f -atime Timespan
find Path ! -name Regex -exec compress -f {} \;
find Path -type d -name Regex
sed Program
comm -2 -3 <( ls ) <( ls File )
env $( cat File
xargs ) Program
ifconfig
awk Program
mkdir Directory Directory
cut -d Regex -f Number
find Path -type f -perm -Permission
tac File
grep Regex
find Path -name Regex -exec grep -H -F -f <( find Path -name Regex -printf "%f\n" ) {} \;
rm -r -i File
find Path -atime +Timespan -size +Size -print
find Path -type f -perm Permission -print
find Path
sort -n
tail - Quantity
find Path -type f -name Regex -exec grep -i -l Regex {} \;
find Path -type d -perm -Permission
find Path -newer File
find Path -type f \( -name Regex -or -name Regex -or -name Regex \) -exec ls {} \;
find Path Path -depth -mindepth Quantity -name Regex -ignore_readdir_race -type f -cmin Quantity -delete
find Path
head
find Path -newer File -exec tar -u -v -f File {} \;
find -L Path -name Regex -print0
xargs -0 -r -I {} rm {}
cd Directory
fold File File
more
rename Regex Regex File
ls -a
tee File
tar -c -z -f File $( find Path -d Path -type d -name Regex -print )
find Path -type f -name Regex -exec tail -n +Quantity -q File {} +
tee File
find Path -name Regex -atime +Timespan -exec rm {} \;
find Path -mindepth Quantity -maxdepth Quantity -type d
grep Regex
find Path -type f -print
xargs -I {} grep Regex {}
find Path -mount -name Regex
find Path -name Regex -print
chown Regex File
find Path
find Path -type f ! -iname Regex -delete
cat File
xargs -I {} du -c {}
tail - Quantity
find Path -name Regex
find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0
xargs -0 -I {} wc {}
cd $( basename Regex Regex )
find Path -type d
sed -e Program
awk Program
xargs -I {} chgrp {}
pstree --show-parents -p Regex
head -n Quantity
sed Program
grep Regex
wc -l
find Path -type f -name Regex -exec rm -f {} \;
ln -f -s -T $( readlink File
sed Program ) Regex
gzip -c -d Regex
awk Program
ifconfig
grep Regex
cut -d Regex -f Number
awk Program
ifconfig
grep Regex
grep -v Regex
awk Program
sed Program
find Path -name Regex
find Path -type f -iname Regex -print0
xargs -0 -n Quantity -P Quantity -I {}
find Path -print
xargs -I {} grep Regex {}
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -print0
xargs -0 -I {} grep -n -H Regex {}
sort File
uniq
cut -f Number -d Regex
uniq -c
rev
bind -P
grep Regex
find Path -type f -name Regex -exec rm {} \; -print
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -type f -name Regex -exec sed -i Program {} +
jobs
wc -l
date --rfc-3339 seconds
date -d Regex +%s
mv -f File File
find Path -newer File
tree -i -f
grep Regex
xargs -n Quantity -I {} grep -H Regex {}
ls -l File
find Path -path Regex -prune -or \( -type f -print0 \)
find Path \( ! -path Regex \) -and -type f -and \( ! -name Regex \) -and \( ! -name Regex \)
xargs -I {} grep -n Regex {}
find Path -maxdepth Quantity -type f -exec rm -f {} \;
find Path -name Regex -exec cp {} File \;
find Path -perm Permission -print
basename Regex Regex
find Path -cmin -Quantity
cat File
rev
cut -d Regex -f Number
rev
find Path -mtime -Timespan -print
xargs -i -I {} rm File {}
find Path -iname Regex -type f -size -Size
find Path -wholename Regex -prune -or -type f -perm -Permission -exec ls -l {} \;
find Path -name Regex -prune -or -name Regex -type f -print
echo Regex
sed -e Program
find Path -name Regex -print Path -name Regex -print -depth
find Path -name Regex -and -not -name Regex -ctime +Timespan -exec bzip2 -z -v {} \;
awk Program Program
find Path -name Regex
xargs -I {} grep Regex {}
find Path -name Regex
cat File
sed Program
grep -v Regex
sh
find Path -name Regex
sort -n File
uniq -c
find Path -name Regex -prune -or -name Regex -prune -or -name Regex -print0
xargs -0 -I {} grep -I -R Regex {}
find Path -type f -exec rm {} \;
find Path -type f -newermt Regex ! -newermt Regex
find Path -mindepth Quantity -maxdepth Quantity -type d -execdir tar -z -c -p -v -f File {} \;
uname -r
cut -d Regex -f Number
find Path -type d -empty
ping Regex
xargs -L Quantity -I {} date '+%+: {}'
find Path -type f -name Regex -exec gzip {} \;
$( pwd -P )
set -o errexit
find Path
grep -v Regex
xargs -I {} rm -r -f {} {}
apropos Regex Regex Regex
grep Regex
find Path -type f
xargs -I {} rm {}
find Path -mmin -Quantity -mmin +Quantity -type d
find Path -name Regex -print0
xargs -I {} -0 mv -t Directory {}
pstree -p
grep Regex
find Path -path Regex -print Path
md5
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -type f -daystart -mtime +Timespan
find Path -name Regex -ok rm {} \;
find Path -name Regex
find Path -depth -name Regex -execdir rename Regex Regex {} \;
yes
mv File
find Path -depth -empty -type d
comm -2 -3 <( sort File ) <( grep -o Regex File
sort )
find Path -name Regex
history
tail - Quantity
awk Program
mv File File
find Path
xargs -I {} grep Regex {}
sed Program
find Path -type f -not -path Regex -not -path Regex
tree -P Regex
find Path -maxdepth Quantity -type d -print0
xargs -0 -I {} chmod -R Permission {}
find Path -name Regex
ifconfig Regex
grep -E -o Regex
find Path -xdev -type f
cut -d Regex -f Number
sort
uniq -c
sort -n
df --total
fold -w Quantity File
sort
uniq -c
sort -k Number -k Number
find Path -mtime -Timespan
xargs -0 -I {} cp File {}
ifconfig
grep Regex
awk Program
split -C Size -d File Regex
find Path -type 'd'
grep -v Regex
xargs -I {} rmdir {}
find Path -type f -exec chmod Permission {} +
find Path -name Regex
xargs -n Quantity -I {} cp File {}
rsync --recursive --exclude Regex File File
rm -f File File
find Path -mindepth Quantity -maxdepth Quantity -exec mv --target-directory Directory {} +
find Path
grep -v Regex
find Path -type f -exec ls -s {} \;
sort -n -r
head
find Path -name Regex -mtime Timespan -type f
find Path -type f \( -ctime Timespan -or -atime Timespan -or -mtime Timespan \) -printf "./%P\n"
find Path -name Regex -print
find Path -name Regex -ctime +Timespan -exec rm {} \;
find Path Path -f -ctime Timespan
find Path -user Regex
find Path -type f -iname Regex
cpio -p -v -d -m -u Regex
find Path -type f -printf '\n'
wc -l
find Path -type d -exec chmod Permission {} \;
find Path Path Path -name Regex -type f
find Path -type f -name Regex
find Path -maxdepth Quantity -type f
wc -l
find Path -not -name Regex -not -name Regex -type f
find Path -user Regex -group Regex -name Regex
find Path -type f -newermt Regex ! -newermt Regex -exec rm {} \;
ln -s -f File $( which Regex )
bzip2 -k -v File
find Path \( -name Regex -or -name Regex \) -atime +Timespan -exec rm {} \;
readlink -f $( which Regex )
cat File
sed Program
sed Program
wc -l
echo Regex
cat File File
tee File
awk -F Regex Program Program
echo Regex
grep -E -o Regex
head -n Quantity
find Path -type f -not -name Regex -mtime Timespan -exec gzip {} \;
find Path Path -lname Regex
chmod Permission File
find Path -name Regex -newer File
find Path -path Regex -name Regex
find Path -type d -name Regex -exec chmod Permission {} \;
chown -R Regex File
hostname
cut -b Number
head -c -Quantity File
dirname $( readlink -f File )
sleep Timespan
shopt -s lastpipe
grep -v Regex -R File
find Path -mtime -Timespan -type f -exec tar -r -v -f File {} \;
find Path -type d -name Regex -print
find Path -name Regex -print
find Path -type d -name Regex -exec find {} -type f \;
yes
head - Quantity
who
awk Program
sed -e Program
find Path -name Regex -mtime -Timespan -exec grep -H -c Regex {} \;
grep -v Regex
rev File
find Path -type f -name Regex
echo -e Regex
sed Program
cp -r -s File File
mount -l
grep Regex
find Path
find Path -name Regex -exec ls -l -r -t {} +
awk Program
find Path -name Regex -printf '%h\0'
xargs -0 -I {} find {} -mindepth Quantity -maxdepth Quantity -name Regex -printf '%h\n'
sort -u
find Path -perm Permission
find Path
cpio -p -m -u -d Regex
ssh -Y Regex
find Path -name Regex
sed -e Program -e Program -e Program
xargs -I {} cp File {}
find Path -iname Regex -execdir cp {} File \;
find Path -iname Regex -type d
find Path -name Regex -or -name Regex
xargs -I {} grep -s -l Regex {}
xargs -I {} sed -i -e Program {}
set
grep -A Quantity Regex
grep -m Quantity -B Quantity Regex
find Path -mtime -Timespan -print0
xargs -0 -I {} tar -c -j -f File {}
find Path -type d
awk -F Regex Program
sort -k Number -n -r
awk Program
sed Program
xargs -n Quantity -I {} mv {}
find Path -mtime -Timespan -print
find Path -type f -name Regex -exec sed -n Program File \;
find Path -size Size
find Path -type f -ctime -Timespan
find Path -type f -name Regex -execdir chown Regex {} \;
find Path -atime +Timespan -exec rm {} \;
paste <( cal DateTime DateTime ) <( cal DateTime DateTime ) <( cal DateTime DateTime )
find Path -type f -name Regex
xargs -t -i -I {} grep Regex {} {}
find Path \( -newer File -or -user Regex \) -print
paste -d Regex File <( rev File )
find Path -nogroup
find Path -atime +Timespan -print
read -p Regex Regex
sort File File -o File
df -k File
find Path -maxdepth Quantity -type f
sort
tail -n Quantity
xargs -I {} md5sum {}
find Path -cnewer File
find Path -regex Regex
find Path -name Regex -prune -or -name Regex -print
find Path -name Regex -type d -print -exec rm -r -f {} \;
find Path -name Regex -prune
cat File
wc -l
find Path -type f -iname Regex
chown Regex File
env
awk -F Regex Program
sort
uniq
find Path -name Regex -exec chmod Permission {} \;
find Path -name Regex -prune -or \( -type f -mtime Timespan -print0 \)
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -name Regex -print
xargs -I {} grep -l Regex {}
find Path
find Path -not -path Regex -type f -name Regex
find Path -type d -name Regex
find Path -name Regex
cd $( dirname $( which Regex ) )
which Regex
echo -e $( echo -n -e Regex
wc -m )
find Path -type f -name Regex -print0
find Path -type f -ls
sort File
head - Quantity
which Regex
set -o errexit -o nounset -o noclobber -o pipefail
cat File
who
grep -e Regex -e Regex
chown Regex File
find Path -name Regex -print -exec cat {} +
find Path -name Regex
mktemp --dry-run Regex
find Path -newer File -user Regex -print
find Path -iname Regex -mtime -Timespan -exec cat {} \;
dirname $( dirname $( which Regex ) )
find Path -maxdepth Quantity -name Regex -printf 'Name: %16f Size: %6s\n'
find Path -mtime +Timespan
find Path -type f -iname Regex -exec cp -r {} File \;
find Path -maxdepth Quantity -type d
sed Program
find Path ! \( -name Regex -prune \) -type f -mtime Timespan -print0
echo $( basename $( dirname Regex ) )
find Path -name Regex -exec grep -i -r Regex {} \;
find Path -name Regex -exec bzip2 -v {} \;
find Path -iname Regex -type d -exec mv {} File \;
find Path -type f
pwd mktemp -d
find Path -name Regex -exec rm {} \;
find Path -name Regex ! -exec sh -c find Path -name Regex \;
watch -n Quantity date
find Path
mv File File
diff File File -r -X File
mkdir -p Directory
find Path -name Regex -exec rm {} \;
find Path -depth -wholename Regex -prune -or -mtime -Timespan -print
find Path -type f -exec echo {} \;
shred -v -n File -z -u File
find Path -name Regex
ls -1
tr Regex Regex
find Path -mmin +Quantity
find Path -type f -perm Permission -print
xargs -I {} chmod Permission {}
find Path -group Regex -or -nogroup -print0
xargs -0 -I {} chown Regex {}
find Path -type f -exec grep -H Regex {} +
sort File
uniq -c
find Path -type f -size +Size
find Path -type f -newermt Regex
hostname -I
cut -f Number -d Regex
watch -d ls -l
find Path -group Regex
find Path -type f \( -iname Regex -or -iname Regex \)
find Path -name Regex
find Path -name Regex -prune -or -print
find Path -name Regex
find Path -nouser
xargs -0 -I {} rm {}
find Path Path ! -path Regex -and ! -name Regex
curl Regex
sh
ln -s File Regex
rsync -p -o -g -t -E -t -v -r --progress --bwlimit Bandwidth File File
kill - Regex $( ps -A -o stat,ppid
grep -e Regex
awk Program )
find Path -mount -type d -print0
xargs -0 -n Quantity
sort -n
find Path -maxdepth Quantity -type f -delete
find Path -type f -exec grep Regex {} \;
split --lines Quantity File Regex
find Path -type f -name Regex -exec grep -l Regex {} \;
find Path -type f -name Regex -exec wc -w {} \;
awk Program
find Path -type f -ls
awk Program
find Path -size -Size
dig -t A Regex
touch -a File
sort File File File
uniq -u
find Path -wholename Regex -prune -or -print
find -name Regex Path {} Path Path
mkdir Directory
kill $( cat File )
find Path -iname Regex
find Path -name Regex -exec rm -r -f {} \;
find Path -iname Regex -atime -Timespan -type -f
ls -m
tree Directory
find Path Path -name Regex -type d -print
find Path -name Regex -type f -exec grep -H -n Regex {} +
find Path -name Regex -type f -exec rm -f {} \;
find Path -type f -cmin -Quantity
find Path -maxdepth Quantity -type f
find Path -name Regex
scp File File
find Path -type f -newer File ! -newer File Path
xargs -I {} zcat {}
grep -E Regex -c
find Path -type d -mtime Timespan -exec mv {} File \;
find Path -mindepth Quantity -maxdepth Quantity -type d -print0
echo Regex
rev
cut -d Regex -f Number
rev
find Path -type f -perm Permission -exec ls -l {} \;
ls -d -- File
find Path -type f -exec chmod Permission {} \;
df --total -B Size
tail -n Quantity
find Path -iname Regex
grep Regex
find Path -mmin -Quantity -ls
find Path -name Regex
find Path -name Regex -type f
rev
cut -d Regex -f Number
rev
sort -u
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -type l -printf "%p$IFS"
find Path ! -type d -printf "%s\n"
awk Program
hostname -I
mount -t ntfs-3g Regex Regex
find Path -type f -name Regex
find Path -type d \( ! -name Regex \) -print
find Path -mtime +Timespan -name Regex -print
find Path -name Regex -exec echo {} \;
find Path -type d -mtime +Timespan -exec rm -f {} \;
find Path -name Regex
find Path -name Regex
xargs -r -I {} ls -t -c {}
head -n Quantity
ln -s File Regex
find Path -type d -print0
xargs -0 -I {} du {}
sort -n
tail - Quantity
cut -f Number
xargs -I {} du -s -h {}
find Path -type f
env -i Program Program
grep -o Regex File
tr Regex Regex
find Path -name Regex
tee File
xargs -I {} grep Regex {}
basename Regex
ping Regex
awk Program
find Path -type f -atime +Timespan -size Size
set -o pipefail
awk Program Program Program
rev
column -t
rev
echo Regex
rev
cut -d Regex -f Number
rev
tar -c -z -v -f File $( find Path -mtime -Timespan )
find Path -links Quantity -print
find Path -type f \( -perm -Permission -or -perm -Permission \) -exec ls -l {} \;
find Path -type f -perm Permission -print
w
head - Quantity
cut -d Regex -f Number
cut -d Regex -f Number
tr Regex Regex
find Path -mtime Timespan -name Regex -print
find Path -iname Regex -type f -print
xargs -I {} rm -f {}
wc -l File
ssh-keygen -f File -R Regex
find Path -type f -exec echo {} \;
wc -l
find Path -name Regex
xargs -n Quantity
find Path Path -type f -exec chown Regex {} \;
find Path -name Regex -mtime +Timespan -exec rm {} \;
find Path -name Regex
find Path -newer File
find Path -type f
grep -E Regex
du -s -h File
find Path -size Size -print
find Path -name Regex -exec grep -l -- Regex {} +
xargs -I {} grep -l Regex {}
ping -c Quantity -b Regex
grep Regex
awk Program
sort
uniq
find Path -name Regex -exec grep -i Regex {} +
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -name Regex -delete
find Path -type f -ctime -Timespan
tail -n Quantity
find Path -type f
sed Program
xargs -I {} grep Regex {}
find Path Path -type f -name Regex
mount -t cifs -o username=me,password=mine Regex Regex
echo Regex Regex
tr -d Regex
find Path -type f -mtime Timespan -exec ls -l -t -r {} \;
find Path -type f -exec ls -s {} \;
sort -n -r
head - Quantity
find Path -name Regex -type f
wc -l
find Path -type f -daystart -mtime Timespan
rsync -a File File
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -type f -printf "%d\t%p\n"
sort -n
sed -e Program
diff -q File File
cut -f Number -d Regex
date --date Regex
find Path -maxdepth Quantity -name Regex
find Path -type f -atime +Timespan
grep -F -f Regex File
sort
uniq -c
sort -n
cp --help
find Path -name Regex -printf "%h\n"
find Path -mtime +Timespan -exec rm {} \;
find Path ! -user Regex -print0
xargs -0
which Regex
ifconfig
grep -o -P Regex
ls -1
grep -v Regex
xargs -I {} mv {} File
find Path -perm Permission
head
find Path -name Regex
grep Regex
xargs -i -I {} cp -p {} File {}
grep -r Regex File
ssh-keygen -p -f File
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path -mount -depth -print
cpio -p -d -m Regex
find Path -perm Permission
cat File
column -t
find Path -perm -Permission -exec chmod Permission {} \;
find Path Path -iname Regex
echo $( ls ) $( cal )
find Path -perm Permission
find Path -iname Regex -exec rm {} \;
df -h File
find Path -name Regex -print0
xargs -I {} -0 cp -v {} File
find Path -lname Regex
ln -s -f File Regex
seq Number Number
sort -R
tee File
cat <( cat File ) <( echo Regex )
tac
ps -u $( whoami )
grep Regex
awk Program
find Path -size +Size Path
xargs -i -I {} rm File {}
find Path -name Regex -exec ls -l -d {} \;
find Path
xargs -I {} grep Regex -s -l {}
find Path -mindepth Quantity -maxdepth Quantity -type f -not -path Regex
wc -l
rsync -c -h -a -v -z -P --stats File File
find Path -type f
find Path -type f -name Regex -exec md5sum {} +
awk Program
sort
md5sum
diff <( ls File ) <( ls File )
find Path -path Regex -prune -or -type f -perm +Permission -ls
find Path -path Regex
ls -1 -t
head - Quantity
find Path $( pwd ) -group Regex -exec find {} -type l -print \;
echo $( readlink -f File ) Regex Regex Regex
read -d $( echo -e Regex ) Regex
find Path -inum Quantity
xargs -I {} rm {}
comm -1 -2 <( comm -1 -2 <( comm -1 -2 <( sort File ) <( sort File ) ) <( sort File ) ) <( sort File )
find Path -mmin +Quantity -mmin -Quantity
find Path -name Regex -print0
xargs -0 -I {} du -c -h {}
find Path
grep -E Regex
find Path -type d
find Path -iname Regex -type f
grep -v Regex File
grep -v Regex
more
yes Regex
head -n Quantity
tr -d Regex
ping Regex -n Regex
awk Program
find Path -name Regex -newer File
tac File
awk Program
find Path -name Regex -exec cat {} \;
find Path -type d
rsync -a --relative File File
find Path -name Regex -prune
mount -l
grep Regex
sed Program
grep Regex
find Path -name Regex -or -name Regex -or -print
crontab -l -u Regex
cat File File
crontab -u Regex File
find Path -type f -exec chmod Permission {} \;
find Path -printf .
wc -c
who
cut -d Regex -f Number
find Path -inum Quantity -exec rm {} \;
du -a --max-depth Quantity
sort -n
awk -F Regex Program $( dirname $( readlink -f $( which Regex ) ) )
touch File
ssh -O Regex Regex
find Path -type d -user Regex -exec chown Regex {} \;
find Path -newer File -and ! -newer File
find Path -name Regex
find Path -exec rm {} \;
find Path -size +Size -size -Size -print
find Path -name Regex
xargs -I {} rm -r -f {}
du -a File
sort -n -r
head
find Path -print -or -name Regex -prune
split -l Quantity File
find Path $( pwd ) -name Regex
xargs -i -I {} echo Regex {} {}
cd $( readlink File )
find Path -name Regex -type f -print0
xargs -0 -I {} wc -l {}
find Path -name Regex -exec cp {} File \;
find Path -type f -exec chmod Permission {} \;
find Path -type f -exec bzip2 {} +
find Path -maxdepth Quantity -type f -iname Regex
sort -n
find Path -name Regex -exec mv {} File \;
split -b Size File
find Path -iname Regex
find Path -type d -size +Size
find Path -name Regex
find Path -print
ls -1
awk -v Program Program
find Path -print0
grep --null Regex
xargs -0
df File
grep -q Regex
find Path -type f -exec grep Regex {} \;
yes Regex
bash
hostname Regex
tail -n +Quantity File
split -l Quantity File Regex
find Path -type f -name Regex -exec rm -f {} \;
diff -r -q File File
chown -R $( whoami ) File
find Path -depth -name Regex -execdir rename Regex {} \;
find Path -maxdepth Quantity -type f
wc -l
find Path -atime Timespan
find Path -mindepth Quantity -type f -mtime +Timespan
xargs -I {} rm {}
find Path -name Regex -exec rename -v Regex {} +
find Path -type f -size +Size -not -iname Regex
echo Regex
grep -o Regex
wc -w
echo -n -e $( whoami )
find Path -name Regex -type f -print
find Path -type f -name Regex
xargs -I {} tar -c -v -f File File {}
find Path -regextype posix-egrep -regex Regex -print0
xargs -0 -n Quantity -I {} ls {}
find Path -exec grep -i Regex {} \;
find Path -maxdepth Quantity -xdev -type f -exec grep -i Regex -l {} \; -exec sed -i Program {} \;
ls -h -a -l File
tee File
read -p Regex -n Quantity -r
find Path -name Regex -type f -print0
xargs -0 -n Quantity -I {} grep -H -n Regex {}
ssh -L Regex Regex
find Path -name Regex -type f -print
xargs -I {} rm -f {}
find Path \( -name Regex ! -path Regex ! -path Regex \) -exec grep -I -w Regex {} +
find Path Path -type f
find Path \( -path Regex -prune \)
find Path Path -f -mtime Timespan
find Path -mtime +Timespan -print0
xargs -0 -I {} rm {}
find Path -name Regex
find Path -type f ! -perm Permission
find Path -name Regex
xargs -I {} rm {}
find Path -size -Size
comm -1 -3 File File
who File Regex --ips
awk Program
find Path -type f -iname Regex
find Path -type f -exec chmod Permission {} \;
find Path -name Regex -type d
rename Regex
du -s --block-size Size File
find Path -name Regex
sort -n
find Path -type f -name Regex -exec rm -f {} \;
echo Regex
nl -b a -s Regex
find Path -type f -name Regex -ls -delete
find Path -type d \( ! -wholename Regex \)
echo $( pwd )
crontab
find Path -daystart -ctime Timespan -ls -type f
ln -s -f -v -n File Regex
find Path -size Size -print
basename -- Regex
find Path -name Regex
awk -F Regex Program
sort -t Regex -k Number
cut -d Regex -f Number
find Path -name Regex
find Path -name Regex -exec grep -l Regex {} \;
wc -l
readlink File
curl Regex -C -Quantity -b Regex Regex Regex
which -a Regex
find Path -iname Regex -exec awk Program {} \;
sort
find Path -name Regex -type f
find Path -size Size -exec rm {} \;
find Path -group Regex
find Path -mtime -Timespan
cd $( find Path -name Regex
xargs -I {} dirname {} )
find Path -type f -mtime -Timespan -print
find Path -print0
find Path -name Regex
xargs -I {} rm {}
find Path -maxdepth Quantity -type f -daystart -mtime -Timespan
find Path -mtime -Timespan -name Regex -print
find Path -newer File
find Path Path -size +Size -atime +Timespan -print
find Path -maxdepth Quantity ! -perm -Permission
find Path -type f -name Regex -print0
xargs -0 -n Quantity -I {} sed -i Program {}
rsync -a -v -R File File
mktemp
cat $( find Path -name Regex )
find Path -newer File
find Path -name Regex
find Path -group Regex -exec chgrp Regex {} +
find Path -iname Regex -exec rm {} \;
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -name Regex ! -name Regex -print0
find Path -type f -print
find Path -name Regex
sed Program
find Path $( pwd ) -mtime -Timespan -type f -print
cat File
xargs -r
mkdir Directory
find Path Path -size +Size -mtime Timespan -ls
readlink -f File
find Path -ls
echo -e Regex
tee -a File
cd $( dirname $( which Regex ) )
find Path -atime +Timespan
echo Regex
tee File
find Path -size +Size \( -mtime +Timespan -or -atime +Timespan \) -ls -exec file {} \;
find Path -name Regex -exec sed -i Program {} \;
find Path -mindepth Quantity -type d
xargs -I {} chmod Permission {}
find Path -maxdepth Quantity -name Regex
find Path -type f -exec chmod Permission {} \;
find Path
grep -E Regex
ls -d File
find Path Path -delete
find Path -type f -name Regex -exec grep -l Regex {} \;
find Path -type d -name Regex
find Path -maxdepth Quantity -mmin +Quantity -type f -name Regex ! -name Regex -delete
find Path -type f -ls
find Path -name Regex -printf '%h\0'
xargs -0 -I {} find {} -mindepth Quantity -maxdepth Quantity -name Regex -printf '%h\n'
sort -u
find Path -name Regex
find Path -newerct Regex -print
find Path -type f
wc -l
find Path -size -Size
cat File
tr -s Regex
cut -d Regex -f Number
find Path -type f -exec echo Regex Regex Regex {} +
read -e -p Regex Regex
find Path -type f -fprintf File "%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\n"
tr -s Regex
cut -d Regex -f Number
mkdir Directory Directory
find Path -name Regex -delete
find Path -iname Regex -exec cat {} \;
ifconfig
grep -E Regex
grep -v Regex
awk Program
cut -f Number -d Regex
ifconfig Regex
awk Program
find Path -name Regex
cpio -p -d -m Regex
echo Regex
tee -a File
find Path -name Regex
find Path -type f -printf "%C@ %p\n"
sort -r
head -n Quantity
cp --parents File File File
find Path -type d -name Regex -print
sed Program
xargs -I {} touch {}
find Path -type f -printf '%p %s\n'
find Path -type f -user Regex -perm -Permission -exec ls -l {} \;
find Path -maxdepth Quantity -type d
find Path -name Regex
xargs -I {} ls -l {}
find Path -type d
finger -l
grep Regex
tr -s Regex
cut -d Regex -f Number
sort
uniq
comm -2 -3 <( sort File ) <( sort File )
grep -f File Regex
find Path -atime Timespan
find Path -name Regex -size +Size
chgrp Regex File
find Path -name Regex
diff File File
grep Regex
find Path -empty
find Path Path -type f -ctime +Timespan
find Path -name Regex -exec sed -i -r Program {} \;
read -p Regex Regex
find Path -name Regex -not -path Regex
xargs -I {} wc -l {}
find Path -name Regex
xargs -I {} rm -f {}
find Path
find Path -name Regex -exec chmod Permission {} \;
tee File
find Path -name Regex -and -not -name Regex
find Path -ipath Regex
find Path -type f -not -regex Regex -exec  \;
find Path -name Regex
xargs -I {} grep Regex {}
echo -e Regex
xargs -I {} touch {}
find Path
du -h File
find Path ! -wholename Regex
find Path -name Regex -exec chmod Permission {} \; -exec cp {} File \;
find Path -name Regex -mtime -Timespan
wc
basename $( pwd )
find Path -perm Permission -print
xargs -I {} chmod Permission {}
find Path \( -name Regex -or -name Regex \) -print
cp -r $( ls -A
grep -v Regex ) File
find Path -cmin -Quantity
find Path -type f -mtime +Timespan -delete
split -n Quantity File
find Path -name Regex -or -type d -prune -or -name Regex -print
xargs -i -I {} mv {} File {}
find Path -type f -name Regex
grep -v -F -f Regex
find Path -not -name Regex -not -name Regex -not -name Regex
find Path -name Regex -print0
find Path -samefile Regex
w
awk Program
read -r -p Regex Regex
find Path -type f -ctime -Timespan
cat File
sed Program
od -c
find Path -type f -exec file {} \;
find Path -mindepth Quantity -maxdepth Quantity -print0
xargs -0 -I {} rm -r -f {}
crontab -u Regex -l
find Path -type f -name Regex -exec rm -f {} \;
find Path -name Regex -exec ls {} \;
find Path -name Regex ! -name Regex -type d -print
tac File
awk Program
tac
find Path -type f -name Regex -execdir rename Regex {} \;
find Path -exec chown Regex {} +
find Path -name Regex
cat File
sed -e Program
cat File
xargs
find Path ! -name Regex
grep -r -l Regex File
tr Regex Regex
xargs -r -0 -I {} file {}
grep -e Regex
grep -v -e Regex
find Path -name Regex -exec chmod Permission {} + -printf '.'
wc -c
find Path -xdev -name Regex
find Path -name Regex -maxdepth Quantity -print
seq Number Number
sort -R
head -n Quantity
find Path Path -name Regex -print
echo Regex
fold -w Quantity
wc -l $( find Path -type f -name Regex )
find Path -ctime -Timespan
echo -e Regex
ssh-keygen -t rsa
find Path -name Regex -type f -print
xargs -I {} file {}
grep Regex
cut -d Regex -f Number
history
awk Program
sort
uniq -c
sort -r -n
head
find Path -type f -print
find Path -empty
mount -l
grep Regex
sed Program
paste -s -d Regex
mount Regex -o remount,suid Regex
diff --brief -r File File
find
xargs -I {} ls {}
chown -R Regex File
uname -a
find Path -type f -mtime +Timespan -mtime -Timespan -exec rm {} \;
find Path -perm Permission
mv File File
ln -s -f File $( basename Regex )
echo -e $( echo -n -e Regex
wc -m )
find Path -maxdepth Quantity -type d
find Path -name Regex
find Path -maxdepth Quantity
find Path -atime +Timespan -exec rm -f {} \;
find Path -print0
xargs -0 -I {} ls {}
find Path -type f -print0
xargs -0 -I {} grep -l -E Regex {}
find Path -mtime -Timespan -mtime +Timespan
find Path -name Regex -size -Size
chgrp -R Regex File
find Path -iregex Regex
find Path -type d -name Regex
echo $( whoami )
cd $( dirname $( readlink -f File ) )
zcat Regex
sed -n -e Program
find Path -name Regex -print0
xargs -0 -n Quantity -I {} gzip -d {}
find Path -name Regex
ssh -x Regex
hostname
find Path -name Regex
xargs -I {} grep Regex {}
find Path -name Regex -type f
xargs -I {} cat {}
wc -l
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -size Size
cd $( dirname $( which Regex ) )
find Path -size Size -print
dig Regex Regex +noall +authority +comments
awk -f File
find Path -name Regex
find Path -type d -exec chmod Permission {} \;
echo Regex
tr Regex Regex
grep Regex -q
find Path -type f -print0
grep -E -i -a -z -Z Regex
grep -v -a -z -Z Regex
xargs -n Quantity -0 -I {} grep -c -H -i Regex {}
grep -E -v Regex
watch -n Quantity -t $( find Path -type f
grep -E -i Regex )
du -a -h --max-depth Quantity
sort -h -r
find Path -type f -name Regex -exec rm {} \;
find Path -type f -iname Regex
grep -i Regex
find Path -type f
paste -d Regex -s
find Path -name Regex
paste <( uniq -f Quantity File
cut -f Number ) <( tac File
uniq -f Quantity
tac
cut -f Number )
find Path -type d
find Path -type d -empty
rename Regex Regex
find Path -name Regex
chown Regex -R File
grep -r -l Regex File
find Path -maxdepth Quantity -type d -printf '%f\n'
uname -r
find Path -mmin -Quantity -exec ls -l {} \;
sed Program File
tee File
find Path -name Regex -print
xargs -I {} grep Regex {}
nl File
env Program $( cat File ) Program
find Path ! -path Regex -type f -name Regex ! -name Regex ! -name Regex
find Path \( -name Regex -prune -or -name Regex \) -print
find Path -type f -mtime Timespan
find Path -L
nl -s Regex File
cut -c Number
mv $( grep -l Regex
awk -F Regex Program ) File
find Path -name Regex -printf "mv '%h/%f' '%h/lib%f'\n"
bash
find Path -name Regex
sort -t Regex -n -k Number
find Path -type f -name Regex -size +Size
pstree -p Regex
find Path -name Regex
find Path -type d -name Regex -prune
env
grep Regex
find Path -mtime -Timespan
split -b Size -d File Regex --additional-suffix Regex
find Path -type f -newer File -not -newer File
cat $( find Path -name Regex )
cal
awk -v Program Program
gzip -d -c Regex
tar -x -v -v -f File
echo $( ls $( pwd ) )
find Path -iname Regex
xargs -I {} grep -i Regex {}
find Path -type f ! -perm Permission
find Path -maxdepth Quantity -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -iname Regex -type f -exec sed -i Program File {} +
find Path -path Regex -prune -or -name Regex -type f -print
find Path -name Regex -mtime +Timespan -print0
xargs -0 -I {} grep Regex {}
find Path -path Regex
find Path \( ! -name Regex -prune \) -name Regex -print
find Path -name Regex -print0
xargs -0 -I {} rm {}
sed -e Program -e Program -e Program -e Program
find Path -size +Size
find Path -name Regex -type f -print
bzip2 -k -v File
comm -2 -3 File File
find Path -type f -name Regex -printf "%p:%h\n"
find Path -print
wc -l
find Path -name Regex
xargs -I {} ls -l -r -t {}
awk Program Program
find Path -name Regex -print0 -or -name Regex -print0 -or -name Regex -print0
xargs -0 -I {} sed -i Program File {}
shopt -s expand_aliases
ps -e -f
grep Regex
dirname -- Regex
find Path -type f -print0
xargs -0 -I {} sed -i -e Program {}
find Path -type f -name Regex -exec chmod Permission {} \;
find Path \( -name Regex -prune \) -or -name Regex
find Path -inum Quantity -exec rm {} \;
find Path -name Regex -exec rm -r -f {} \;
shopt -s globstar nullglob
find Path -maxdepth Quantity -type f -name Regex -not -name Regex
find Path -maxdepth Quantity -type d -exec ls -d -l -r -t {} \;
wc --lines
find Path -type f -iname Regex ! -path Regex -or -iname Regex ! -path Regex
find Path -type f -print -exec grep --color auto --no-messages -n -H Regex {} \;
find Path -size +Size ! -name Regex
ls File File
echo Regex
tee -a File
find Path -mtime +Timespan
find Path -type f -name Regex -exec sed Program {} \;
cat
od -b
cd $( dirname $( which Regex ) )
dig Regex -x Regex
find Path -type f -exec grep -i -H Regex {} \;
shopt -s autocd
find Path -mindepth Quantity -name Regex
find Path -type f -printf "f %s %p\n"
awk Program
chown Regex File
diff <( echo Regex ) <( echo Regex )
find Path
grep -v Regex
grep -v Regex
vim File
find Path -type f -name Regex
xargs -I {} tar -c -v -f File {}
echo -n Regex
md5sum
find Path -nouser
find Path -size Size -atime +Timespan -exec rm -f {} \;
ping -c Quantity Regex
awk -F Regex Program
find Path -type d -exec basename {} \;
wc -l
find Path -type f -print
xargs -I {} grep -i -l Regex {}
find Path -type f
find Path -name Regex
find Path -mtime +Timespan
find Path -name Regex \( -exec echo {} \; -or -exec true \; \) -exec grep Regex {} \;
find Path -type d
find Path -name Regex
xargs -I {} rm {}
find Path -maxdepth Quantity -ctime +Timespan -name Regex
find Path -type f -and -name Regex
rsync -a -v -R File File
find Path -name Regex -execdir pwd \;
find Path -mmin -Quantity
find Path -name Regex
shred -u File
find Path -type d -empty -exec rmdir {} \;
find Path -name Regex -printf "%f\n"
find Path -perm Permission
split --lines Quantity File Regex
find Path -type d -empty
diff -q -r File File
sort
find Path -type l -xtype l
find Path -type f -perm Permission -print -exec chmod Permission {} \;
groups $( who
cut -d Regex -f Number )
find Path -type f -exec chmod Permission {} \;
echo Regex
tr -d Regex
find Path -type d -mtime Timespan
wc -l $( find Path -name Regex )
find Path -type d -mtime +Timespan
uniq
find Path -type d -exec chmod Permission {} \;
find Path -type f -prune \( -name Regex -or -name Regex -or -name Regex \) -print
bind -m Regex Regex
find Path -name Regex
mkdir Directory
cat File
wc -l
finger
cut -d Regex -f Number
sort -u
grep -i -v Regex
find Path -mindepth Quantity -type f
find Path -name Regex
find Path -type f -iname Regex
cut -d Regex -f Number File
split -l Quantity -d -a Quantity File Regex
ls -l -d File File
find Path -type d -exec chmod Permission {} +
dig Regex Regex localdomain.com
grep -i Regex
awk Program
find Path -not -iwholename Regex
shopt -u nocasematch
find Path -perm Permission
find Path -exec echo Regex {} \;
comm -2 -3 File File
find Path -name Regex
find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \;
find Path -size Size
find Path -name Regex -print0
xargs -0 -I {} rm {}
chown Regex File
find Path -name Regex -print
cpio -p -d -m Regex
diff -q File File
grep Regex
grep -E Regex
sed -n Program
find Path -name Regex
sed Program
column -t
find Path -user Regex
find Path -xdev -samefile Regex
xargs -I {} ls -l {}
w
head - Quantity
cut -d Regex -f Number
cut -d Regex -f Number
tr Regex Regex
find Path -type l -print0
find Path -iname Regex
split -l Quantity File Regex
find Path
find Path -name Regex
echo $( basename Regex )
find Path -name Regex
xargs -I {} grep -c Regex {}
cat File
tee -a File
find Path $( pwd ) -name Regex
xargs -l Quantity -I {} dirname {}
find Path -mmin -Quantity
readlink -m File
find Path -type d -exec chmod Permission {} \;
which Regex
cat File
find Path -mtime -Timespan -type f
find Path -mtime Timespan -print
find Path -type f -empty -delete
find Path -daystart -mtime -Timespan
find Path -mmin Quantity
xargs -I {} ls -l {}
find Path -name Regex -exec grep Regex {} +
wc -l
split -b Size -d File Regex
find Path -type f -mtime +Timespan
kill - Regex Regex
true
find Path -maxdepth Quantity -type f
xargs -I {} grep -F Regex {}
find Path $( pwd ) -name Regex -exec grep Regex {} \;
rename Regex Regex
find Path -maxdepth Quantity -name Regex -prune -or -exec rm -r -f {} \;
mkdir Directory Directory Directory Directory
xargs -I {} rm {}
echo $( cat File )
cd -L Directory
mv File File
rsync -a --progress --remove-source-files File File
find Path -mtime Timespan
find Path -type d -mtime Timespan -exec mv {} File \;
read -p Regex -s Regex
uname -n date +%F
find Path -type f -name Regex
find Path -type d -mtime -Timespan -exec mv -t Directory {} +
mkdir Directory Directory Directory
find Path -type d -ls
awk Program
sort -r -n
head
echo Regex $( dirname Regex )
find Path -inum Quantity -exec rm {} \;
find Path -type l
find Path -type f -exec echo Regex Regex {} \;
find Path -name Regex
find Path -name Regex -print
bunzip2 File
find Path -name Regex -exec grep -l Regex {} +
wc -l
find Path -name Regex -type f -print
xargs -I {} rm -f {}
find Path -name Regex -print0
xargs -0 -I {} cat {}
echo -n Regex
md5
find Path -type f -exec mv {} File \;
sed -i Program File
find Path -size +Size -size -Size -print
find Path -name Regex -type f -print0
xargs -0 -I {} grep -H -n Regex {}
find Path -type f -name Regex
awk -F Regex Program
sort -u
cp --remove-destination $( readlink File ) File
find Path -mindepth Quantity -type d -exec mv -t Directory {} +
mkdir Directory
find Path -iname Regex
find Path -type d -exec chmod Permission {} \;
find Path -name Regex
xargs -I {} grep -c Regex {}
find Path -type f -name Regex
find Path -type f -regex Regex
grep -o Regex <( comm File File )
find Path -name Regex
find Path -iregex Regex
find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \;
find Path -name Regex -print0
xargs -0 -I {} cp -t Directory {}
mkdir -p Directory
find Path -name Regex -type d
find {} -name Regex \( -type f -or -type l \) -maxdepth Quantity -perm +Permission
groups Regex
cut -d Regex -f Number
seq -s Regex Number
tr -d Regex
find Path -mtime -Timespan -type f -print
mount Regex
find -L Path
find Path -size +Size -exec ls -l -s {} +
sort -n -r
shopt "$NGV" nullglob
cat -n File
tail -n Quantity
cut -f Number
xargs
find Path -name Regex
xargs -I {} grep -v -c Regex {}
awk Program
find Path -type c -name Regex -print
find Path -type f -empty
find Path -mmin -Quantity \( ! -regex Regex \)
find Path -size Size
find Path -name Regex
find Path -name Regex
cat File
xargs -I {} echo Regex Regex Regex {}
find Path -type f -name Regex -exec gzip -k {} \;
find Path -iname Regex -print0
xargs -0 -I {} rm {}
find Path
grep -E Regex
find Path -nouser
find Path -size +Size -and -size -Size
find Path -user Regex -maxdepth Quantity -type d -mtime +Timespan -exec basename {} \;
xargs -I {} kill - Regex {}
find Path -name Regex -print -exec awk Program {} \;
pstree -a Regex
set -x
find Path -mtime -Timespan -type f
find Path -type f -printf "f %s %p\n"
mv -t Directory File File File
find Path -name Regex -exec sed -i Program \;
scp -i File -r File File
find Path -type l
find Path -type f -print0
pwd
tr Regex Regex
find Path -print0
date +"%T"
echo Regex Regex $( dirname Regex )
date -u -d Regex +"%s"
find Path -perm Permission
find Path -path Regex -prune -or -name Regex -print
read -p $( echo -e Regex ) Regex
find Path -iname Regex -type f
read -p $( echo -e Regex ) Regex
echo $( date ) Regex Regex
jobs -p
xargs -I {} kill - Regex {}
find Path -size +Size -print0
xargs -0 -I {} ls -l -S -h {}
find Path -type f -mtime Timespan
find Path -maxdepth Quantity -empty -exec echo Regex \;
find Path -type f -iregex Regex ! -name Regex -print0
find Path -type f -printf "%s\t%p\n"
sort -n
tail - Quantity
seq Number
paste -s -d Regex File
diff -r File File
find Path -print
find Path -name Regex
find Path -print
grep Regex
find Path -name Regex
xargs -I {} grep -o -m Quantity -h Regex {}
sort
uniq -c
find Path -type f
xargs -I {} grep Regex {}
find Path -type d -iname Regex
$( md5sum File
cut -b -Number )
find Path -type f -print0
find Path -type d -mindepth Quantity -print -exec chmod Permission File \;
mkdir Directory
find Path -type d -exec chmod Permission {} \;
find Path -size -Size -print
df -P File
tail - Quantity
cut -d Regex -f Number
mktemp -d -p Directory
find Path -mmin -Quantity
find Path -iname Regex
more
find Path -type f -name Regex -newermt Regex ! -newermt Regex
xargs -I {} tar -c -z -v -f File {}
find Path -mmin -Quantity -type f -exec ls -l {} +
find Path -name Regex -print0
xargs -0 -I {} ls {}
w
sort
false
echo Regex
yes Regex
nl -b a
sed -n -e Program -e Program
find Path -name Regex
find -P Path -lname Regex
find Path -mtime +Timespan
cat File
xargs -n Quantity -I {} -P Quantity ping {}
find Path -type f -exec grep Regex {} \; -print
find Path -type f -iname Regex
find Path -name Regex
xargs
find Path -type d -empty
find Path -name Regex -prune -or -type f -print
find Path -type f -atime Timespan
find Path -name Regex
xargs -I {} grep -L Regex {}
tar File File
split -b Size File Regex
find Path -name Regex -execdir grep -H Regex {} \;
wc -l
find Path -type f ! -perm -Permission
tar -c -z -f File File File
find Path -name Regex -prune
nl
sort -R
cut -f Number
head - Quantity
cat File File File
sort
comm -2 -3 File File
find -L Path -type l -exec rm -- {} +
find Path -type f -printf "%s\t%p\n"
sort -n
head - Quantity
find Path -name Regex -exec rm {} \;
echo -n Regex
od -A n -t x1
find Path -type f -mmin -Quantity
sort File
uniq -c
find Path -path Regex -prune -or -size +Size -print
find Path -name Regex -print0
xargs -0
find Path -size +Size -mtime +Timespan -exec ls -l {} \;
history -a
find Path -user Regex -type f -name Regex ! -name Regex
find Path ! -newer File -print
find Path -amin -Quantity -type f
find Path -type d -iname Regex
find Path -name Regex -type f
xargs -I {} ls -l -t -r {}
tail - Quantity
find Path -type f -name Regex -exec grep --with-filename -c Regex {} \;
grep Regex
find Path -group Regex -iname Regex
find Path -newer File
who -m
awk Program
find Path
xargs -I {} grep Regex {}
gunzip Regex
groups $( who
cut -d Regex -f Number )
find Path -name Regex -exec grep -m Quantity -i Regex {} \;
find Path -type d
find Path -print
find Path -name Regex -exec awk Program {} \;
mv $( basename Regex ) $( dirname Regex )
find Path -type f -name Regex -exec wc -l {} \;
awk Program
ssh Regex command
find Path -type f -exec chmod Permission {} \;
mkdir -m 777 Directory
split -n Quantity File
find Path -iname Regex -exec cp {} File \;
find Path -name Regex
find Path -type f
grep -v -P Regex
history -s Quantity
cat File
sed Program
jobs -l -p
find Path -name Regex -type f -print
find Path -mtime +Timespan -exec rm {} +
find Path -name Regex -print
find Path -iname Regex
find Path -name Regex -printf "%T@ %p\n"
sort
tail - Quantity
find Path -mtime +Timespan -exec rm -f {} \;
mkdir Directory
mkdir -v Directory
sed Program
cat File
find Path -prune -empty
find Path \( ! -user Regex -exec chown -- Regex {} + -false \)
find Path -type f -perm Permission -print -exec chmod Permission {} \;
mktemp $( pwd )
find Path -type d -name Regex -exec echo {} \; -exec rm -r -f {} \;
find Path -type d -name Regex -prune -or -type f -print
find Path -name Regex -exec ls -l -d {} \;
find Path -iname Regex
sort
uniq -u
xargs -r -I {} rm {}
echo Regex
rev
find Path -type f
xargs -I {} chmod -v Permission {}
find Path -type f -printf '"%p"\n'
xargs -I {} grep Regex {}
find Path -okdir diff {} File \;
mkdir Directory
find Path \( ! -path Regex -and ! -path Regex -and ! -path Regex -print \)
diff -r -q File File
grep -E Regex
sed -n Program
awk Program Program Program {} Program Program {}
find Path -type f -name Regex -exec rm -f {} \;
column -t -s Regex File
find Path -name Regex -exec grep Regex {} +
wc -l
find Path -type f -print
sed Program
ssh -S Path -O Regex Regex
find Path -name Regex
find Path -iname Regex
find Path -mmin +Quantity -mmin -Quantity
find Path -ls
find Path -type d -empty -delete
find Path -exec file {} \;
find Path -type f
grep -E Regex
grep Regex File
sort -u
wc -l
nl -n ln File
sed Program
gzip -l Regex
find Path -prune -empty
find Path -name Regex -print0
xargs -0 -I {} mv {} File
who
awk Program
sort -u
awk Program
grep -o -f Regex File
sort
uniq -c
find Path -group Regex -print
xargs -I {} chgrp Regex {}
find Path -mtime +Timespan -print
find Path -type f
find Path -name Regex -print
echo Regex
read Regex
find Path -mmin -Quantity -name Regex
cd $( which Regex
xargs -I {} dirname {} )
find Path -name Regex -exec rename Regex Regex {} \;
rsync -r -v -v File File
find Path ! -name Regex -print
find Path -name Regex -mtime +Timespan -print
find Path -name Regex -type f -print
xargs -I {} rm {}
find Path \( -name Regex -or -name Regex \) -print
env
grep Regex
ls
xargs -I {} mv {} File
find Path -type f -name Regex -mtime -Timespan
xargs -r -I {} ls -l {}
find Path -newer File
cat $( which Regex )
file File
find Path -name Regex -exec du -h -c {} \;
cd $( dirname Regex )
find Path $( pwd ) -name Regex
xargs -l Quantity -I {} dirname {}
echo Regex
grep -E -o Regex
cut -d Regex -f Number
find Path Path
find Path -name Regex -maxdepth Quantity
scp -r File File
find Path -type f -name Regex -exec rm -f {} \;
find Path -name Regex
find Path -mindepth Quantity -prune -empty
ifconfig Regex
grep Regex
awk Program
awk -F Regex Program
find Path -mtime +Timespan -and -mtime -Timespan -print0
find Path -name Regex -print0
xargs -r -0 -I {} grep -l Regex {}
sed Program File
split -C Size File
find Path -type f -size +Size -print -name Regex -exec rm {} \;
find Path -type f -print
find Path -maxdepth Quantity -xdev -type f -exec grep -l -i Regex {} \;
mkdir -p Directory
cat File
grep $( which Regex )
crontab -l
find Path ! -type d
xargs -I {} wc -c {}
find Path -name Regex
find Path -type d
paste -d Regex -s
find Path -type f -exec echo {} \;
find -d Path -name Regex -type d -exec rm -r -f {} \;
find Path -type f -size +Size -exec ls -a -l {} \;
chmod -R Permission File
find Path -mtime Timespan -not \( -name Regex -or -path Regex -or -path Regex \)
find Path -type f
sort
find Path -size Size -print
find Path -cmin Quantity -print
find Path -print0
xargs -0 -I {} touch {}
finger
awk -F Regex -v Program Program
sed Program
find Path -perm Permission
find Path -type d ! -perm -Permission
find Path -type f -path Regex
find Path -name Regex -exec chmod Permission {} \; -exec echo + Path
find Path -type d -name Regex -print
ping -c Quantity -q Regex
find Path -maxdepth Quantity -type f -printf '%f\000'
find Path -regex Regex
find Path -type d
od -t x2 File
ls -m -R File
sed -n Program
find Path --help
find -L Path
$( date --date Regex +"%d" )
find Path -newer File
find -P Path -maxdepth Quantity -type l -exec echo -n Regex \; -exec readlink {} \;
ls -l -r -t
tail -n Quantity
find Path
grep -v Regex
find Path -name Regex
find Path -maxdepth Quantity -mmin +Quantity -type f -name Regex -delete
sort File File
uniq -u
find Path -name Regex -exec ls -l {} \;
find Path -name Regex -print
find Path -path Regex
find Path -type l
xargs -I {} ls -l {}
grep Regex
find Path -type d -iname Regex
find Path -type f -user Regex -iname Regex
find Path -cmin Quantity -print
ifconfig Regex
awk Program
yes
awk Program
more
ln -s File Regex
find Path -type f -mtime +Timespan -delete
find Path -type d -exec rmdir --ignore-fail-on-non-empty {} +
echo Regex
grep -v -E Regex
find Path -regex Regex
chown -R Regex File
rsync -r File File
pstree
grep Regex
ssh-keygen -l -f File
find Path -name Regex
rsync --sparse File File
find Path -perm -Permission -print0
xargs -I {} chmod Permission {}
find Path -perm -Permission
$( md5sum File
cut -d Regex -f Number )
find Path -mmin -Quantity -type f -ls
find Path -print
find Path -type d -maxdepth Quantity
find Path Path \( -path Regex -or -path Regex \) -prune -or -print
sort
sort File
uniq
sort -o File
find Path -newermt Regex -not -newermt Regex
xargs -I {} gunzip -c {}
grep Regex
find Path -not -user Regex
find Path -type f -printf '%T+ %p\n'
sort
head -n Quantity
find Path -type f -name Regex -size +Size -exec rm {} \;
find Path -atime +Timespan
basename $( pwd )
find Path -type f \( -name Regex -or -name Regex \)
find Path -regex Regex ! -regex Regex -type d -links Quantity
source File
dig Regex Regex soa yahoo.com
awk Program
find Path -iname Regex -type f -print0
xargs -0 -I {} grep -H Regex {}
mkdir Directory
tree -L Number -f -i
find Path -name Regex -prune -or -name Regex -print
find Path -name Regex -exec rm -f {} \;
find Path -regex Regex
set -e -u
find Path -mtime -Timespan -daystart
rsync -a -v --exclude Regex --exclude Regex File File
diff -y File File
w -h
cut -d Regex -f Number
sort
uniq
comm -2 -3 <( sort File ) <( sort File )
find Path -path Regex -name Regex
find Path -name Regex -exec chmod Permission {} \;
find Path -name Regex -exec grep Regex {} +
wc -l
cal -h
cut -c Number
tail -n +Quantity
find Path -name Regex -type f -print0
xargs -0 -I {} rm -f {}
find Path -type f -iregex Regex
find Path -mtime +Timespan -name Regex
find Path -name Regex \( -exec chgrp -v Regex {} \; -or -exec chmod -v Permission {} \; \)
find Path -path Regex
echo Regex
rev
cut -f Number -d Regex
rev
zless Regex
zcat Regex
awk -F Regex Program
find Path -name Regex -or -name Regex
find Path -type f
date -u '+%Y-%m-%dT%k:%M:%S%z'
find Path -name Regex
groups Regex Regex Regex Regex
find Path -type f -exec md5sum File \;
$( which Regex )
mkdir Directory
find Path -newermt Regex
find Path -perm Permission
find Path -type f -name Regex -exec rm {} \;
find Path -name Regex -print0
xargs -0 -I {} grep Regex {}
find Path -type f -exec file {} +
pstree -s -p Regex
mktemp Regex
ping -b Regex
find Path -name Regex
ssh -D Regex Regex -g
find Path -type f -iname Regex -print
find Path -type d
sed Program
xargs -I {} mkdir {}
find Path -type f -name Regex
find Path -atime -Timespan
find Path -execdir echo {} \;
find Path -nouser -exec rm {} \;
find Path -type f -name Regex ! -name Regex
find Path -type f -printf "%s %p\n"
sort -n -r
head -n Quantity
cut -d Regex -f Number
find Path -printf "%y %p\n"
grep -o Regex <( paste -s -d Regex File )
tr -d Regex
ifconfig Regex
grep -E -o Regex
find Path -name Regex -print0
xargs -0 -I {} rm {}
echo Regex
xargs -I {} dirname {}
xargs -I {} basename {}
find Path -name Regex
ls -l -d -t $( find Path )
find Path -mtime -Timespan -name Regex -print
find Path -name Regex -type d -delete
find Path -print0
xargs -0
find Path -maxdepth Quantity -type f -not -path Regex
wc -l
cat File
cut -d Regex -f Number
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
find Path -type f -name Regex -exec grep -i -l Regex {} \;
paste -d Regex File File
sed Program
echo Regex
paste -s -d Regex File
find Path -lname Regex
dig Regex Regex ns
cp -R -p File File
find Path -name Regex -print
find Path -type f -mtime -Timespan
shopt -s nullglob
find Path -mtime -Timespan
shopt -s execfail
find Path
xargs -I {} echo {}
find Path -type f -name Regex
find Path -name Regex -exec ls {} \;
cal DateTime DateTime
sed -n Program
find Path -iname Regex -follow
find Path -type f -exec cat {} \; -print
find Path -name Regex -type f
nl -b a File
find Path -name Regex
sed Program
xargs -I {} cp File {}
find Path -size Size
find Path -type f -name Regex
sed Program
awk -F Regex Program
awk -f File Program
column -t
find Path -name Regex
xargs -i -I {} rm -r -f {} {}
find Path -type d -iname Regex -depth -exec rename Regex {} +
top -p Regex -p Regex -p Regex
grep -E -R Regex File
find Path -type f -mtime +Timespan
find Path -type f -exec ls -l File \;
find Path -name Regex -execdir pwd \;
diff -q -r File File
find Path -name Regex -print
find Path -type f -wholename Regex
sed Program
sh
find Path -type f -user Regex -perm -Permission -exec ls -l {} \;
df File
read -d Regex Regex
find Path -type l -xtype l
more File
echo Regex
cut -d Regex -f Number
ln -s File Regex
find Path -name Regex
sed Program
xargs -I {} cp File {}
find Path -empty
find Path -type f -exec du -S -h {} +
sort -r -h
head -n Quantity
echo $( basename $( pwd ) )
mount
tail - Quantity
sed -e Program
ls
sed Program
tr -d Regex
find Path -newer File -and -not -newer File
find Path -print0
xargs -0
find Path -iname Regex
echo Regex $( whoami )
find Path -type f -name Regex
find Path -user Regex -perm -Permission
find Path \( -name Regex -or -name Regex \) -type f -ls
mkdir -p -v Directory
find Path -perm -Permission -print
xargs -I {} chmod Permission {}
find Path ! -perm -Permission -prune
find Path -type f ! -name Regex -exec gzip {} \;
cal -3 DateTime DateTime
yes Regex
head - Quantity
nl
sort -R
cut -f Number
head - Quantity
$( hostname )
find Path -type f \( -iname Regex -or -iname Regex \)
find Path -name Regex
find Path -name Regex -print
dirname $( readlink -e File )
find Path -type f -name Regex -print0
xargs -I {} -0 grep Regex {}
find Path -mtime +Timespan -delete
find Path -name Regex
md5 File File
find Path ! -type d
xargs -I {} wc -c {}
tail - Quantity
comm -1 -3 File File
df -h File
cut -f Number -d Regex
tail - Quantity
find Path -name Regex
mkdir Directory
find Path -type l
find Path -iname Regex -exec md5sum {} \;
find Path -size Size
file $( which Regex )
find Path -type f
xargs -I {} file {}
find Path -type f -name Regex -exec grep -s Regex {} \; -print
sort File <( zcat Regex
sort ) <( zcat Regex
sort )
find Path -type f -name Regex
find Path -mmin -Quantity
diff -U Quantity File File
grep Regex
wc -l
find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -exec sed -i Program {} \;
split --lines Quantity --suffix-length Quantity File Regex
find Path -amin -Quantity
which Regex
xargs -I {} file {}
$( dirname $( readlink -e File ) )
find Path -mindepth Quantity -type f -exec mv {} File \;
cal
sort -n -k Number
find Path -type d -name Regex
find Path -type f
xargs -I {} grep Regex {}
find Path -type f -perm Permission
comm -1 -2 <( find Path -maxdepth Quantity ) <( find Path )
find Path -type f -name Regex -exec cp {} File \;
fg Regex
find Path -name Regex -print0
xargs -0 -n Quantity -I {} dirname {}
sort --unique
find Path -type f -mtime +Timespan
tee File
xargs -I {} compress {}
source $( dirname $( which Regex ) )
find Path -type d -exec chmod Permission {} +
sed Program File
split -C Size File
find Path -regex Regex
history
awk Program
awk Program
sort
uniq -c
sort -n -r
head
find Path -name Regex
find Path -mmin -Quantity
od -x -c -b File
chmod -R +Permission File
du -a --max-depth Quantity
sort -n
find Path -type f -mtime +Timespan -printf "%T@ %p\n"
sort
cat File
sort -r -h
find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -print
crontab -e -u Regex
echo Regex
sed Program
find Path -name Regex -or -name Regex
find Path -iregex Regex
gzip -d Regex
find Path -type f -not -name Regex
mount Regex Regex -t ext4
find Path -perm -Permission -print
find Path -name Regex -delete
ls
read Regex
find Path
yes
nl -b a
tr Regex Regex
sed Program
cut -b Number
uname -m
echo -n Regex
md5sum File
awk Program
sort -k Number -k Number -t Regex --stable --unique File
find Path -size +Size -exec rm -r -f {} \;
find Path -iname Regex -exec md5sum {} \;
rsync -a --rsync-path Program File File
find Path -name Regex
find Path -type d
find Path -type d -name Regex
find Path -name Regex
chown -R Regex File
find Path -type d -iregex Regex
find Path -type l
find Path -name Regex ! -wholename Regex -print
echo -n Regex
md5sum
mktemp -d --tmpdir Directory -t Regex
find Path -type f
sort -u
xargs -I {} cat {}
md5sum
more <( ls File )
echo $( ls -l $( which Regex ) )
find Path -name Regex
wc -l File
find Path -name Regex
split -l Quantity File
cal -h
find Path -ctime -Timespan -name Regex -print0
xargs -r -0 -I {} mv -t Directory {}
gzip -d --stdout Regex
bash -s -- File
find Path -mmin -Quantity
find Path -type d -name Regex -prune -print0
xargs -0 -I {} chmod Permission {}
find Path -iname Regex -printf "unzip -c %p
grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\n"
sh
mkdir -p -- $( dirname -- Regex )
split -a Quantity -d -l Quantity File Regex
find Path -type f -not -name Regex -print
xargs -I {} sed -i Program {}
find Path -print
grep -v Regex
find Path -type f
grep -E Regex
comm File File
find Path \( ! -name Regex -and ! -name Regex \)
xargs -I {} cp -p {} File
find Path -type f
od
cut -b Number
xargs -n Quantity
sort
uniq
wc -l
find Path -type f -name Regex
xargs -I {} rm -f {}
find Path -type f -exec chmod Permission {} \;
find Path -type f -iname Regex -printf "%h\n"
find Path -name Regex -type d -exec rm -r -f {} \;
find Path -regex Regex
find Path Path Path Path Path Path -type f
xargs -I {} chmod -Permission {}
echo -e Regex
sed Program
cut -f Number
find Path -size +Size -exec ls -l -h {} \;
ln -s $( readlink -e File ) Regex
find Path -daystart -type f -mtime Timespan
tar -c -z -v -f File -C Directory File
find Path -type f -exec grep -n Regex {} \; -print
wc -l
find Path -type f -perm Permission
find Path -type f \( -name Regex -or -name Regex \)
find Path -name Regex -type f -print
find Path -name Regex -exec du -h {} \;
curl Regex Regex
gunzip Regex
less
find Path -iname Regex
xargs -I {} tar -c -v -f File {}
find Path -type f -name Regex
find Path -print
xargs -I {} chown Regex {}
find Path -print
find Path -type f -perm Permission
find Path -type f -name Regex -exec rm -f {} \;
ssh -o ConnectTimeout=3 Regex
find Path -name Regex -print
find Path \( -iname Regex -or -iname Regex \) -print -exec tar -r -f File {} \;
grep Regex $( find Path -type f -name Regex )
find Path -type f
xargs -I {} ls -l {}
cal -h
cut -c Number
find Path -path Regex -prune -or -print
find Path -type f -exec ln -s {} \;
find Path -name Regex -print
xargs -I {} rm {}
find Path -atime Timespan
find Path -type d
xargs -I {} mkdir Directory
find Path -name Regex
find Path -mmin Quantity
find Path -type f -mtime +Timespan
find Path -type f -print
xargs -I {} grep -l -i Regex {}
find Path -size +Size -exec ls -l -s {} +
sort -n
tail - Quantity
find Path -mount -name Regex
find Path -mtime -Timespan
find Path \( -name Regex -or -name Regex \)
cp $( ls -1 -t -r File
tail - Quantity ) File
find Path -iname Regex -type d
cat File
od -c
find Path -maxdepth Quantity -name Regex -maxdepth Quantity
xargs -I {} rm {}
find Path -exec echo {} \;
find Path -type d -user Regex -exec chown Regex {} \;
cat File
awk Program
rev File
cut -d Regex -f Number
rev
find Path -type f -perm Permission
cat File
paste -d Regex File File
find Path -mmin -Quantity -type f -exec ls -l {} \;
split --lines Quantity --suffix-length Quantity File Regex
find Path -name Regex -print
find Path -newer File
find Path -type f
xargs -I {} ls -l -S {}
head - Quantity
uniq -c
sort -n
tail -n Quantity
du -a File
awk Program
grep Regex
find Path -mindepth Quantity -maxdepth Quantity -type d -printf "%P\n"
find Path -perm -Permission -print
find Path -type f -exec echo {} Regex \; -or -exec echo {} + Path
find Path -mtime +Timespan
find Path -mtime +Timespan
nl -n rz -w Quantity File
md5 File File
echo Regex
tr -d Regex
tr -d Regex
head -c Quantity File
find Path -iname Regex -exec rm {} \;
find Path -fstype ext2 -name Regex -print
find Path -type f -exec cat {} \;
find Path -cmin -Quantity -printf "%c %pn"
find Path -size Size
cat File
fold
read -e
shopt -u extglob
tail -n +Quantity File
head -n Quantity
find Path -type f
xargs -I {} grep -l Regex {}
find Path -name Regex
xargs -I {} cp -a --target-directory Directory --parents {}
env
uniq
sort -r
grep Regex
find Path -type f -name Regex -exec rm -r -f {} \;
find Path -type f -exec sed Program -i Regex {} \; -exec rm File \;
source <( date +"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'" )
find Path -type f -mtime -Timespan -print -exec cat {} \;
tar -c -f File
gzip -9
find Path -iname Regex -type d
xargs -I {} rm -r -f {}
md5sum File
cut -d Regex -f Number
sort -u
cat File File
find Path -name Regex -exec rm -r -f {} +
ln -s File
find Path -iname Regex -mtime -Timespan -print
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path -mtime -Timespan
find Path -type d -exec chmod Permission {} +
od -c -v -A none -w Size
sort -b -u
echo -n $( pwd )
seq -f 'some line %g' Number
nl
sort -R
cut -f Number
head - Quantity
ln -f File Regex
find Path -iname Regex
find Path Path -name Regex -type f -exec chmod Permission {} \;
mount
awk Program
echo Regex
tee >( tr Regex Regex )
tr Regex Regex
gunzip -c Regex
grep Regex
find Path
cpio -p -d -u -m -v Regex
find Path -perm Permission
find Path -maxdepth Quantity -empty -exec echo {} Regex Regex \;
echo Regex
tr Regex Regex
grep -m Quantity Regex
find Path -name Regex -print
find Path -name Regex -or -size +Size
$( whoami )
find Path -mtime Timespan
find Path ! -name Regex Path
find Path -type d -depth -exec rmdir -p {} +
find Path -path Regex -prune -or -name Regex -print
find Path -name Regex
set
awk -F Regex Program
grep Regex
find Path -mtime -Timespan -or Path Path
find Path -name Regex -exec sed -i Program File \;
find Path -type f -mtime Timespan
find Path -mindepth Quantity -maxdepth Quantity -type d -ls
mv File File -b
find Path -cmin -Quantity
sort File -o File
find Path -type f ! -perm -Permission
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
read -r -d Regex Regex
ls -1 -t -r File
tail - Quantity
cat File
wc -l
find Path -atime +Timespan -print
find Path -mtime Timespan -name Regex -print
find Path
awk Program
sort -n
awk Program
xargs -I {} grep -d skip Regex {}
find Path
cal DateTime DateTime
awk Program
env
sed -n Program
echo Regex Regex
od -t x1 -t c
sed -i Program File
find Path
awk Program
read -r -e -p Regex Regex
find Path -name Regex -print0
xargs -0 -I {} rm -r -d -f {}
find Path -not -iwholename Regex -exec chown Regex {} \;
find Path
xargs -I {} grep -P -L Regex {}
xargs -I {} grep -P -l Regex {}
history
tail - Quantity
find Path -type f -size +Size
echo Regex
cpio -p --owner Regex Regex
echo Regex
tr Regex Regex
xargs -I {} find {} -maxdepth Quantity -type f -perm Permission
find Path -size +Size -print
ln -s -f -n File Regex
find Path -mindepth Quantity
sort
find Path -type f -name Regex -execdir chown Regex {} \;
find Path -name Regex -print0
xargs -0 -I {} wc -l {}
find Path -name Regex -type f -print
xargs -I {} rm -f {}
scp -v -p File
find Path -iname Regex
find Path -type f -printf "%s %p\n"
sort -n -r
head -n Quantity
awk Program
which Regex
join <( sort File ) <( sort File )
find Path -type f -exec du -S -h {} +
sort -r -h
head -n Quantity
find Path -print
grep Regex
find Path -perm Permission
find Path -name Regex -exec wc -l {} \;
awk Program
find Path -name Regex -printf "%p\0" -printf "newdir/%P\0"
xargs -0 -L Quantity -I {} cp -n {}
find Path -cmin -Quantity
less -R
find Path -type d -exec chmod Permission {} \;
chown -- Regex File
rsync -a -P --include Regex --include Regex --exclude Regex File File
echo $( date -v-1d +%F )
find Path -links +Quantity -print
bind Regex
find Path -type f -exec grep -l -i Regex {} \;
find Path -name Regex
find Path -name Regex
xargs -I {} grep -E Regex {}
basename Regex
du --max-depth Quantity File
cp $( ls
grep -v Regex ) File
find Path -perm Permission
cp File File
find Path -name Regex -print0
xargs -0 -n Quantity -I {} echo {}
grep Regex File
cut -d Regex -f Number
sort
comm -2 -3 File <( sort File )
find Path -name Regex -execdir touch File \;
find Path -name Regex -print0
xargs -r -0 -I {} grep -l Regex {}
find Path -type f -mtime +Timespan
xargs -I {} ls -l {}
$( chown -R Regex File )
find Path -type f -name Regex
xargs -I {} du -c -s -h {}
find Path -atime +Timespan
chgrp Regex File
apropos Regex
mount -o remount,ro Regex
find Path -print
xargs -d Regex
find Path -type f -exec grep -l Regex {} +
find Path -path Regex -prune -or -path Regex -prune -or -path Regex -prune -or -iname Regex -print
find Path -name Regex
find Path -not -name Regex -not -name Regex -not -type d
grep Regex File
grep -o Regex
tr Regex Regex
find Path -mindepth Quantity -type d
ln -s File Regex
ssh-keygen -b Quantity -t rsa -f File -C Regex
fold File File
awk Program
find Path -type f -name Regex -newermt Regex ! -newermt Regex -printf "%T+\t%p\n"
sort
cat File
grep Regex
split -l Quantity
read -s Regex
find Path -amin -Quantity
find Path -name Regex -prune -or -type f -name Regex
xargs -I {} wc -l {}
chgrp Regex File
mktemp -d
find Path -perm Permission -print
cut -d Regex -f Number File
xargs -I {} dig Regex {}
find Path -type f -maxdepth Quantity -name Regex
find Path
mount Regex -o remount,rw
shopt -s compat31
find Path -print0
xargs -0 -I {} ls {}
find Path -name Regex
cat File
grep -o
find Path -atime +Timespan -exec rm -i {} \;
touch -h File
find Path -name Regex -print
tee -a File
find Path -name Regex
find Path -size -Size
find Path -type f -exec ls -s {} \;
sort -n
head - Quantity
find Path -type f
sort
tee File
find Path -newermt Regex -ls
find Path -name Regex -print
find Path -type l -print
find Path -type d -name Regex
find Path -type d -exec chgrp Regex {} \;
find Path -delete
find Path
xargs -I {} grep Regex File {}
sed Program
find Path -maxdepth Quantity -type f -perm Permission
readlink -e File
find Path -name Regex -exec rm -v -f {} \;
find Path -name Regex
find Path -type f -exec grep Regex {} \; -print
wc -l
find Path -type f -mtime +Timespan -exec rm -f {} \;
find Path -print0
tr Regex Regex
find Path -name Regex -exec ls -l {} \;
find Path -type l
find Path -type f -size +Size
df -k File
tail - Quantity
awk Program
echo -e Regex
awk -v Program Program
od -a
find Path -mtime +Timespan -exec du -s -h {} \;
ifconfig Regex
grep Regex
cut -d Regex -f Number
find Path $( pwd ) -maxdepth Quantity
find Path -name Regex -prune -or -print
xargs -I {} grep Regex {}
find Path -user Regex -mtime Timespan
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -name Regex -exec ls -l -a {} +
cat File
fold -s -w Quantity
tar -x -p -v -f File -C Directory
find Path -prune -type f -size +Size -print
find Path -type f -name Regex -exec rm -i {} \;
find Path -ctime -Timespan -name Regex
find Path -type f -size Size -exec mv {} File \;
find Path
grep -q -i Regex
ls -l -d File File
sed Program
rsync -a -v --delete File File
find Path -name Regex
md5sum File
sort
uniq -d
find Path -atime +Timespan -or -size +Size -print
find Path -depth -type d -empty -exec rmdir {} \;
find Path -print
grep Regex
find Path -type f -name Regex -size +Size -exec rm {} \;
find Path -iname Regex -print0
xargs -I {} -0 grep -i Regex {}
find Path -type f -iname Regex -exec ls -l -r -t {} \;
awk -F Regex Program
man Regex
find Path -type f -exec grep -H Regex {} +
pushd Directory
find Path -name Regex -print
find Path -type d -atime Timespan
md5sum File File
find Path -name Regex
ln -s $( echo Regex ) Regex
find Path -perm Permission -print
set -o history
find Path -name Regex -type f -print0
xargs -0 -n Quantity -I {} grep -H -n Regex {}
wc -l
df -P -h
column -t
mktemp -p Directory
find Path -mindepth Quantity -maxdepth Quantity -name Regex -printf "mv '%h/%f' '%h/lib%f'\n"
sh
find Path -mtime -Timespan -type f -exec tar -r -v -f File {} \;
ln -f -s File Regex
cal $( date +"%m %Y" )
awk Program
find Path -amin -Quantity -name Regex
find Path Path -type f -ctime +Timespan
find Path -gid Regex
find Path -iname Regex -type f
wc -l
tac File
awk Program
tac
echo Regex
rev
cut -d Regex -f Number
rev
find Path -type d -name Regex
find Path -name Regex -atime -Timespan
find Path -name Regex
find Path -name Regex
find Path -name Regex -exec basename Regex Regex \;
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
rm -r File
find Path -type f -empty
find Path -type d -exec chmod Permission {} \;
find Path -name Regex
find Path -type f
find Path Path Path Path -type d -exec cp File {} \;
cd $(  )
find Path -name Regex -exec ls -l -d {} \;
find Path -mindepth Quantity -maxdepth Quantity -type d -name Regex -printf '*'
wc -c
find Path -type d -maxdepth Quantity -empty -print0
xargs -0 -I {} rmdir {}
find Path -name Regex -exec ls {} +
find Path -name Regex -prune -or -type d -printf '%p:'
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
tar -c -z -f File File
split -b Size File Regex
find Path -name Regex -type f
find Path -mtime -Timespan -type d
find Path -maxdepth Quantity -type f -mtime -Timespan
find Path -type f -iname Regex
find Path -iname Regex -mtime -Timespan
find Path -prune -name Regex -type f -cmin +Quantity
xargs -i -I {} basename {} Regex {}
find Path -name Regex
sort
xargs -I {} head -n Quantity {}
find Path -type f -exec echo Regex Regex Regex {} \;
find Path -empty
find Path -type f -empty -print
xargs -I {} rm -f {}
uname -s -r -v -m
find Path -type f -name Regex
find Path -type l -name Regex
find Path -name Regex -exec rm -f {} \;
cd $( dirname $( which Regex ) )
find Path -type d -name Regex -exec chmod Permission {} \;
find Path -name Regex -exec grep -E -l Regex {} \;
comm -1 -2 File File
find Path \( -name Regex -or -name Regex \) -exec rm {} \;
diff -E -N -w -b -u Quantity File File
find Path -type f -empty
ls -d -1 File
find Path -size +Size -print
find Path -mtime Timespan
find Path -mtime -Timespan ! -name Regex -type f -printf '%f\n'
find Path -name Regex
mv File $( echo Regex
rev
cut -f Number -d Regex
rev )
find Path -type d ! -perm -Permission
dig Regex Regex o-o.myaddr.l.google.com @ns1.google.com
find Path -type f -regex Regex -exec rm {} \;
paste File
find Path -type f -and -name Regex
basename Regex
find Path -type f
xargs
wc -c
find Path -name Regex
xargs -I {} rm {}
find Path -delete
find Path -name Regex -prune -or -name Regex -print
find Path Path Path Path -name Regex
find Path -type f -exec chmod Permission {} +
find Path -type f ! -perm -Permission
find Path -type f -perm -Permission
find Path -name Regex -exec grep -l -- Regex {} +
xargs -I {} grep -l Regex {}
find Path -name Regex
find Path -type f -exec chmod Permission {} \;
find Path -user Regex
find Path -type l
find Path -type f
xargs -I {} chmod --reference {} Permission
find Path -type d -empty
find Path -name Regex -print0
sort -r -z
kill $( pstree -p Regex
sed Program
grep Regex
sed Program
tr Regex Regex )
find Path -name Regex
dig -x Regex
find Path Path Path -name Regex
find Path -name Regex -type f -exec cat -- {} +
wc -l
join -t Regex File File
find Path -follow -name Regex
find Path -mtime +Timespan -exec rm -r -f {} \;
find Path -type f -exec ln -s {} \;
diff -y File File
cat File
tar -x
find Path -type f -exec basename {} \;
wc -l
fold File File
awk -f File
find Path -size +Size -exec mv {} File +
find Path -type f -perm Permission -print
df --total -B Size
tail -n Quantity
find Path -mtime Timespan
find Path \( -name Regex -prune -and -name Regex -prune -or -name Regex \) -print
echo $( cat File )
dig Regex Regex a
find Path -name Regex -exec rsync -R {} File \;
find Path -type f
sort File File
uniq
echo -e $( date )
find Path -mindepth Quantity -maxdepth Quantity -type d -printf "%P\n"
find Path -iname Regex -print0
xargs -0 --no-run-if-empty -I {} rm {}
ls File
xargs -I {} gunzip {}
jobs -s -l
awk Program
find Path -type f -daystart -mtime -Timespan
find Path -print0
tr -c -d Regex
wc -c
find -L Path -type l -exec rm -- {} +
find Path -type f ! -perm Permission -print0
xargs -0 -I {} chmod Permission {}
find Path -maxdepth Quantity -mindepth Quantity -type d -printf "%f\0"
xargs -0 -I {} echo Regex Regex Regex Regex
mkdir -m 777 Directory
find Path ! -newermt Regex -newermt Regex -ls
join -o 1.1,1.2,1.3,2.1,2.2,2.3 -j Regex <( sort -k Number File ) <( sort -k Number File )
find Path -type f -iname Regex
find Path \( -name Regex -or -name Regex \) -mtime +Timespan -print0
gzip -d -c Regex Regex
awk Program
find Path -name Regex -type f -exec grep -H -n Regex {} \;
rm -v File
find Path -daystart -mtime +Timespan
od -t fD
history
tail -n Quantity
find Path Path -f -mtime -Timespan
find Path -mtime -Timespan -ls
find Path --version
true
echo Regex
find Path -name Regex
xargs -I {} rm {}
mount
grep Regex
awk Program
chgrp --recursive Regex File
chown -R $( whoami ) File
find Path
find Path -ls -name Regex
find Path -maxdepth Quantity -type f -name Regex -exec mv -n {} File \;
find Path -ipath Regex -ipath Regex
find Path -type f -exec ls -s {} \;
sort -n -r
head - Quantity
find Path -exec  +
find Path -type f -name Regex -print -exec grep -s Regex {} \;
find Path -type f
grep -E -v Regex
xargs -I {} bzip2 -9 {}
find Path -type d -printf "%f\n"
awk Program
find Path -name Regex -print
shopt -s globstar
ssh -f Regex -p Regex -L Regex -N
find Path
find Path -inum Quantity -exec rm -i {} \;
cd Directory
find Path -version
find Path -type d -delete
find Path -mmin -Quantity
find Path -type f -name Regex
find Path -type d -name Regex -prune -or -type f -print
tac File
grep -m Quantity Regex
find Path -maxdepth Quantity -type d -printf "%P\n" -exec tar -z -c -p -v -f File {} \;
md5sum File
find Path -perm +Permission
find Path -exec grep Regex {} File \; -print
find Path -type f -mtime -Timespan
find Path -L -type l
find Path -name Regex -print0
sed Program
xargs -0 -I {} mv File File
find Path -size +Size -exec ls -s -h {} \;
ifconfig Regex
grep -o -E Regex
find Path -type f -name Regex
xargs -I {} rm {}
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
tac File
sed -n -e Program
tac File
find Path -name Regex
xargs -I {} grep -E Regex {}
ping -c Quantity -q Regex
grep -o -P Regex
find Path -iname Regex
grep Regex $( uname -r )
echo Regex
od -c
awk Program Program Program
rev
column -t
rev
find Path -name Regex -exec rm -v -f {} \;
find Path -name Regex -prune -or -print
find Path -type f -mtime +Timespan -print0
xargs -0 -r -I {} rm -f {}
zcat Regex
find Path -name Regex
cd $( dirname $( which Regex ) )
find Path -type f -empty
find Path -empty
find Path -name Regex -print
find Path -name Regex
xargs -I {} grep Regex {}
mkdir Directory
tac File
sed Program
tac
find Path -name Regex
mv $( ls ) File
grep Regex $( find Path -name Regex )
find Path -type d -name Regex
read -t Quantity
find Path -type d -exec chmod Permission {} \;
bg Regex
find Path -name Regex
xargs -0 -I {} rm -r -f {}
set -v
find Path -type f -iname Regex -iname Regex -exec echo {} \;
find Path -printf "%h/%f : dernier accès le %Ac\n"
find Path -name Regex -type f -exec rm -f {} \;
find Path -perm Permission
ssh -l Regex Regex command
find Path -type d -exec chmod Permission {} +
find Path -ctime -Timespan
find Path -mtime -Timespan
find Path -type f \( -name Regex -or -name Regex \)
find Path -name Regex -exec rm {} \;
find Path -type f -ctime +Timespan -exec ls -l {} \;
find Path -type f -print
xargs -I {} grep -i -l Regex {}
find Path -name Regex
find Path -mindepth Quantity -maxdepth Quantity -type f -print0
xargs -0 -I {} echo {}
find Path -iregex Regex
readlink -m File
ls
find Path -perm -Permission
find Path -regex Regex
find Path -mindepth Quantity -exec mv -t Directory {} +
basename Regex
awk Program Program
find Path -type d -perm Permission
find Path -user Regex -print
find Path -name Regex -depth
find Path -print0 -name Regex -type f
xargs -0 -I {} rename Regex {}
find Path -not -iwholename Regex
find Path -type f -name Regex
rsync -r -c -n --out-format "%n" File File
chown Regex File
find Path -type f -user Regex -perm -Permission -exec ls -l {} \;
find Path -name Regex
echo Regex
tr -c -d Regex
od -c
find Path -size +Size -print
find Path -regex Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
history
grep Regex
find Path -type f -name Regex
awk -F Regex Program
df File
grep -q Regex
cat File
xargs -n Quantity -I {} cp File {}
find Path -name Regex
xargs -I {} grep Regex {}
find Path -size +Size
find Path -path Regex -exec mv {} $( dirname {} ) \;
find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex
bind -p
grep -a Regex
find Path -maxdepth Quantity -name Regex
tail
find Path -name Regex -exec mv {} File File \;
find Path -type f -name Regex
pwd dirname Regex
find Path
xargs -I {} file {}
sed Program File
column -t
find Path -regextype sed -regex Regex
find Path -type f -exec du -s {} \;
sort -r -k Number
head
bzip2 -k File
find Path -type d -exec basename {} \;
find Path -size +Size -regex Regex -exec gzip {} \;
find Path -type f -exec split -l Quantity {} \;
fold -w Quantity File
find Path -type f
grep -o -E Regex
sort -u
find Path -type d -printf '%d\t%P\n'
sort -r -n -k Number
cut -f Number
sort -u -t Regex -k Number -k Number File
rsync File File
find Path -name Regex -prune -or -print
bzip2 -k -v File
find Path -perm Permission
set
grep Regex
df -k File
find Path -name Regex -exec rm {} \;
find Path -type f -print0
xargs -0 -I {} ls -l {}
chmod +Permission File
kill - Regex $( ps -A -o stat,ppid
grep -e Regex
awk Program )
find Path ! -type d -print
echo Regex
cut -d Regex --complement -f Number
find Path -name Regex
set
grep -o -P Regex
grep Regex
find Path -maxdepth Quantity
find Path -name Regex -type f
echo $( date +"%a %x %X" ) $( hostname )
find Path -name Regex -and -not -path Regex -delete
ping Regex
awk Program
find Path -mindepth Quantity -maxdepth Quantity -type d
find Path -iname Regex -exec grep Regex {} \;
find Path -mmin -Quantity
find Path -type f
awk -F Regex Program
find Path -type l
find Path -not -name Regex
ls -d -1 File
tr -d Regex
find Path -mtime +Timespan -mtime -Timespan
head
find Path -user Regex
find Path -perm Permission
echo -e Regex
awk Program
od -a
find Path -user Regex -type f -name Regex ! -name Regex
find Path -type d -ls
find Path -mtime -Timespan -type f
find Path -type d -exec chmod Permission {} +
find Path -mindepth Quantity -type f -print
mkdir Directory
finger Regex
head -n Quantity
cut -d Regex -f Number
find Path -perm Permission
cal -h
cut -c Number
tail -n +Quantity
wc -w
rev File
chown Regex File
find Path -type f -amin +Quantity
find Path -type f -name Regex -newer File -print
echo Regex
readlink File
basename $( pwd )
find Path -type f -print0
xargs -0 -I {} grep Regex {}
find Path -maxdepth Quantity -type d -exec basename -a {} +
ifconfig
grep Regex
grep -v Regex
cut -d Regex -f Number
awk Program
echo Regex
sed -r Program
readlink -e File
find Path -name Regex
find Path -regex Regex
echo Regex
rev
cut -d Regex -f -Number
rev
awk Program
sort -n
cut -c Number
df --total -B Size
tail -n Quantity
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path -name Regex
find Path -newer File
od -t x2 --skip-bytes Size --read-bytes Size File
head - Quantity
awk Program
find Path -user Regex -exec chown -R Regex {} \;
find Path -perm -Permission -exec chmod Permission {} \;
find Path -name Regex -type d -delete
ls -m
tr -d Regex
tr Regex Regex
find Path -name Regex -not -path Regex
find Path -type f -empty
find Path ! Path -prune -or -name Regex -ls
find Path -type f -perm -Permission
find Path -type f
wc -l
find Path $( pwd ) -type f
find Path -iname Regex
find Path -type f -size +Size
find Path -mtime -Timespan
cat File
nl
sed Program
find Path -xdev -inum Quantity
find Path -name Regex
zcat Regex
grep Regex
find Path -name Regex -exec echo {} \;
ls
xargs -i -I {} mv {} File {}
cp $( find Path -perm -Permission -type f ) File
find Path -regex Regex
watch ls -l File
mkdir Directory
find Path -maxdepth Quantity -perm -Permission -type f
sed Program
set -f
find Path -type f
xargs -d Regex -I {} grep Regex {}
ln -s File Regex
ssh -X -Y -t Regex ssh -X -Y -t Regex
find Path -size +Size -print
awk Program <( gzip -d -c Regex ) <( gzip -d -c Regex )
awk -f $( which Regex ) Program
watch echo -e Regex
find Path $( ls -d File ) -name Regex
find Path -printf 'Name: %f Owner: %u %s bytes\n'
sed Program File
tr -d Regex
wc -c
find Path -name Regex -exec ls -l -a -h {} \;
find Path -name Regex
find Path -name Regex -exec grep -H -F -f Regex {} \;
find Path -perm Permission
shopt -u -o history
who
grep -i Regex
cut -c Number
echo Regex
cut -d Regex -f Number
find Path -path Regex -prune -or -name Regex -print
find Path -perm +Permission
find Path -name Regex
find Path -name Regex -exec grep Regex {} \;
find Path -mindepth Quantity -type d -size +Size -delete
find Path -type d -empty -print0
xargs -0 -I {} rmdir -v {}
find Path -size -Size
find Path -name Regex
xargs -I {} rm {}
$( dirname $( readlink -f File ) )
env
grep -i Regex
find Path -type f -name Regex -exec rm -f {} \;
find Path -type l -print0
xargs -0 -I {} file {}
grep Regex
cat File
bg Regex Regex Regex Regex Regex Regex Regex
find Path -printf "%y %i %prn"
echo Regex
cut -d Regex -f Number
find Path -mtime -Timespan
find Path -name Regex -print0
xargs -0 -I {} du -c -h {}
tail -n Quantity
find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -print
read -r -p Regex Regex
find Path -mtime -Timespan
info Regex Regex
find Path -name Regex -exec rm {} \;
find Path -exec grep Regex {} +
find Path -mmin +Quantity
yes Regex
mkdir -p Directory
cat File
xargs -I {} mv -t Directory {}
find Path -maxdepth Quantity -name Regex -type d -print0
xargs -0 -r -I {} mv -t Directory {}
mkdir --parents Directory
find Path -not -path Regex -iname Regex -print0
xargs -0 -I {} sed --in-place Regex Program {}
find Path -name Regex -delete
split -l Quantity File
find Path -name Regex
sed Program
chown -R Regex File
find Path -name Regex
find Path -type f -iname Regex -print0
find Path -type d -name Regex -print0 -exec ls -l -r -t {} \;
find Path -name Regex
read -s -p Regex Regex
find Path -type d -mtime +Timespan -exec compress File {} \;
find Path -name Regex ! -path Regex
mkdir -p Directory
find -P Path -type f
rev
cut -d Regex -f Number
rev
cut -d Regex -f Number
cut -d Regex -f Number
sort
uniq -c
echo Regex Regex
tee >( awk Program )
find Path -name Regex
find Path -type f -printf "%s %p\n"
awk Program
find Path -type f -print0
pstree -a -p Regex
find Path -name Regex -exec zcat {} +
grep Regex
find Path
find Path -name Regex -prune -or -name Regex -print
mv $( ls File ) File
find Path -type d -mtime +Timespan -name Regex -exec rm -r -f {} \;
read -r Regex
ifconfig Regex
grep -o -E Regex
find Path -maxdepth Quantity -name Regex -print
find Path -type f -exec ls -s {} \; Path Path
head - Quantity
hostname -i
cut -d Regex -f Number
find Path -name Regex -ctime -Timespan
find Path -name Regex
xargs -I {} rm {}
pwd
find Path -empty -exec rm {} \;
chown -R $( whoami ) File
find Path -xdev -samefile Regex -print0
xargs -0 -I {} rm {}
find Path \( -name Regex -or -name Regex \) -print
find Path
more
ssh Regex -M -S Path -N
diff File File
find Path -mmin +Quantity
find Path -type f -print0
tr -d -c Regex
wc -c
find Path -name Regex -type f
xargs -I {} ls -l -t -r {}
tail - Quantity
sleep Timespan
find Path -type f -mtime +Timespan -exec rm -f {} \;
find Path -type f -name Regex
find Path -mtime -Timespan
find Path -name Regex -exec cp {} File \;
find Path -exec grep -q Regex {} \; -exec grep -q Regex {} \; -ls
find Path -empty
ls -b
find Path -path Regex -prune -or -type d
wc -l
find Path -mmin -Quantity
find Path -type f
awk Program Program
column -t
find Path -perm +Permission -print
find Path
find Path -name Regex -type f
find Path -type f -size +Size -name Regex
find Path -type f -size +Size -printf '%s %p\n'
sort -r -n
find Path -type d -name Regex
find Path -maxdepth Quantity -type d
find Path -type d -name Regex -ls
jobs -p
xargs -I {} kill - Regex {}
mkdir Directory
find Path -name Regex -type f -daystart -mtime -Timespan -mtime +Timespan
xargs -I {} cat {}
sort
uniq
seq Number Number
sort -R
tee File
cat <( cat File ) <( echo Regex ) File
cp -R -v -n File File
find Path ! -perm Permission
history -c -r
find Path -name Regex
find Path -iname Regex
cat File
rev
cut -d Regex -f Number
rev
who -m
awk Program
file File
pstree -a
find Path -type f ! -perm -Permission
find Path -iname Regex -type f -exec mv {} File \;
find Path -path Regex -prune -or -type f -print
cat File
grep -E Regex
find Path -type f -exec grep -H -n Regex {} \;
find Path -samefile Regex
mktemp -u -p Regex
find Path -maxdepth Quantity -type d
wc -l
find Path -user Regex -exec du -s -m {} \;
awk Program
find Path -regextype posix-egrep -regex Regex
find Path -name Regex -not -path Regex -not -path Regex
find Path -type f -print0
xargs -0 -I {} sed -i Program File {}
touch File
pstree -a -p -l
rsync -a -v -z --chmod o-rwx -p File File
column -t -s Regex File
find Path -mtime -Timespan
cp File File -R
find Path -name Regex -print
grep -v Regex
mkdir $( cat File
tr -d -c Regex
fold -w Quantity
head -n Quantity )
$( readlink -f $( dirname Regex ) )
find Path -type -d -empty -delete
split -l Quantity File Regex
find Path -type f -mtime -Timespan
comm -2 -3 <( find Path
sed Program
sort ) <( find Path
sed Program
sort )
sed Program
find Path -type f
xargs -L Quantity -I {} grep Regex {}
echo Regex
xargs -I {} gzip -9 {}
find Path -iname Regex
find Path -maxdepth Quantity -type f -perm Permission
cut -d Regex -f Number
cut -d Regex -f Number
sort
uniq -c
chown -R Regex File
find Path -type d -perm Permission -exec chmod Permission {} \;
gcc File
sed Program
tr Regex Regex
find Path -type f -name Regex -exec grep -i -l Regex {} \;
echo Regex
od -x -c -b
find -L Path ! -type l
find Path -empty -exec ls {} \;
find Path -ls
find Path -type f -name Regex -exec sed -i -e Program {} \;
find Path -perm Permission -iname Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type f \( -name Regex -or -name Regex \) -exec ls -l {} \;
find Path -type f -name Regex
find Path -iname Regex
find Path -name Regex
grep -v Regex
pstree
cat
find Path -depth -wholename Regex -prune -or -print
cpio -o -a -v
find Path -name Regex
find Path -name Regex -printf "%f %a, %t\n"
du -b File
set Regex
find Path -type f -mtime +Timespan
tee File
xargs -I {} -P Quantity compress {}
find Path -name Regex -exec rm {} \;
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
cp -R File File
env $( hostname ) Program
find Path -name Regex -type f -daystart -mtime -Timespan -mtime +Timespan
xargs -i -I {} cp {} File {}
find Path -type f -not -name Regex -not -name Regex
xargs -I {} rm {}
find Path -type d -empty -delete
read Regex
join -v Quantity File File
mkdir Directory Directory
find Path \( -name Regex -prune \) -or -name Regex
history Quantity
wc -l $( find Path -name Regex )
find Path -perm -Permission
mount -l
uniq
find -d Path -name Regex -type d -print0
xargs -0 -I {} rm -r -f {}
find Path -type f -print0
xargs -0 -I {} sed -i Program {}
df -h
mv File File
diff File File File
tail -n +Quantity
grep Regex
cut -c Number
mkdir -p Directory
find Path -perm -Permission -type f
tr -s -c Regex Regex
find Path -maxdepth Quantity -type d -print
xargs -I {} echo Regex {}
comm -2 -3 <( find Path -type d
sed Program
sort ) <( find Path -type d
sed Program
sort )
sed Program
find Path -type f -name Regex -exec sed -i -e Program -e Program {} \;
find Path -name Regex -exec grep Regex {} \;
split File
find Path -name Regex
xargs -I {} cat {}
wc -l
find Path -type f -size +Size -not -iname Regex
head --lines -Quantity File
find Path -name Regex
xargs -I {} grep -P Regex {}
read -r -p Regex Regex
hostname -I
awk -F Regex Program
ls -d File
cut -f Number -d Regex
find Path ! -name Regex
readlink --canonicalize-existing File
find Path -type f
sed Program
xargs -I {} ls File {}
awk Program
sort
tail - Quantity
echo Regex
od -t x1
find Path -name Regex -prune -or -mindepth +Quantity -print
find Path -type f -name Regex -exec rm -f {} \;
sort -n -r -k File
tree -p -u -g -f -i
find Path -regex Regex
find Path -path Regex -prune -or -nouser -or -nogroup
find Path -path Regex -prune -or -name Regex -print
find Path -user Regex -exec chown -R Regex {} \;
find Path -mmin -Quantity -mmin +Quantity
cd $( find Path -name Regex -printf '%h\n' )
mkdir -p Directory
find Path -size -Size -size +Size -print
echo Regex
xargs -I {} dirname {}
find Path -type f -mtime Timespan -exec gzip {} \;
find Path -newer File
find Path Path Path -print
grep -F -f File
find Path -type f ! -perm Permission
cd $( ls -d File
grep Regex )
find Path -type f -exec file -i {} +
grep Regex
chown -R Regex File
find Path -print
xargs -I {} grep -l -i Regex {}
find Path -name Regex -print
find Path -type d -printf '%T+ %p\n'
sort
head - Quantity
cat File
tr -c -d Regex
head -c Quantity
find Path -name Regex
sort -t Regex -V -k Number
find Path -type d ! -perm -Permission
find Path -type f -name Regex
find Path -cmin Quantity Path Path -or Path Path
echo Regex
fold -w Quantity
paste File File File
sed Program
find Path ! -newermt Regex
find Path -mount ! Path -prune -or -path Regex -prune -or -name Regex -ls
history -r Quantity
find Path -print0
find Path -type f -ok chown Regex {} \;
find Path -name Regex -print0
xargs -0 -I {} grep -i Regex {}
echo Regex
read -a Regex
zcat Regex Regex
grep Regex
find Path -user Regex
$( which Regex )
set -o nounset
whoami
find Path -newermt Regex
find Path -name Regex -print0
xargs -0 -I {} cp {} File
find Path -name Regex
split -l Quantity File Regex
find Path -user Regex
find Path -name Regex -execdir gunzip {} \;
find Path -name Regex ! -path Regex
mktemp -u
mkdir Directory
find Path -type f -name Regex ! -path Regex ! -path Regex
find Path -print0
xargs -0 -I {} touch {}
find Path -atime +Timespan
sed -f File Program
find Path -iname Regex -exec echo Regex {} \;
find Path -name Regex -print
less
find Path -name Regex -exec rm -v {} \;
find Path -nogroup Path -print
find Path -type f -exec chmod Permission {} \;
ln -s -f $( readlink -f File ) Regex
history
awk Program
paste File File
column -s Regex -t
mktemp -t Regex
find Path -type f -perm Permission -exec echo Regex {} \; -exec chmod Permission {} \;
find Path -mindepth Quantity -mmin -Quantity
xargs -r -I {} ls -l -d {}
df -k File
tail - Quantity
tr -s Regex
cut -d Regex -f Number
find Path \( -name Regex -or -name Regex \) -print0
xargs -0 -I {} grep -l -i Regex {}
find Path -perm Permission -exec ls -l {} \;
find Path -type f -printf "%T@ %t\\n"
sort -n -r -k Number
head -n Quantity
find Path -nouser
comm -1 -2 File File
uname -a
shred -u -z -n File File
find Path -mindepth Quantity -maxdepth Quantity -type d
find Path -name Regex
find Path -name Regex
find Path -mtime -Timespan -daystart -print0
cpio -p -d -0 Regex
paste -d Regex -s File
find Path Path -f -amin -Quantity
cd $( dirname $( which Regex ) )
find Path -type f -printf "\n%Ab %p"
head -n Quantity
sort -k Number
mktemp -u -t Regex
find Path -path Regex
find Path -type f -not -name Regex -print0
xargs -0 -I {} rm -- {}
find Path -iname Regex -exec md5sum {} \;
find Path -name Regex
xargs -I {} cp -a -v --target-directory Directory --parents {}
find Path -name Regex
xargs -I {} grep Regex {}
find Path \( -name Regex -or -name Regex \)
echo $( basename $( readlink -n -f File ) )
find Path -perm -Permission -perm Permission ! -perm Permission
find Path -type f -printf '%s %p\n'
sort -r -n
head - Quantity
find Path -name Regex
find Path -type f -mtime +Timespan
sed Program
mkdir Directory
find Path -type f
find Path Path -maxdepth Quantity -name Regex -printf '%f.torrent\n'
find Path -type f -name Regex
find Path -name Regex -print0
xargs -0 -I {} wc {}
find Path
grep Regex
xargs -n Quantity -I {} cp -f File {}
read -e -p Regex
find Path -perm +Permission
find Path -exec env Program Program \;
find Path -mtime -Timespan
cal
sed Program
find Path -size -Size
find Path -type f -exec ln -s {} Regex \;
find Path -perm Permission
find Path -type f -size +Size
set
grep -o -P Regex
find Path -type d -regex Regex
find Path -perm Permission -type f -exec ls -l {} \;
find Path -name Regex
xargs -I {} ls -l -r -t {}
awk Program
find Path -size +Size
df -B Size
cut -d Regex -f Number
yes
cat
more
find Path -name Regex -newer File
find Path -type f -exec chmod Permission {} + -or -type d -exec chmod Permission {} +
yes -- Regex
head -n Quantity
diff --brief --recursive File File
ln -f File Regex
od -x -c -b File
less
find Path -empty -delete -print
cal -h DateTime DateTime
cut -c Number
sed -r Program
sed Program
head -n -Quantity
tail -n +Quantity
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path --version
find Path -type f -mtime +Timespan
xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {}
find Path -not -path Regex -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -path Regex
find Path -name Regex -exec mv {} File \;
find Path -name Regex
grep -v Regex
mkdir -p Directory
find Path -type f -name Regex -exec grep -i -l Regex {} \;
dirname $( readlink -m File )
chown -R -f Regex File
find Path -type f
xargs -I {} md5sum {}
sort
uniq -D w32
awk -F Regex Program
sort -f
uniq -D i
find Path -type l -lname Regex
$( which Regex )
find Path -type f -exec grep -I -q Regex {} \; -and -print
$( dirname Regex )
find Path -type d -depth -print
diff -q -r File File
set -e
find Path Path
find Path -type f -print
xargs -n Quantity
find Path Path -f -atime -Timespan
find Path -user Regex -name Regex -daystart -mtime -Timespan
rev File
cut -d Regex -f Number
rev
find Path -type f -iname Regex -exec mv -t Directory {} +
ifconfig -a
find Path -name Regex -prune -or -name Regex -delete
find Path -amin +Quantity -amin -Quantity
cat File
env Program Program Program Program
head -c Quantity
find Path -iname Regex ! -path Regex
pushd Directory
history
sed Program
comm -1 -3 <( sort File ) <( sort File )
find Path -ctime -Timespan -name Regex
xargs -I {} mv {} File
jobs -p
tail -n Quantity File File
xargs -I {} kill {}
read -u Regex -N Quantity -r -s Regex
find Path -maxdepth Quantity -name Regex -exec rm -r -f {} \;
find Path -name Regex
find Path -type d -empty -exec rmdir -v -p --ignore-fail-on-non-empty {} +
find Path -type f -atime +Timespan -size Size
seq Number
sed Program
awk -v Program Program
find Path -type f -name Regex
grep -o -E Regex
grep -o -E Regex
awk Program
sort
uniq -c
sort -r -n
cat File
rev
cut -c Number
rev
find Path -name Regex -mtime +Timespan -print0
xargs -0 -n Quantity -P Quantity -I {} bzip2 {}
find Path -not -regex Regex
find Path -name Regex -print
find Path -maxdepth Quantity -type d \( ! -name Regex \)
find Path
true
true
false
true
false
find Path -path Regex -prune -or -name Regex -type f -print
groups Regex
echo $( dirname $( readlink -f File ) )
find Path -mtime +Timespan -delete
find Path -type f
xargs -I {} chmod -v Permission {}
find Path -perm Permission -exec chmod Permission {} \;
find Path -user Regex
find Path -atime -Timespan
find Path -type f
wc -l
find Path \( ! -regex Regex \) -type f -name Regex
awk -F Regex Program <( zcat Regex ) <( zcat Regex )
split -d -l Quantity File Regex
diff -U Quantity File File
grep -v Regex
wc -l
find Path -name Regex -exec grep -H -i -n Regex {} +
cut -d Regex -f Number
find Path -type f -mtime +Timespan -name Regex -exec mv {} File \;
ls File
rev
cut -d Regex -f Number
rev
find Path -type f -perm -Permission
find Path -maxdepth Quantity -mindepth Quantity -type d
sort
diff <( find Path -exec readlink -f {} \;
sed Program
sort
uniq ) <( find Path -name Regex -exec readlink -f {} \;
sed Program
sort
uniq )
sed -n Program
find Path -mtime -Timespan -user Regex -exec ln -s {} Regex \;
find Path -perm -Permission -perm Permission ! -perm Permission
find Path -name Regex -print0
xargs -0 -i -I {} mv {} File {}
find Path -path Regex
find Path -type f -ctime +Timespan
find Path -size +Size -exec ls -l -h {} \;
find Path -mindepth Quantity -maxdepth Quantity -type d -mtime +Timespan -printf "\t- It seems that %p wasn't modified during last 30 day\n"
find Path Path -iname Regex -exec du -s {} +
sed $( hostname )
find Path -name Regex -okdir echo Regex \;
find Path -newer File
mkdir -p Directory
cat File
xargs -I {} ping -c Quantity {}
find Path -regextype posix-extended -regex Regex -fprint File
find Path -name Regex -exec chmod Permission {} \;
find Path -path Regex
comm -1 -2 <( ls File ) <( ls File )
od -x -c -b File
less
du -s -b
find
sort
find Path -type d
wc -l
nl -n rz File
awk -v Program Program
sort -k Number
cut -f Number
find Path
find Path -type d -empty -exec rmdir {} \;
sed Program File
wc -l
find Path -name Regex -exec grep Regex {} \;
find Path -xdev -name Regex
find Path -delete
jobs -p -r
tr Regex Regex
find Path -mtime +Timespan -exec du -k -s {} \;
cut -f Number
awk Program
find Path -daystart -mtime +Timespan
find Path -name Regex -print
gzip -k -r Regex
find Path -size +Size
find Path -regex Regex
find Path -name Regex -not -path Regex
comm -2 -3 File File
cp File $( mktemp Regex )
find Path -size Size
finger
tail -n +Quantity
awk Program
sort
uniq
crontab -l
grep Regex
find Path -type d -name Regex
cat File
grep Regex
paste -s -d Regex
sed -e Program
tac File
sort -k Number -r -u
find Path -printf "%f\n"
find Path -type f -name Regex ! -path Regex ! -path Regex
find Path -name Regex -mtime Timespan
find Path -regextype posix-egrep -regex Regex -not -path Regex -not -path Regex -print0
xargs -0 -I {} ls -L -1 -d {}
find Path -name Regex -execdir mv File File \;
find Path -name Regex -type f
find Path -mindepth Quantity -depth -type d -empty -exec rmdir {} \;
find Path -exec grep Regex {} \; -print
pwd
awk -F Regex Program
ln -f -s File Regex
find Path -iname Regex
mv File File
find Path -mtime -Timespan ! -type d
find Path \( -name Regex -prune -or ! -name Regex \)
xargs -d Regex -I {} grep -H -d Regex File {}
find Path -mindepth Quantity -maxdepth Quantity -type d
history
less
find Path -name Regex -exec rm -f {} \;
find Path -type d -path Regex -prune -or -not -name Regex -type f -name Regex -print
mkdir Directory Directory
shred -v -n File -z -u File
find Path Path Path -name Regex -type f
groups
tr Regex Regex
find Path -mmin -Quantity
mkdir Directory
find Path Path -type l
find Path ! Path -prune
find Path -type d -exec chown Regex {} \;
find Path -iname Regex
find Path -type d -name Regex -ls
scp -3 File File
echo Regex
rev
cut -c Number
rev
find Path -name Regex -exec grep -H -i -n Regex {} +
basename $( cut -d Regex -f Number )
rsync -u -r --delete File File
find Path -name Regex
xargs -I {} rm -f -r {}
find Path -iname Regex
find Path -maxdepth Quantity
grep -v Regex
xargs -I {} rm -r {}
su -l Regex
find Path -type f -atime +Timespan -exec rm {} \;
echo Regex
rev
cut -d Regex -f -Number
find Path -size Size
df -h File
find Path -group Regex
cd Directory
rsync -r File File
cal
head - Quantity
grep -o -P Regex
find Path -name Regex
ssh -f -N -T -L Regex -R Regex Regex
find Path -nogroup -print
rename Regex Regex
rename -n Regex Regex
uname -m
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -name Regex -exec grep Regex {} \;
rsync -z -v -r --exclude Regex --include Regex --include Regex File File
true
sleep Timespan
find Path -name Regex
find Path -type d -exec chmod Permission {} \;
find Path -type f
sed Program
xargs -I {} ls File {}
awk Program
sort
tail - Quantity
gzip -c Regex
split -b Size File Regex
shopt -s extglob
find Path -type d -name Regex -prune
find Path -not \( -path Regex -or -path Regex -prune \) -type f
find Path -iname Regex -exec mv {} File \;
find Path -type f -perm Permission -exec echo Regex {} \;
echo -e Regex
ssh-keygen -q -t rsa -N Regex -f File
touch -r File File
shopt -s nullglob
cat File
grep Regex
grep -v Regex
wc -l
grep -o Regex
find Path -type f -mtime -Timespan
find Path -mtime -Timespan -type d
find Path -type f -name Regex -print
find Path -mtime -Timespan -print
comm -2 File File
awk -F Regex Program
mount
awk Program
jobs -p
xargs -I {} kill {}
join -t Regex File File
find Path -type d -printf '%d:%p\n'
sort -n
tail - Quantity
find Path -name Regex -fprint File
find Path -name Regex
xargs -I {} grep -E Regex {}
wc -l File
find Path -type f -exec grep -l Regex {} \;
find Path -type f
xargs -I {} ls -l -S {}
head - Quantity
awk Program
find Path -mtime +Timespan -print
find Path -maxdepth Quantity ! -name Regex -exec ln -s File Regex \;
finger
sort -u
echo Regex
tr Regex Regex
tac -s Regex
sed Program
find Path -name Regex -print
chmod Permission $( find Path -type d -print )
cat File
sed -e Program
column -s Regex -t
less File -N -S
find Path \( -type d -and -perm -Permission \) -print
find Path -user Regex -exec chown Regex {} \;
find Path Path -type f -mtime +Timespan -exec compress {} \;
find Path -exec grep Regex {} \;
find Path -exec grep Regex {} \;
find Path -name Regex -exec rm -f {} \;
find Path -type f -empty
find Path -iname Regex
xargs -I {} sed -i Program {}
find Path -type f -not -name Regex -or -not -name Regex
xargs -I {} rm {}
df -k File
find Path -newermt Regex -ls
find Path -path Regex -print
comm -3 <( sort -u -n File ) <( sort -u -n File )
tr -d Regex
find Path -name Regex -exec grep -n Regex {} +
set -a
find Path -maxdepth Quantity -type f
xargs -I {} grep -F Regex {}
find Path -name Regex
find Path -iname Regex -exec grep -E Regex File \;
ssh -i File -R Regex Regex
watch -n Quantity ls -l
find Path -name Regex -newer File
find Path -mtime Timespan
who -s -u
sort
uniq
column
find Path -type d -mindepth Quantity
head -n -Quantity File
find Path -name Regex -print0
xargs -0 -I {} grep Regex {}
echo -e Regex
sort -t Regex -g
tail -n Quantity
find Path -mtime Timespan -daystart -iname Regex
echo -n -e Regex
md5sum
cat File
awk Program
sort -n -r
head - Quantity
sort File
uniq -c
sort -r
find Path -type f -inum Quantity -exec mv {} File \;
cat $( find Path -name Regex -print )
find Path -type f -name Regex
paste -s -d Regex File
tac File
sed Program
tac
split --bytes Size File Regex
find Path -path Regex -print
find Path -type f -printf '%T@ %p\n'
sort -n
tail - Quantity
cut -f Number -d Regex
sed Program
xargs -I {} ls -l {}
cal DateTime DateTime
awk Program
find Path -type f -name Regex
ifconfig Regex
awk Program
find Path -mtime -Timespan \( Path -or -name Regex \)
find Path $( echo Regex ) -maxdepth Quantity -empty
find Path -type f -name Regex -exec rm -f {} \;
find Path -name Regex -print
find Path -iname Regex
find Path -type f -name Regex -exec rm -f {} \;
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -type f -print0
sort -z
xargs -r -0 -I {} md5sum {}
md5sum
find Path -iname Regex
find Path -type d
find Path -name Regex
grep -f <( sed Program File )
diff <( sort File -u ) <( sort File -u )
set -e
jobs
find Path -path Regex -prune -or -name Regex -print
ls -A -l
grep Regex
awk -F Regex Program
od -c -v -A none -w Size
find Path -type f -exec ls -s {} \;
sort -n
head - Quantity
zcat Regex
awk Program
find Path -type f -name Regex
find Path \( -type f -or -type d \) -name Regex -ls
env
grep Regex
grep -o -e Regex
find Path -type d ! -perm -Permission
env Program Program
history -r
find Path -type f -atime +Timespan
find Path -user Regex -name Regex
date --date Regex "+%a %d/%m/%Y"
read Regex
read -p Regex -n Quantity
find Path -perm Permission
pwd
sed Program
echo -e -n Regex
column -t
sed Program
grep -i -n -s -r Regex File
find Path ! -name Regex
find Path -P -type f
find Path -mtime +Timespan -type f -exec rm {} \;
find Path -type d -perm Permission -print -exec chmod Permission {} \;
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -size +Size -print
find Path -type f -iname Regex -printf "%h\n"
sort -u
ls -1
tail -n +Quantity
head -n Quantity
find Path -regextype posix-egrep -regex Regex
find Path -name Regex
find Path -perm Permission
head
find Path -depth
mount -t proc Regex Regex
find Path -iname Regex
find Path -type f
wc -l
df -k File
mv File File
find Path -name Regex -exec grep --color 'xrange' {} +
find Path -name Regex -exec echo {} Regex \;
find Path -name Regex
less
find Path -mindepth Quantity -type d -path Regex -prune -or -name Regex -print
find Path $( pwd -P ) -mtime Timespan -not \( -name Regex -or -regex Regex -or -regex Regex \)
chgrp Regex File File File
find Path ! -perm -Permission
find Path Path -f -ctime -Timespan
find Path
sort
seq Number Number
tail -n +Quantity
head -n Quantity
find Path -type f
grep -E -o Regex
cut -c Number
sed Program File
tr -d Regex
column -s Regex -t
find Path -name Regex
find Path -iname Regex
find Path -name Regex -type f -exec grep -i Regex {} \;
find Path $( echo Regex ) -type f -print0
xargs -0 -I {} grep -l -E Regex {}
chown -R Regex File
ping -c Quantity Regex
grep Regex
grep Regex
awk Program
sed Program
find Path -type f -not -name Regex
find Path -type d -exec chmod Permission {} \;
echo Regex
rev
find Path -name Regex -exec grep Regex {} +
chown Regex File File
find Path -type f -exec md5sum {} +
join -1 Regex -2 Regex <( sort File File File ) <( sort File File File )
chmod Permission File
find Path -name Regex -type f -print
xargs -I {} tar -c -v -z -f File {}
find Path -name Regex -exec grep -H Regex {} \;
find Path
chgrp -R Regex File
ln -f File Regex
find Path -regextype posix-egrep -regex Regex
find Path -type d -name Regex
find Path -name Regex -exec mv {} File \;
which Regex
file -f File
ls -C -1 -t
awk Program
xargs -I {} rm {}
grep -a -R -e Regex Regex
md5sum
cut -c -Number
chgrp -R Regex File
ping Regex -I Regex -c Quantity
find Path -type f -name Regex -exec chmod Permission {} \;
cat File
xargs -I {} scp File {}
grep -R -i -l Regex File
chown Regex File
find Path -name Regex -printf "%M %f \t %s bytes \t%y\n"
find Path -type f -name Regex -size +Size -exec rm {} \;
find Path -name Regex
tmux command
find Path -name Regex -prune -or -type f -printf '%m%c%p'
md5sum
find Path -user Regex -print
seq Number Number
sort -R
head -n Quantity
find Path -type l -name Regex -exec ls -l {} \;
find Path ! -name Regex -exec compress -f {} \;
find Path Path -f -amin +Quantity
find Path -type f -name Regex -exec rm -f {} \;
chown -R Regex File
find Path -perm -Permission -perm Permission ! -perm Permission
find Path -not -iwholename Regex -exec chown Regex {} \;
df -T File
tail - Quantity
awk Program
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path -name Regex -type d
xargs -I {} rmdir {}
find Path -type f -printf "%s %p\n"
sort -r -n
head -n Quantity
find Path -type f -mtime -Timespan -print0
xargs -0 -I {} ls -l -t {}
head
find Path -daystart -mtime Timespan
find Path -printf "%TY%Tm%Td%TH%TM%TS
%p
%l\n"
find Path -name Regex -type f -exec grep Regex {} \;
cd $( ls -d File
grep Regex )
find Path -type f -printf '%20s %p\n'
sort -n
cut -b Number
tr Regex Regex
xargs -0 -I {} ls -l -a -S -r {}
find Path -type f -name Regex
awk Program
bash
diff -a --suppress-common-lines -y File File
find Path -newer File -print
nl -s Regex File
cut -c Number
find Path -mtime +Timespan -exec rm {} \;
find Path -name Regex
find Path -type f -exec grep -n -i Regex File {} \;
find Path -path Regex -print
rsync -a -v --rsync-path Program File File
rm $( find Path -maxdepth Quantity -name Regex )
chmod Permission $( find Path -type d -print )
find Path Path
sed -i Program File
find Path -newer File -print
find Path -type f -print0
xargs -0 -n Quantity -I {} echo Regex {}
sh File
find Path -size +Size -size -Size
find Path ! -perm Permission -exec chmod Permission {} \;
find Path -type f -name Regex
ls
xargs -I {} chown -R Regex {}
find Path -maxdepth Quantity -size +Size -exec bzip2 {} \;
split -a Quantity File
find Path -maxdepth Quantity -empty
find Path -maxdepth Quantity -type f
find Path -type f -print0
xargs -0 -I {} sed -i Program {}
find Path -type f -mtime +Timespan -exec chmod Permission {} +
cat $( find Path )
find Path -name Regex -exec grep -i -l Regex {} \;
find Path -regex Regex
ln -s File $( echo -e Regex )
ls -l -- File
find Path -name Regex ! -name Regex ! -name Regex ! -name Regex ! -name Regex ! -name Regex -exec gunzip -v -f {} \;
cd $( find Path -name Regex -printf %h )
find Path -name Regex
xargs -n Quantity -I {} dirname {}
xargs -I {} mv {} File
find Path ! -path Regex ! -path Regex -type f
find Path -type f Path
sort -r
find Path -type f -perm Permission -print -exec chmod Permission {} \;
tree -s
echo -e $( echo -n -e Regex
wc -m )
cd Directory
find Path -type f -perm Permission -print
find Path -name Regex -empty -delete
find Path -name Regex -print -exec cat {} \;
mkdir Directory
find Path -name Regex
comm -2 -3 <( sort File ) <( sort File )
echo Regex
grep -E -o Regex
cut -d Regex -f Number
find Path -name Regex
split
find Path -name Regex
sort -n
tail - Quantity
grep Regex File
tr Regex Regex
find Path -size -Size -print
find Path -type f -name Regex
tr Regex Regex
xargs -0 -I {} rm -f {}
rsync -a -q --rsync-path Program File File
set Regex
chmod Permission $( find Path -type d )
chown -v Regex File
set
sed -n Program
find Path -name Regex -printf "%f\n"
xargs -I {} grep Regex {}
echo -e Regex
od -a
grep Regex
grep -o Regex
date -d Regex
split -b Size File Regex
find Path -name Regex
xargs -I {} grep -m Quantity -r -i Regex {}
find Path -name Regex
xargs -I {} grep -E Regex {}
find Path -size +Size -iname Regex
find Path -name Regex -print0
xargs -0 -I {} gunzip {}
chown -R Regex File
ls -1
xargs -I {} readlink -f {}
find Path -mtime +Timespan -type f -size +Size -exec rm {} \;
find Path -name Regex
find Path -name Regex -exec grep --color -aHn Regex {} \;
find Path -type f -print0
tr -d -c Regex
wc -c
find Path -exec grep -l Regex {} \;
xargs -I {} rm {}
find Path -type d
xargs -I {} chmod Permission {}
rsync -a -v File File
find Path -iname Regex -type f -exec cp {} -r -v File \;
mkdir Directory
find Path -name Regex -type f -exec ln -s {} \;
find Path -perm Permission
find Path ! -name Regex
find Path -maxdepth Quantity -iname Regex
find Path -atime +Timespan -type f -exec mv {} File \;
find Path -mtime +Timespan -name Regex -print
find Path -iname Regex
find Path -name Regex
xargs -I {} mv {} File
find Path \( -path Regex -prune -or ! -name Regex \) -and -name Regex
chown --reference File -- Regex
find Path -name Regex -and -not -path Regex -delete
find Path
cut -d Regex -f Number
uniq -c
ln -n -s -f File Regex
find Path -maxdepth Quantity -mindepth Quantity -type d
du -c -s -x -b File
md5sum -c File
find Path -mtime Timespan
find Path -maxdepth Quantity -type f
find Path -name Regex
set -o verbose
split -l Quantity File Regex
find Path -maxdepth Quantity -type f
xargs -I {} mv {} File
find Path -type f -name Regex
find Path -mtime +Timespan
xargs -I {} rm {}
find Path -name Regex -type f -exec cp --parents {} File \;
find Path -name Regex -print
find Path -type f -name Regex
mkdir -p Directory
find Path -group Regex -print
echo -e Regex
xargs -I {} touch {}
chown -v Regex File
set -o xtrace
shred File
head -n Quantity File
od -c
find Path -perm Permission
find Path -type f -exec grep Regex {} File \;
find Path -maxdepth Quantity -name Regex
mkdir -p Directory
df -P File
tail - Quantity
awk Program
find Path -mtime +Timespan -print
find Path -name Regex -name Regex -print
sed Program File
split -d -l Quantity File Regex
find Path -type d \( -name Regex -or -name Regex -or -name Regex \) -prune -or -name Regex -print
find Path -type f -name Regex
man Regex
find Path -iname Regex -exec ls {} +
hostname -s
find Path -maxdepth Quantity -empty
find Path -name Regex -prune -or -type f -and -perm Permission -printf ':%h\n'
sort
uniq
tr -d Regex
cat File
grep -v Regex
wc -l
find Path -user Regex -exec chown Regex {} \;
ifconfig Regex
grep -o -P Regex
find Path -name Regex -print0
xargs -0 -I {} wc -l {}
sort -n -r
grep -E -v Regex
less
find Path -name Regex -type f -print0
find Path -type f -iname Regex
ln -s $( readlink -e File ) Regex
chmod -R Permission File
curl Regex Regex Regex
find Path -not \( -path Regex -prune \) -not \( -path Regex -prune \) -name Regex
hostname --ip-address
find Path -type f -exec grep -i -l Regex \;
ls -p
grep -v Regex
xargs -I {} md5sum {}
awk Program
ls -l
more
find Path -ctime +Timespan -type f -exec rm {} \;
find Path -type f
xargs -I {} grep Regex {}
echo Regex
tr -s Regex Regex
false
tee File
find Path -name Regex -exec rm -f {} \;
find Path -mtime Timespan
date +%Y:%m:%d -d Regex
find Path -type f -name Regex
find Path -exec grep Regex {} \;
more
find Path -depth -name Regex -execdir rename Regex Regex {} \;
find Path -name Regex -type f -print0
xargs -0 -I {} grep -i Regex {}
find Path -type f -name Regex -delete
df -i -h
find Path -perm Permission
find Path -atime +Timespan -exec rm -i {} \;
find Path -path Regex
find Path -name Regex -type f -print
watch -n Quantity du -s File
join File File
column -t
tree -d -L Number -i --noreport
echo Regex Regex Regex Regex
tr Regex Regex
tac
tr Regex Regex
bzip2 -k -v File
find Path -type f -exec grep -H -i Regex {} +
find Path -type f
wc -l
find Path -name Regex -type f -print0
xargs -0 -n Quantity -I {} echo {}
find Path -maxdepth Quantity -empty -exec echo {} Regex Regex \;
find Path -type f -perm Permission -print0
popd
tail - Quantity <( sort File )
awk Program Program
find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n Quantity
history
grep -A Quantity -B Quantity Regex
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
find Path -name Regex
find Path -name Regex
find Path $( pwd ) -name Regex -printf "%f\n"
find Path -maxdepth Quantity -name Regex -size -Size
xargs -I {} echo Regex Regex {}
ssh Regex -p Regex -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -i File -o ForwardAgent=yes
find Path -type f -print0
xargs -0 -I {} ls -l {}
find Path -name Regex -or -path Regex -prune -or -path Regex -prune
df File
tail - Quantity
awk Program
whoami
find Path -type f -exec  \;
sort -n
find Path -print
grep Regex
find Path -name Regex -exec rm {} \;
seq -f "%02g" Number
find Path -type f
grep -P Regex
xargs -I {} rm {}
find Path -newerct Regex -print
find Path -name Regex -print
chmod +Permission File
yes Regex
head - Quantity
awk Program
find Path -type l
join -1 Regex -2 Regex File File
find Path -iregex Regex -type f -cmin +Quantity -exec basename {} \;
who
awk Program
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
find Path -name Regex -print
xargs -n Quantity -I {} grep Regex {}
find Path -name Regex -print
read -n Quantity -s
ln -s File Regex
echo Regex
sort -u
find Path -type f -name Regex ! -name Regex -print
find Path -type f
cat -n File
sort -u -k Number
sort -n -k Number
cut -f Number
find Path -mtime -Timespan
paste -d Regex <( sed -n Program File ) <( sed -n Program File )
find Path \( -newer File -or -user Regex \) -print
find Path -size Size
find Path -type d -mtime -Timespan -exec mv -t Directory {} +
find Path -print0
xargs -0 -I {} chown Regex {}
find Path -type f -not -name Regex -mtime +Timespan -exec ls {} \;
find Path -mindepth Quantity -maxdepth Quantity -type d -printf '%M %u %g %p\n'
find Path -perm Permission
find Path \( -type d -name Regex -prune \) -or \( -type f -name Regex -print \)
dig -t SRV Regex
find Path -name Regex -ok echo Regex \;
find Path -prune
find Path -name Regex
find Path $( pwd ) -name Regex -printf "%f\n"
cat File
tr -d -c Regex
fold -w Quantity
head - Quantity
find Path -name Regex
grep -f File
find Path -name Regex -type f -print
ssh -l Regex -p Regex Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -type d -delete
find Path -ok tar -r -v -f File {} \;
kill - Regex Regex Regex
hostname -I
find Path -type f -exec grep Regex {} \;
find Path -size +Size -iname Regex
find Path -type d -exec du -s -k {} \;
sort -n -k Number
find Path -mindepth Quantity -maxdepth Quantity -type d
awk Program
xargs -d Regex -I {} tar -c -z -f File {}
find Path \( -size +Size -fprintf File %-10s Path \)
find Path -perm Permission
cp -r File File
find Path -perm Permission
find Path -mindepth Quantity -maxdepth Quantity -type d
xargs -n Quantity -I {} cp -i File {}
find Path -iname Regex
split -b Size -d File Regex
find Path -path Regex -prune -or -iname Regex -print
chown Regex File
cat File
grep Regex
wc -l
pwd
cut -b Number
tr Regex Regex
grep $( cat File ) File
date +'%d%m%Y-%H-%M' whoami
find Path -atime +Timespan -delete
jobs -l
find Path -name Regex
find Path -name Regex
sort File
uniq -c
tar -x -O -f File File
zless
find Path -type f -mtime +Timespan
sort -n
find Path -iname Regex -type d
find Path -type d -path Regex -prune -or -print
find Path -type f \( -name Regex -or -name Regex \)
find Path ! -path Regex -type f -name Regex
which Regex
find Path -nouser -or -nogroup
find Path -name Regex -print
find Path -type f -exec echo {} \;
df File
tail - Quantity
awk Program
find Path -type f \( -iname Regex ! -iname Regex \)
find Path -regex Regex -print
find Path -maxdepth Quantity
find Path -name Regex -exec wc -l {} \;
find Path -name Regex
sort -t Regex -n -k Number
join <( sort File ) <( nl File
sort -b )
ls -a -l -R -I File -I File -I File -I File -I File File
md5sum -c File
chown -R Regex File
clear
tar -I File -c -f File File
find Path -perm Permission
tree -d -f -i -L Number $( pwd )
find Path -name Regex
xargs -I {} grep Regex {}
mkdir -p Directory Directory
find Path -maxdepth Quantity -name Regex
seq Number Number
sort -R
tee File
cat <( cat File ) <( echo Regex ) <( tac )
find Path -iname Regex -type f -print0
xargs -0 -I {} mv {} File
diff -r -q File File
grep Regex
find Path -maxdepth Quantity -not -name Regex -print0
xargs --null -I {} chown -R Regex {}
find Path -perm -Permission -print
find Path -type d -exec chmod Permission {} \;
find Path -name Regex -prune -or -print0
xargs -0 -I {} chown Regex {}
od File
grep Regex
ls -1
wc -l
find Path -mtime +Timespan
find Path \( -name Regex -prune \) -and \( -name Regex -prune \) -or \( -name Regex -print \)
cal
awk Program
diff -u Quantity File
find Path -name Regex -exec  \;
find Path -mtime +Timespan -mtime -Timespan
find Path -type f
tac
find Path -mtime -Timespan -type f
find Path -type f -print0
xargs -0 -i -I {} cat {} {}
grep Regex
ls -l $( which Regex )
find Path -maxdepth Quantity -name Regex
chown -R Regex File
find Path -type f -name Regex
find Path -name Regex
rsync -r -v -c --delete --size-only --dry-run File File File File
find Path -name Regex -mtime Timespan -type f -printf '%p: ' -exec tail - Quantity {} \;
find Path -iname Regex
find Path -name Regex -exec ls -l {} \;
hostname -i
mount -o ro,loop,offset=$OFFSET -t auto Regex Regex
find Path -name Regex
history
sed Program
find Path -type f -name Regex
rsync -n -v -r -a -L File File --exclude Regex
find Path -size Size
echo $( hostname ) $( date )
find Path -type f
xargs -I {} chmod -v Permission {}
find Path -mtime -Timespan
find Path -type f -perm -Permission
readlink -f File
find Path -name Regex -exec grep -w Regex {} \; -print
grep Regex
find Path -maxdepth Quantity -type d -exec basename {} \;
find Path -name Regex -execdir rename Regex {} \;
find Path Path -f -ctime +Timespan
find Path -name Regex -exec chmod -Permission {} \; -exec ls -l {} \;
tee File
man Regex
history
awk Program
find Path -type d -name Regex
dig Regex
grep -e Regex
tr -s Regex Regex
cut -d Regex -f Number
pstree -s -A Regex
head -n Quantity
sed -e Program -e Program -e Program
wc -l
find Path -xtype l
ssh -L Regex -p Regex Regex
find Path -name Regex
ifconfig Regex Regex
find Path -type f -exec ls -s {} +
sort -n
head - Quantity
history
tail
find Path -not -name Regex -print
find Path -name Regex -type f -print0
xargs -0 -I {} grep -l Regex {}
find Path -maxdepth Quantity -name Regex
find Path -print
find Path \( -name Regex -or -name Regex \) -type f -atime +Timespan -exec rm {} \;
find Path -type l -exec file {} \;
grep Regex
date --date Regex "+%a %d/%m/%Y"
seq $( tail - Quantity File )
diff File File
grep -P -o Regex
find Path -name Regex -exec echo {} \; -exec grep Regex {} \;
find Path -mount -depth \( -type f -or -type l \) -print
find Path -mnewer File
find Path
xargs -n Quantity -I {} echo {}
df -h File
readlink -f File
ifconfig Regex Regex Regex Regex
find Path -type f -name Regex -print
find Path -size +Size -exec ls -l {} \;
df -h File
chown Regex File
find Path -name Regex -print0
find Path -name Regex
xargs -I {} rm {}
basename -- $( dirname -- Regex )
bind -r Regex
find Path -print Path
find Path -iname Regex
xargs -I {} sed -i Program {}
find Path -name Regex
w
cut -d Regex -f Number
kill - Regex Regex
find Path -size +Size -size -Size -print
echo Regex Regex
tee -a File
find Path -name Regex -print0
xargs -0 -i -I {} mv {} File {}
find Path -name Regex -delete
find Path -type s
zcat Regex
wc -c
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path -name Regex
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path \( -name Regex -prune -or -type f \) -print
yes Regex
head - Quantity
tr -d Regex
mount Regex
find Path -name Regex
find Path -name Regex -prune -or -name Regex
echo Regex
sed Program
ifconfig
grep Regex
grep -v Regex
awk -F Regex Program
awk Program
head - Quantity
find Path -mindepth Quantity -type d -empty
echo $( dirname $( readlink -f File ) )
find Path -mmin +Quantity
find Path -type f -user Regex -exec ls -l -s {} \;
find Path
bind Regex
find Path -name Regex -exec grep Regex {} \;
find Path -name Regex -type f
find Path -name Regex
cp -r -f --remove-destination $( readlink File ) File
history Quantity
cut -c Number
column -t -s Regex File
find Path -type f -name Regex
xargs -I {} tar -r -v -f File {}
false
true
cat File
find Path -type f -perm -Permission
wc -l
find Path -name Regex -prune -or \( -type f -print0 \)
find Path -name Regex -exec rm -i {} \;
find Path -perm +Permission -type f
tr Regex Regex
ls $( which Regex ) -a -l
find Path -name Regex -print -or -name Regex -print
tree -p
find Path -name Regex -print -exec rm {} \;
compress File
find Path -name Regex -exec rm {} \;
find Path -name Regex -exec basename {} \;
uniq -u
find Path
sed Program
diff -E -N -w -b -u Quantity File File
ls -1
awk Program
cat File
head - Quantity
tail - Quantity
echo Regex
grep -o Regex
tr -d Regex
rsync --iconv UTF-8-MAC,UTF-8 File File
find Path -name Regex
find Path ! -newer File -print
find Path -name Regex -type f -print
xargs -I {} tar -c -v -z -f File {}
hostname
find Path -type f ! -newer File -delete
find Path -name Regex
find Path -iname Regex -atime -Timespan -type -f
find Path -name Regex -or -maxdepth Quantity -mmin +Quantity -type f -name Regex -delete
basename $( pwd )
tr Regex Regex
find Path -name Regex -print
find Path
grep -v Regex
xargs -I {} rm {}
mkdir Directory
find Path -name Regex -type f
ifconfig -a
awk Program
grep -o -E Regex
find Path -inum Quantity -exec rm -i {} \;
find Path Path Path -type f -size +Size -mtime +Timespan -ctime -Timespan -exec file -N -i -- {} +
sed -n Program
nl -b a File
grep Regex
awk Program
find Path -type d -printf "%f\n"
awk Program
sort --unique File
split --numeric-suffixes --lines Quantity --suffix-length Quantity --verbose
hostname -I
find Path -type d
find Path -type d -path Regex -prune -or -not -name Regex -type f -name Regex -print
find Path -type f -atime +Timespan -exec rm {} \;
diff -q -r File File
cat File
head -n Quantity
nl -b a
sed Program
grep Regex
awk Program
basename Regex Regex
find Path -type d -print
find Path -type f -exec ln -s -t File {} +
find Path -path Regex
find Path -name Regex -prune -or -print
find Path -type f -print0
find Path -type f -empty
find Path -type d -maxdepth Quantity ! -name Regex -printf "%f\n"
ifconfig Regex
grep Regex
cut -d Regex -f Number
cut -d Regex -f Number
find Path -not \( -name Regex -prune -or -name Regex -prune -or -name Regex -prune \) -type f -print0
xargs -0 -I {} file -n {}
grep -v Regex
cut -d Regex -f Number
find Path -inum Quantity -exec rm {} \;
comm -1 -2 <( grep -r -l Regex File
sort ) <( grep -r -l Regex File
sort )
find Path -name Regex -exec grep Regex {} \;
less
cat File
grep Regex
sed Program
sort -u
xargs -d Regex -I {} mkdir -p {}
find Path -type f -print0
xargs -0 -I {} sed -i Program File File {}
echo Regex
tr -c -d Regex
head - Quantity File
tail - Quantity
cut -c Number
find Path -name Regex -prune -or -print
ls -1 -b
tr Regex Regex
yes
sed -n Program
find Path -type f -exec chmod Permission {} \;
find Path -mmin -Quantity -not -name Regex
find Path -maxdepth Quantity -type d -exec tar -z -c -p -v -f File {} \;
find Path -iname Regex -exec tar -c -v -f File {} \;
find Path -type f -perm Permission -print
echo $( dirname Regex )
ln -s $( ls -r -t File
tail -n Quantity ) Regex
find Path -print0
xargs -0 -l -i -I {} echo {} {}
find Path -regextype sed -regex Regex
find Path -type f
wc -l
chown -R $( whoami ) File
find Path ! -type d -printf "%T@ %p\n"
sort -n
head -n Quantity
find Path -size +Size \( -mtime +Timespan -or -atime +Timespan \) -ls
grep -r Regex File
find Path -name Regex -exec sed -i Program {} \;
find -L Path -printf "%TY%Tm%Td%TH%TM%TS
%p\n"
crontab -u Regex -e
gzip Regex
find Path -mtime -Timespan
find Path -type f -exec sed -i Program {} \;
find Path -mtime +Timespan
xargs -I {} rm -r -f {}
find Path ! -empty -type d
find Path -name Regex
find Path ! -name Regex -delete
find Path -name Regex -maxdepth Quantity -exec rm -f {} \;
find Path -name Regex -print -exec rm {} \;
ps -e -f
grep Regex
grep -v Regex
awk Program
xargs -I {} kill - Regex {}
find Path -type f -iname Regex
grep -i -r Regex
find Path -follow -lname Regex
find Path -type f
sed Program
find Path -name Regex -exec rm {} +
find Path -type f -name Regex -not -path Regex -print0
xargs -0
find Path -type f -not -name Regex -mtime +Timespan -exec ls {} \;
find Path -name Regex
rev
awk -F Regex Program
rev
sort -t Regex -k Number
find Path -type d \( -path Regex -or -path Regex -or -path Regex \) -prune -or -print
comm -2 -3 <( sort File ) <( sort File )
find Path -type d -name Regex
find Path -type d
find Path -depth -name Regex -exec rm {} \;
mv -T File File
find Path -name Regex -exec mv {} File \;
find Path -type f
grep -P Regex
find Path -mtime Timespan
ls $( pwd )
find Path -name Regex -exec ls -s {} \;
find Path -type d -print0
du -h
grep Regex
cut -f Number
grep -v Regex
find Path -name Regex
find Path -iname Regex
echo Regex
crontab
find Path -maxdepth Quantity -type f -name Regex -exec basename {} \;
ln -s File
find Path -name Regex
xargs -I {} rm {}
echo Regex
tee -a File
find Path -perm Permission
fold -w Quantity File
sort
uniq -c
sort -n -r
find Path -type f -exec grep Regex {} \;
cat File
tr -d -c Regex
fold -w Quantity
head - Quantity
find Path -inum Quantity -exec rm {} \;
kill Regex
awk Program Program Program
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
echo Regex
awk -F Regex Program
find Path -name Regex -type f
xargs -I {} echo Regex {} Regex
find Path -name Regex -type d -prune -or -name Regex -print
find Path -nouser -or -nogroup
kill $( jobs -p )
find Path -name Regex
find Path -type f -print0
xargs -0 -n Quantity
find Path -user Regex -iname Regex
find Path -type d -and -name Regex
xargs -I {} rm -r {}
find Path -maxdepth Quantity -empty
find Path -inum Quantity -exec rm {} \;
find Path -exec cat {} +
groups Regex
grep -q Regex
find Path -name Regex
find Path -name Regex
find Path -type f \( -name Regex -or -name Regex \)
find Path -name Regex
uniq -u
find Path -name Regex -newer File
find Path -type d -name Regex
find Path -name Regex -exec echo {} \;
find Path -type d
grep Regex
find Path -size +Size -print0
xargs -0 -I {} mv {} File
find Path -type d -name Regex
find Path -newer File
find Path -name Regex
find Path -type f -mtime +Timespan -print0
cpio -d -u -m -p -l -0 Regex
set $( cal DateTime DateTime
tr -s Regex Regex
tail - Quantity )
chown -R Regex File
find Path -type f -size +Size
find Path -type f -inum Quantity -delete
find Path -name Regex -type f
find Path -name Regex -ok rm {} \;
mktemp Regex
find Path -type f -print
rsync -a -v File File
find Path -name Regex
ln -s File Regex
ssh-keygen -l File File -f File
xargs -n Quantity -I {} find Path $( pwd ) -type f -inum {} -delete
find Path -name Regex
find Path -type f -print
xargs -i -I {} mv -f {} File {}
find Path -type d -name Regex -exec rm -r -f {} \;
find Path -name Regex -exec nano {} \;
find Path -type d -name Regex -mtime +Timespan -print
xargs -I {} rm -r -f {}
zcat Regex
less
ssh Regex command
find Path -prune -empty
find Path -size Size
find Path -iwholename Regex
join <( sort -n File ) <( sort -n File )
find Path -name Regex -exec ls {} \;
find Path -name Regex -type d -print0
xargs -0 -I {} rm -r -- {}
split -n Quantity File
find Path -type d ! -perm -Permission
find Path -exec grep -l Regex {} \;
grep -E -w -R Regex File
find Path -perm Permission
find Path -name Regex -or -name Regex
find Path -name Regex
find Path -maxdepth Quantity -type f
find Path -type f -printf "%T@ :$f %p\n"
sort -n -r
cut -d Regex -f Number
head -n Quantity
find Path -name Regex
find Path -type f ! -name Regex -exec cp {} File \;
find Path -perm Permission -mtime Timespan -print
file $( which Regex )
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
ssh -v -Y Regex -p Regex
ping -c Quantity Regex
mount Regex Regex Directory -o rw
find Path -maxdepth Quantity -type d
xargs -0 -I {} mkdir -p {}
$( md5sum File
cut -f Number -d Regex )
chmod Permission File
find Path -name Regex
find Path -type f -name Regex \( -exec grep -q Regex {} \; -or -print \)
find Path -mtime Timespan
find Path -type f ! -name Regex -exec ln -s File Regex \;
find Path -name Regex
find Path -type f -atime Timespan
chown Regex File
find Path -name Regex -exec rm {} \;
find Path -type f -name Regex -exec rm {} \;
cat File
wc -l
find Path -name Regex Path Path {} Path
readlink -f File
mount
tail - Quantity
sed Program
find
wc -l
uname -s
find Path -user Regex -name Regex
find Path -mindepth Quantity -name Regex
find Path ! -path Regex ! -path Regex -iname Regex
env
grep Regex
grep -o -e Regex
mount Regex Regex -o loop
head -n Quantity File
head -n Quantity File File File
tar -c -z File File
split -b Size File Regex
w
awk Program
find Path -anewer File
mktemp --dry-run Regex
zcat $( find Path -name Regex )
grep Regex
find Path -name Regex -exec grep -l Regex {} \;
wc -l
sed Program File
split -d -l Quantity File Regex
find Path -type f -name Regex -mtime +Timespan -print0
xargs -0 -I {} rm -f {}
cp -R -v -n File File
find Path -type f -name Regex
xargs -I {} rm -f {}
find Path -type f -empty -print0
xargs -0 -I {} rm {}
dig -x Regex
grep Regex
cut -d Regex -f Number
grep Regex
cut -f Number
find Path -type f -print
xargs -I {} rm {}
find Path -type f -name Regex -exec sed -n Program File +
find Path ! \( -newer File -user Regex \) -print
yes Regex
rm -i -r File File File
chgrp Regex File File
mktemp -d -p Directory
find Path -iname Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -name Regex -print0
find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -exec sed -i Program File \; -exec sed -i Program File \;
rsync -a -z -P -e ssh -p Regex File File
shopt -s extglob
find Path -type f -empty
find Path -name Regex
find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and Path \( -size +Size -fprintf File '%-10s %p\n' \)
find Path -type f Path
shopt -s histverify
find Path -mtime -Timespan -type d
rm File
find Path \( -perm -Permission -fprintf File '%#m %u %p\n' \) -and \( -size +Size -fprintf File '%-10s %p\n' \)
cat File File File File
split -n Quantity -d File Regex
ifconfig
awk -F Regex Program
w
sed Program
cut -f Number -d Regex
sort
uniq -c
find Path -type f -iname Regex -print
find Path -type f -newermt Regex ! -newermt Regex -delete
find Path -size +Size
pstree -p
ln -s File Regex
dig Regex -f File
find Path -type f -exec ls -s {} +
sort -n -r
head - Quantity
gzip -d --force Regex Regex
diff -N -a -r File File
find Path -daystart -mtime +Timespan
find Path -newer File
find Path -mtime -Timespan
xargs -0 -I {} cp File {}
find Path \( -iname Regex -or -iname Regex \)
find Path -name Regex -execdir rm {} \;
more File
find Path -perm -Permission -print
file $( which Regex )
find Path -type f -exec sed -i -e Program {} \;
find Path -size +Size
find Path -type f -name Regex -ls
sort -k +Number -r
find Path -type f
find Path \( -user Regex -or -name Regex \) -print
find Path -perm Permission
find Path -name Regex
grep -v Regex
find Path -path Regex -prune -or -name Regex -print -exec grep -H -n Regex {} \;
pwd -P
find Path ! -perm Permission
gzip -d -c Regex
grep -P Regex
grep -v -P Regex
split -d -l Quantity File Regex
find Path -name Regex -delete
find Path -name Regex -type d
sort
uniq
ssh -O Regex Regex
read -n Quantity Regex
groups Regex
grep Regex
ping Regex
awk Program
find Path -name Regex -type f -print0
find Path -not \( -name Regex -prune -or -name Regex -prune \) -type f -print0
xargs -0 -I {} sed -i Program File File {}
find Path -type f -newerat Regex ! -newerat Regex
ping -c Quantity Regex
grep Regex
readlink -m File
ls -1 File
find Path -name Regex
tr Regex Regex
xargs -0 -I {} wc {}
tar --one-file-system -c -z -v File
split -b Size File Regex
find Path -type f \( -iname Regex -or -iname Regex \)
find Path -name Regex -exec echo Regex \;
find Path -type f
grep -o -E Regex
sort -u
ls -l $( find Path -name Regex )
find Path -name Regex -exec echo {} \; -exec grep Regex {} \;
ls -l -R File
tee -a File
find Path -cmin +Quantity -cmin -Quantity
sort -n -r File
find Path -type f -name Regex
grep Regex File File
info Regex Regex
find Path -type f -name Regex -exec grep -H Regex {} +
find Path -name Regex -exec sed -i Program {} \;
find Path -size +Size -ls
find Path -name Regex
xargs -I {} rm -f {}
find Path -name Regex -delete
find Path -print0
xargs -0 -I {} tar -c -j -f File {}
find Path -type f -name Regex -exec rm -f {} \;
cp --remove-destination $( readlink File ) File
find Path -type f -name Regex -printf "%s\n"
awk Program
grep -r -n -w Regex -e Regex
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -name Regex
find Path -name Regex -exec head -n Quantity -v {} \;
chmod +Permission File
find Path -not -name Regex -or -type f -print
xargs -I {} grep -i -c -l Regex {}
find Path -type f -name Regex
find Path -type f -size +Size -print0
xargs -0 -I {} ls -1 -S -s -h {}
find Path -name Regex -print
xargs -L Quantity -I {} awk Program {}
find Path -name Regex
xargs -I {} rm {}
find Path -name Regex
xargs -I {} grep -E Regex {}
find Path -type f -iname Regex -exec mv {} File \;
find Path -maxdepth Quantity \( -name Regex -or -name Regex \) -print
find Path -size +Size -print0
xargs -0 -I {} mv {} File
find -L Path -samefile Regex
true
xargs -I {} false {}
chmod --reference File Permission
find Path -mindepth Quantity -type f
find Path -type f -regextype posix-extended -regex $( hostname )
cd $( find Path -name Regex
xargs -I {} dirname {} )
mkdir Directory
find Path -regex Regex -type d
find Path -newermt Regex -and ! -newermt Regex
ifconfig Regex
awk Program
find Path -depth -type f -printf "%d\t%p\n"
find Path -type f -exec cat {} \;
tr -c Regex Regex Regex
grep Regex
find Path -name Regex
grep -v Regex
tr Regex Regex
xargs -0 -I {} tar -c -f File {}
cat $( uname -r )
grep Regex
find Path \( -iname Regex -and \( -iname Regex -or -iname Regex \) \) -print0
find Path -type f -print
xargs -I {} file {}
grep -i Regex
cut -f Number -d Regex
xargs -I {} grep Regex {}
ssh Regex ls -l
find Path -type f -mtime +Timespan -print0
xargs -0 -n Quantity -I {} rm {}
find Path Path
find Path -name Regex
xargs -I {} rename Regex {}
ps -e -f
grep Regex
grep -v Regex
awk Program
xargs -I {} kill - Regex {}
find Path -regex Regex
nohup rm -r -f File
find Path -type d -printf "%T@\n"
cut -f Number -d Regex
sort -n -r
find Path -maxdepth Quantity -type d
hostname
cut -d Regex -f Number
history -r Quantity
find Path -type f -exec chmod Permission {} +
find Path -name Regex
source $( dirname $( which Regex ) )
su Regex
find Path -name Regex -ok rm {} \;
ln -s File $( basename Regex )
find Path -type d -iname Regex -depth -exec rename Regex {} +
yes
head -n Quantity
grep -n Regex
cut -d Regex -f Number
paste -s -d Regex
find Path -amin -Quantity
find Path -perm -Permission
find Path -name Regex -print Path
find Path -type f -name Regex -exec md5sum {} +
find Path -type f -regextype posix-extended -regex Regex
ssh -p Regex Regex
find Path -type d
mkdir -p Directory Directory Directory
ssh Regex
find Path -type f -name Regex -print0
xargs -0 -I {} sed -i Program {}
find Path \( -name Regex -prune \) -or \( -name Regex -prune \) -or -name Regex -print
find Path -exec tar -r -v -f File {} \;
history -s Quantity
find Path -perm -Permission
dig Regex Regex a
find Path
grep -i Regex
grep -i Regex
kill Regex
find Path -name Regex -prune -or -type d -printf '%p:'
chown -R $( whoami ) File
find Path -ctime +Timespan
find Path -not -regex Regex
file File
find Path -newer File
$( dirname Regex )
find Path -iname Regex -type f -size -Size
find Path -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n Quantity
ls -a -l File
find Path -group Regex -exec chgrp -h Regex {} \;
find Path -type f \( -name Regex -or -name Regex \)
find Path -name Regex -exec rm {} \;
echo Regex
tr -d Regex
find Path -regex Regex -exec grep -H Regex {} \;
find Path -name Regex -size Size -print0
xargs -0 -I {} rm {}
find Path -perm Permission
head
find Path -name Regex -print0
xargs -0 -I {} tar -u -f File {}
shopt -s cdable_vars
find Path -type d -print0
xargs -0 -I {} rm -r -f {}
env
grep Regex
echo Regex
tr Regex Regex
awk -F Regex Program Program
sort
uniq -c
sort -n -r
find Path -name Regex
cd Directory
find Path -type f -print0
xargs -0 -I {} grep Regex {}
find Path -name Regex -not -samefile Regex -not -newer File
find Path -xdev -name Regex
find Path -type f -perm Permission -print -exec chmod Permission {} \;
find Path -maxdepth Quantity -type f -name Regex -exec mv {} File \; -or -name Regex -exec mv {} File \;
find Path -regex Regex
find Path -name Regex
xargs -I {} grep Regex {}
find Path -name Regex -type d -or -name Regex -type f
ping Regex -n Regex -i Quantity -W Quantity Regex
find Path -type d -name Regex
rsync --progress -a -v -h -e File File File
find Path -name Regex -type d -print0
xargs -0 -I {} rm -r -- {}
find Path -user Regex
head
find Path -type f -exec chmod Permission {} \;
find Path -type f
find Path Path Path -name Regex -type f
xargs -I {} chmod +Permission {}
find Path -name Regex
find Path ! -name Regex -type d -print0
xargs -0 -I {} rmdir {}
find Path -type f -exec file -b {} \; -printf '%s\n'
awk -F Regex Program
sort -n -r
find Path -name Regex -print0
xargs -0 -n Quantity -P Quantity -I {} bzip2 {}
find Path -name Regex
find Path -iname Regex -size +Size
diff <( curl Regex Regex ) <( curl Regex Regex )
find Path -name Regex -print0
xargs -0 -I {} wc -w {}
awk Program
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
grep -a -r -e Regex --include Regex Regex
md5sum
cut -c -Number
find Path \( -name Regex -or -name Regex \)
find Path \( -name Regex -or -name Regex \) -type f -atime +Timespan -exec rm {} \;
find Path -maxdepth Quantity -printf "%P\n"
find Path -name Regex -printf '%h\n'
find Path \( ! -name Regex -prune \)
find Path -iname Regex -iname Regex
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
find Path
find Path -type d -exec chmod Permission {} \;
find Path -name Regex -mtime +Timespan
cd $( grep Regex File
cut -f Number -d Regex
tr Regex Regex )
find Path -name Regex
grep Regex
xargs -I {} dirname {}
find Path -type f -exec chmod Permission {} \;
find Path -not -newer File
find Path -name Regex -print
find Path -perm -Permission
ifconfig Regex
awk Program
grep -E -o Regex
find Path -atime +Timespan -or -size +Size -print
find Path -name Regex -print -exec awk Program {} \;
find Path -not \( -path Regex -prune \) -name Regex
find Path -name Regex
xargs -n Quantity -I {} basename {}
find Path -perm Permission -exec chmod Permission {} \;
find Path -user Regex -exec chgrp Regex {} \;
sed -i $( hostname -I
head -n Quantity
awk Program ) File
find Path -type d
find Path
xargs -I {} grep Regex {}
comm -1 -2 <( awk Program Program
sort -u ) <( awk Program Program
sort -u )
which Regex
find Path -name Regex
find Path -name Regex -exec mv File File \;
find Path -print0
find Path -name Regex -print0
xargs -0 -n Quantity -I {} cp File {}
find Path -size Size
find Path -mmin -Quantity -type f
xargs -I {} ls -l {}
find Path -type f -ls
sort -n -r -k Number
head - Quantity
tac File
sort -k Number -r -u
find Path -path Regex -prune -or -type f
echo $( dirname $( readlink -e File ) )
find Path -iname Regex
find Path -name Regex -type f
find Path -name Regex -exec rm {} \;
find Path -name Regex -exec dirname {} \;
sort -u
find Path -name Regex -exec grep -n Regex {} \;
$( date -d Regex +%s )
echo $( date +%H:%M:%S )
find Path -type f -print0
xargs -0 -e Regex -n Quantity -e Regex
df --total
hostname
sed Program
find Path -name Regex
find Path -name Regex -print0
xargs -0 -I {} rm -r -f {}
find Path -type f -name Regex
find Path -type f -perm -Permission -print0
find Path -type f -name Regex -exec du -k {} \;
awk Program
grep -a -o Regex File
tr -d Regex
join -1 Regex -2 Regex -o 1.1,1.2,1.3,2.3 File File
find Path -exec cat {} \;
find Path ! -perm Permission
find Path -maxdepth Quantity -name Regex -size -Size -exec rm {} \;
mkdir -p $( seq -f "weekly.%.0f" Number Number )
cat -n
touch -t DateTime File
find Path -size +Size -exec ls -s {} \;
mkdir Directory
mkdir Directory
seq Number Number
sed Program
tr -d Regex
find Path -cmin -Quantity -type f -printf "%c %pn"
find Path -name Regex -print0
xargs -0 -I {} cp -t Directory {}
find Path -name Regex -exec echo {} \;
find Path -type f -name Regex -exec rm -v -f {} \;
find Path -type d -exec chmod Permission {} \;
sed -i Program File
seq Number
split -l Quantity File
find Path -group Regex -iname Regex
cat <( ls File
sort -u ) <( ls File
sort -u )
uniq -d
find Path -name Regex
find Path -name Regex -mmin -Quantity
find Path -name Regex -ok rm {} \;
find Path -type f -mtime -Timespan -name Regex
bzip2 -d File
echo $( echo Regex
sort
uniq
wc -l )
sed -i Regex Program File
cat <( grep -F -i -v Regex <( crontab -l ) ) <( echo Regex )
crontab File
sed -i Program -e Program File
find Path -name Regex
ls File
xargs -n Quantity -I {} chown Regex {}
echo Regex
xargs -I {} dirname {}
xargs -I {} basename {}
find Path \( -perm -Permission -or -perm -Permission \) \( ! -type -l \) -ls
find Path -type d
cat File
sort
uniq -c
sort -n -r
awk Program
find Path -regextype posix-egrep -regex Regex -type f
find Path -name Regex
xargs -I {} rm {}
find Path -type d -exec chmod Permission {} +
echo Regex
cut -d Regex -f Number
ifconfig Regex
awk Program
find Path -name Regex -exec dirname {} \;
find Path -name Regex
cp -f File File
join -j Regex File File
find Path -size Size
cat File
tr -d -c Regex
find Path -mtime -Timespan -type f -print
find Path
wc -l
rsync -a -v $( find Path -type f -ctime -Timespan ) File
find Path -name Regex
find Path -name Regex
xargs -I {} rm -v {}
ls -t -Q
tail -n +Quantity
xargs -I {} rm {}
find Path -regextype posix-egrep -regex Regex -print0
grep -v -z -Z Regex
grep -v -z -Z Regex
xargs -0 -I {} ls -1 -L -d {}
find Path -iname Regex -type f -printf +%b
find Path -perm -Permission -print0
xargs -I {} chmod Permission {}
find Path -iname Regex
grep -v Regex
find Path -path Regex -delete
find Path -type d -exec mv {} File \; -exec mkdir Directory \;
kill Regex
find Path -type d
wc -l
find -L Path -name Regex -exec rm {} \;
seq Number Number
sort -R
tee File
cat <( cat File ) <( echo Regex )
tree -I Regex
find Path -name Regex -print0
xargs -0 -I {} mv {} File
find Path -name Regex
rev
cut -d Regex -f Number
rev
find Path -perm -Permission
find Path -exec echo {} \;
ls -a -l -r -t $( pwd )
find Path
find Path -type f Path
chown Regex File
comm -2 -3 File File
dig Regex Regex
awk Program
pstree -s Regex
find Path -name Regex -mtime +Timespan -ok rm {} \;
find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -exec rm -r -f {} \;
cat File
ssh Regex
date -j -f File "Sat Aug 09 13:37:14 2014 +1100"
echo Regex
ssh Regex
find Path ! \( -newer File -user Regex \) -print
find Path -type d -perm Permission -print -exec chmod Permission {} \;
echo Regex
awk Program Program Program Program
od -t x1c
find Path -size Size -type f
find Path -name Regex
xargs -I {} grep -l Regex {}
wc -l
cat File
fold -w Quantity
find Path -type f
mv -n -v File File
find Path -type f -exec file {} \;
awk -F Regex Program
mount -v
grep Regex
find Path -empty -exec ls -l {} \;
find Path \( -name Regex -or -name Regex \) -print
find Path -name Regex -exec rm {} \;
od -c -v -A none -w Size
sort -b
uniq -c
sort -r -n
head -n Quantity
find Path -iregex Regex
head
history -c
diff -u Quantity File File
find Path -name Regex
xargs -I {} cp -a --target-directory Directory --parents {}
find Path -maxdepth Quantity -type f
xargs -I {} grep -F Regex {}
find Path -name Regex -maxdepth Quantity -print
find Path -type f -exec rm {} \;
find Path -type f -print0
xargs -0 -I {} grep -i Regex {}
rev File
sort
uniq -f Quantity
rev
echo Regex
rev
cut -c Number
rev
find Path -name Regex
history Quantity
tac
nl
tac
find Path -mindepth Quantity -name Regex
chown -R Regex File
diff -x Regex -x Regex -x Regex File File
chown -R Regex File
find Path -type f -exec grep -H -n Regex {} +
find Path -name Regex -print
find Path -name Regex -exec grep -l Regex {} +
wc -l
find Path -name Regex
find Path -size Size -exec rm {} \;
find Path -mindepth Quantity -type f -not -amin -Quantity -exec rm {} \;
find Path -name Regex
set $( od -j Size -N File -t u1 File )
find Path -exec cp -t Directory -- {} +
cat $( which Regex )
mount -o remount -o exec Regex
find Path Path Path -prune -empty
grep Regex File
nl
yes Regex
sed Program
find Path -type f
cpio -p -v -d -m -B Regex
find Path -type f
grep -P Regex
sed -r -e Program
xargs -I {} ls -l {}
find Path -iname Regex -daystart -type f -mtime Timespan
find Path -name Regex -type d
paste -s -d Regex
sort -o File File
find Path -type f -name Regex -exec wc -l {} +
find Path -maxdepth Quantity -name Regex -print0
xargs -0 -I {} rm {}
find Path -name Regex
find Path -maxdepth Quantity -type f -name Regex -delete -or -name Regex -delete
find Path -name Regex -exec grep -l -i Regex {} +
xargs -I {} grep -l Regex {}
find Path -type f -name Regex -exec cp {} File \;
find Path -name Regex
find Path -name Regex
find -L Path -maxdepth Quantity -type d ! -group Regex
find Path -atime +Timespan -delete
find Path -name Regex -print
sed Program File
fold -w Quantity
find Path -type f -exec ls -s {} \;
sort -n -r
head - Quantity
chown Regex File
find Path -name Regex
grep -a -r -e Regex Regex
md5sum
cut -c -Number
find Path -type f -size Size
find Path -type f -printf "%T@ %p\n"
sort -n
cut -d Regex -f Number
tail -n Quantity
echo -n -e $( whoami )
find Path Path Path -name Regex
tac File
sort -u -t Regex -r -k Number
tac
wc -l File
cut -f Number -d Regex
cp --help
find Path -name Regex -printf '%Tc %p\n'
find Path \( -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex \) -print0
xargs -0 -I {} wc {}
ls -l -b
find Path -mtime +Timespan -name Regex -print
find Path -name Regex
find Path -maxdepth Quantity -type d -print
xargs -I {} echo Regex {}
find Path -type f -empty -delete
find Path -name Regex
xargs -I {} rm -f {}
ifconfig
grep -i Regex
cut -d Regex -f Number
find Path -type f ! -name Regex -print0
xargs -0 -I {} rename Regex {}
shopt -s extglob
find Path -name Regex
sed -e Program -e Program -e Program
xargs -I {} cp File {}
find Path -user Regex -iname Regex
scp -v File File
find Path -print
find Path -name Regex -type f
sed Program File
wc -l
find Path -name Regex
chmod Permission $( find Path -type f )
ls -d -m File
tr -d Regex
find Path -name Regex -type f
find Path -name Regex
which Regex
df -P -h
column -t
rsync -a --exclude Regex File File
find Path -type f -mtime +Timespan -mtime -Timespan
xargs -I {} tar -c -v -f $( date '+%d%m%Y'_archive.tar ) {}
find Path -type d -mtime +Timespan -exec compress File {} \;
history
awk Program
awk Program
sort
uniq -c
sort -n
tail
sort -n -r
find Path -name Regex -type f -exec grep -H -n Regex {} \;
wc -l
bzip2 -d -c File File
awk Program
find Path -user Regex -iname Regex
find Path -name Regex -type f Path ! -size Size -exec sed -n Program {} \; -print
find Path -type f -exec wc -l {} \;
awk Program
find Path -printf '%p '
join -t Regex -o 1.1,1.2,2.3 File File
find Path -type f -iname Regex -print0
xargs -r -0 -I {} du -a {}
awk Program
find Path -name Regex
awk Program Program
column -t
find Path -type d -regextype posix-egrep -regex Regex
find Path -print
xargs -I {} chown Regex {}
read -e -i Regex -p Regex Regex
mkdir -p Directory Directory Directory
chown Regex File
echo Regex
awk -F Regex Program
find Path -user Regex -type d -perm Permission -print
find Path -type d -name Regex
find Path -name Regex
head - Quantity
xargs -I {} mv {}
find Path -mtime +Timespan -print
find Path -type f -and -iname Regex
find Path -type f -atime +Timespan
find Path -mindepth Quantity -maxdepth Quantity -print0
xargs -0 -I {} rm -r -f {}
find Path -type f -regex Regex
find Path -newermt Regex
find Path -size -Size
ln -s -f -n File Regex
find Path
awk -F Regex Program
tail -n +Quantity File
find Path -perm Permission
find Path -iname Regex
xargs -I {} grep -i -l -r Regex File
xargs -I {} grep -H Regex {}
find Path -name Regex -exec rm -f {} \;
find Path -type f
xargs -I {} grep Regex {}
find Path -type f -exec split -l Quantity {} {} \;
mv File File
su Regex
find Path -atime -Timespan
diff --brief --recursive File File
find Path -name Regex
xargs -I {} rm {}
find Path -user Regex
find Path -mtime -Timespan -print
find Path -inum Quantity -exec mv {} File \;
ls
split -l Quantity File Regex
find Path -name Regex
find Path -print0 -type d
xargs -0 -I {} ls -a -l {}
find Path -perm Permission
head
find Path -type d -print
find Path -daystart -mtime -Timespan
od -t x1 -t a File
ifconfig Regex
awk Program
find Path -perm Permission
set Regex Regex Regex
cat
find Path -type f -prune -name Regex -print
mount -t ntfs
mkdir Directory
find Path -type d -size +Size
mktemp -d
find Path -name Regex -exec rm {} \;
find Path -type f -name Regex
sed Program
sort -u
find Path -name Regex
xargs -I {} rm -f {}
find Path -not \( -name Regex -prune -or -name Regex -prune -or -name Regex -prune \) -type f -print0
xargs -0 -I {} file -n {}
grep -v Regex
cut -d Regex -f Number
find Path -name Regex
find Path -type f -iname Regex -print0
xargs -0 -I {} rename Regex Regex {}
find Path ! \( -name Regex -or -name Regex \) {} Path -print
cp -n -r File File
find Path -daystart -ctime +Timespan
find Path -type d -empty
find Path -newer File -not -newer File -type d -print0
xargs -0 -I {} rmdir {}
tar File File -j -c -v -f File File
find Path
find Path -mtime -Timespan -type d
find Path -type f -exec file -i {} +
grep Regex
groups
find Path -type f ! -perm Permission
head
yes
tr Regex Regex
head -c Quantity
grep Regex
echo Regex
tee -a File
find Path -cmin -Quantity
find Path -size Size
find Path Path Path -type f -name Regex -exec grep -i -l Regex {} \;
find Path Path -f -mtime +Timespan
shopt -s dotglob
find Path ! -name Regex
mkdir -p Directory
find Path -print
grep Regex
find Path -type f ! -name Regex ! -name Regex -print
tee -a File
grep Regex File
source File
find Path -perm Permission
head
cd $( dirname $( which Regex ) )
find Path -type d -exec chmod Permission {} +
chown -R Regex File
find Path
grep Regex
tr Regex Regex
xargs -0 -I {} cp {} File
find -L Path -type l
chmod +Permission File
find Path -maxdepth Quantity -type f -print0
find Path -mtime +Timespan -mtime -Timespan
find Path -depth -print
cpio -p -v -d Regex
find Path -type f -print0
sort -z
xargs -r -0 -I {} md5sum {}
md5sum
rename Regex Regex
find Path -size +Size
find
xargs -i -I {} sh -c echo {} {} {}
find Path -size +Size -ls
find Path -type f -name Regex
xargs -t -i -I {} grep Regex {} {}
find Path -type f -exec chmod Permission {} +
find Path -type f -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex
find Path Path -name Regex -type f
find Path -mtime Timespan -name Regex -print
find Path -name Regex -print
find Path -name Regex -exec echo Regex \;
column -t
find Path -newer File -print
hostname
pushd $( whoami )
find Path -name Regex -type f -print
find Path Path Path -type d -exec chmod Permission {} +
wc -l File
tr -s Regex
cut -d Regex -f Number
find Path -type f -iname Regex -print0
xargs -0 -I {} grep Regex {}
find Path -name Regex -print0
xargs -0 -I {} grep -l Regex {}
tar -c -z -f File File
split -b Size File Regex
ln -f -s File Regex
find Path -follow -inum Quantity
find Path -iname Regex -exec cat {} \;
mkdir Directory
bind -p
grep -i Regex
cp -a File File
split -C Size -d File Regex
gzip -d -c Regex
tar -x -v -f File
echo -e Regex
nl
find Path -type d -exec chmod Permission {} \;
find Path -maxdepth Quantity -type f -name Regex
find Path -type f -not -newermt Regex
df
find Path -type f -mtime +Timespan -print0
find Path Path -user Regex -exec chown Regex {} \;
cp -r -s File File
find Path -path Regex
ln -s -f -n File Regex
sed -i $( whoami ) File
ln -s File Regex
find Path Path -name Regex -type f -exec chmod Permission {} \;
find Path -newer File
$( md5sum File
awk Program )
find Path -type f -iname Regex -delete
find Path
find Path -type f -exec ls -s {} \;
sort -n -r
head - Quantity
find Path -type f \( -name Regex -or -name Regex \) -print
ping -c Quantity -t Timespan Regex
find Path -d Path -type d -name Regex -print
echo Regex
cut -d Regex -f Number
find Path \( -name Regex -or -name Regex \) -prune -or -type f -print
$( date "+%s.%N" )
chown -R Regex File
ifconfig Regex
grep -E -o -i Regex
ping Regex
awk Program
find Path -name Regex -exec rm {} \;
find Path -type f -print0
xargs -0 -I {} grep -l -i -w -Z Regex {}
xargs -0 -I {} rm -f {}
cat File
sed Program
wc -l
find Path -name Regex -exec grep Regex File {} +
find Path -type f -print
sed -e Program
grep Regex
wc -l
tar -t -f File
xargs -I {} dirname {}
sort
uniq
find Path -perm Permission
find Path -type d -exec rename Regex {} \;
find Path -name Regex
find Path -type f ! \( -name Regex -or -name Regex -or -name Regex \) -exec gzip -n {} \;
find Path -name Regex
xargs -I {} echo Regex {}
find Path -perm -Permission
ping Regex
xargs -L Quantity -I {} date '+%c: {}'
find Path -perm Permission
ping Regex
awk -f File
find Path -name Regex
pstree -p Regex
set -v
sort -n File
uniq -c
find Path -type d -gid Regex
w -h Regex
bzip2 File
tee -a File
find Path
find Path -maxdepth Quantity -cmin -Quantity -type f
mount -t linprocfs Regex Regex
find Path -name Regex -exec chmod Permission {} \;
find Path -type f -printf '%p %s\n'
awk Program
find Path -path Regex -prune -or -name Regex -print
find Path -name Regex Path Path -mtime -Timespan -print0
xargs -0 -I {} tar -r -v -f File {}
find Path -type f
grep -P Regex
sed -r -e Program
xargs -I {} rm {}
find Path -depth -name Regex -execdir rename Regex {} \;
find Path -type f -name Regex -exec grep -H -c -m Quantity Regex {} +
sed -n Program
chown Regex -R File
find Path -type d -exec chmod Permission {} \;
rsync -r -t -u -v File File
find Path -maxdepth Quantity -cmin +Quantity -name Regex
ln --symbolic --verbose --force File Regex
find Path -name Regex -prune -or -type d -printf ':%p'
apropos
shopt -s nocasematch
yes
cat
more
find Path -type d
find Path ! -user Regex
find Path -name Regex
mount -o rw,remount Regex Regex
fold -w Quantity File
tr Regex Regex
sed Program
echo Regex
rev
cut -d Regex -f Number
rev
find Path -mtime +Timespan -type f -exec ls -l {} \;
find Path -type f -exec grep -I -q Regex {} \; -and -print0
xargs -0 -I {} grep Regex {}
gunzip -c Regex
tar -x -v -f File
set -x
mount -t vboxsf Regex Regex
mkdir Directory
seq Number
xargs -I {} echo -n {}
find Path -maxdepth Quantity -type d -not -path Regex -printf '%T@ %p\n'
sort
awk Program
chmod Permission File
find Path -type f -size +Size
find Path -type d -name Regex -prune -or -print
find Path -lname Regex
find Path -type f -exec chmod Permission {} +
find Path -name Regex -print0
xargs -0 -I {} mv -t Directory {}
find Path -name Regex
find Path -mtime -Timespan
shopt -s globstar nullglob dotglob
find Path -name Regex
find Path -type f -name Regex -exec grep --with-filename -c Regex {} \;
sort -t Regex -k Number -n -r
find Path -size +Size
uniq -w Quantity -c File
find Path -name Regex
sed Program
cd $( echo -n Regex )
info Regex Regex Regex Regex Regex
seq -w Number Number
find Path -name Regex -or -name Regex
xargs -I {} wc -l {}
grep Regex
awk Program
readlink -f File
mktemp -d Regex
find Path -mtime +Timespan -print
grep -F -x -v -f Regex
read -n Quantity Regex
find Path -perm +Permission
find Path -type f -print0
xargs -0 -I {} file {}
find -d Path -name Regex -type d -exec rm -r -f {} +
find Path -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex -or -name Regex
find Path -type f -name Regex -exec grep -i -l Regex {} \;
find Path -maxdepth Quantity -mindepth Quantity -type d
find Path \( -newer File -or -user Regex \) -print
find Path -name Regex -print
find Path -path Regex -prune -or -print
set -e
mktemp -d
find Path -name Regex
find Path -user Regex -print
find Path -name Regex -type f
find Path -maxdepth Quantity -name Regex
find Path -type f -printf "%p\n"
sort -r -n
head -n Quantity
xargs -I {} cp {} File
chown Regex File -R
df -H --total File
find Path ! -user Regex -exec chown Regex \;
find Path -not -group Regex
find Path -iname Regex
xargs --replace Regex -I {} cp File File {}
find Path -type f
xargs -I {} chown Regex {}
hostname
find Path -depth -type f -not -name Regex -and -not -name Regex -and -not -name Regex -exec rm {} +
dig Regex Regex
grep -E Regex
head -n Quantity
bind Regex
mount -l -t nfs4
find Path -maxdepth Quantity -type f
sed Program
find Path -maxdepth Quantity -name Regex
tail
find Path -name Regex -type f
xargs -I {} wc -l {}
sort -n -r
find Path -name Regex -printf "%f\n"
find Path -type f -name Regex
xargs -I {} tar -r -v -f File {}
read -r -n Quantity -p Regex Regex
find Path -xdev -samefile Regex
xargs -I {} rm {}
tac File
grep -E -m Quantity Regex
cd $( grep Regex File
cut -f Number -d Regex
tr Regex Regex
tr -d Regex )
find Path -name Regex -print0
xargs -0 -I {} du -c -h {}
ps -e -f
grep Regex
grep -v Regex
basename $( pwd )
awk Program
find -E Path -type f -regex Regex
find Path -mtime Timespan
date
ls
sort -f
uniq -i -d
find Path -depth -print
cpio -o -v -0 Regex
tee -a File
du -s File
sort -n
echo $( readlink --canonicalize $( which Regex ) )
find Path -name Regex
grep -v Regex -v File
xargs -I {} grep -i Regex {}
find Path -name Regex -and -perm -Permission
xargs -I {} rm -r -f {}
scp -r File
find Path -depth -name Regex -execdir rename Regex {} \;
find Path -name Regex
cat File
sort
uniq
finger
cut --complement -c Number
find Path -type f -name Regex -print0
xargs -0 -I {} rm -f {}
find Path -name Regex -print0
xargs -0 -I {} grep -E Regex {}
find Path -type d -mtime +Timespan -name Regex -print
xargs -I {} rm -r -f {}
rsync -r -v -v --recursive File File
tail -f Regex
find Path ! -size Size
find Path \( -name Regex -prune -or -name Regex \) -print
find Path -mtime +Timespan
find Path -name Regex
find Path -wholename Regex
who
awk Program
sort
head - Quantity
echo Regex
cut -d Regex -f Number
df -P File
tail - Quantity
cut -d Regex -f Number
find Path -type f -name Regex
xargs -n Quantity -I {} dirname {}
xargs -n Quantity -I {} cp -f File {}
pstree -p Regex
sed Program
grep Regex
sed Program
tr Regex Regex
find Path -regex Regex
xargs -I {} echo Regex Regex {}
find Path -name Regex -and -not -path Regex
ps -e -f
grep Regex
find Path -type d -name Regex -delete
find Path -mmin -Quantity
xargs -I {} ls -l {}
find Path -mmin +Quantity
date -d $( date -d Regex +%Y-%m-1 ) +%a
find Path \( -type d -regex Regex -prune -false \) -or -type f -print0
join -a Quantity -a Quantity <( sed Program File
sort ) <( sed Program File
sort )
column -t
sed Program
mkdir -p $( cut -f Number -d Regex File
sed Program
sort -u )
dig -x Regex Regex
mount
grep Regex
sed Program File
find Path -type f -name Regex ! -path Regex ! -path Regex
rsync -a -q -z File File
find Path -name Regex -print0
xargs -0 -I {} sed -i Program {}
find Path
awk -f File Program
find Path -perm -Permission
find Path -name Regex
find Path -newer File
split -n Quantity File
find Path -type d -print0
sed -e Program
find Path -type f -perm Permission
find Path -name Regex -exec grep --color -aHn Regex {} \;
env -i Program
find Path -type f -name Regex -delete
find Path -regex Regex
history -c
find Path -type f -print0
xargs -0 -I {} ls -l {}
find Path -type f -print0
echo -n Regex
md5sum
find Path -perm Permission
find Path -type f \( -name Regex -or -name Regex \)
ln -s -f File $( which Regex )
find Path -type f
xargs -I {} grep Regex {}
find Path -type d -links Quantity
find Path -iname Regex
set $( dirname Regex )
find Path -type f -print0
xargs -r -0 -I {} sed -i Program {}
shopt -p globstar
find Path -name Regex
cat -n File
less
find Path -name Regex
sed Program
sh
find Path -type f -name Regex -print0
xargs -0 -I {} echo Regex Regex Regex {}
cal DateTime DateTime
tr Regex Regex
grep -v Regex
tail -n Quantity
which Regex
ls -1
grep -v -e Regex -e Regex
xargs -I {} rm -r -f {}
find Path -name Regex -type f -mmin +Quantity -delete
find Path -empty -maxdepth Quantity -exec rm {} \;
find Path -type f -name Regex -exec rm -f {} +
rm -f File File File
find Path -name Regex -type f -exec wc -l File \;
find Path -type f -ls
grep Regex
cat File File File File
split -n Quantity -d File Regex
find Path -type d -exec chown Regex {} \;
find Path -name Regex -print0
xargs -0 -I {} mv -t Directory {}
bind -f File
echo $( ifconfig )
find Path -empty -exec rm File \;
file -L $( which Regex )
find Path -name Regex
xargs -I {} rm -f {}
find Path -type f -exec echo Regex {} \;
find Path -name Regex -exec sed -i Program {} \;
find Path -type f -name Regex -execdir rename Regex {} \;
tar -c -z -f File -X File File
find Path -perm -Permission
find Path -name Regex -exec grep -l Regex {} +
wc -l
find Path \( -not -path Regex -and -not -path Regex -or -path Regex \) -type f
find Path -print -exec shred File -u {} \;
find Path -type d -name Regex -print
xargs -I {} rm -r -f {}
find Path -type d
grep -v Regex
find Path -name Regex -type d
find Path -type d -empty
find Path -not -path Regex -name Regex
xargs -I {} grep Regex {}
find Path -mtime +Timespan -exec rm -f {} \;
cat -n File
join -o 2.2 File File
find Path -type f -exec chmod Permission {} \;
find Path -type f -not -path Regex -exec cp --parents {} File \;
find Path -type d -exec chmod Permission {} \;
tar -x -v -f File
mount -n -o remount Regex
mkdir Directory
mv File File -b -S Regex
join -o 1.1,1.2,1.3,1.4 -t Regex <( sort File ) <( sort File )
chmod Permission -R File
find Path -not -iname Regex -print
find Path -type d
xargs -I {} chmod Permission {}
dig Regex Regex com.
find Path -mtime -Timespan -type f
rm File
find Path -name Regex -print0
xargs -0 -n Quantity -I {} echo {}
find Path -type d -name Regex -exec rm -r -f {} \;
find Path -name Regex -exec grep -l Regex {} +
wc -l
find Path -maxdepth Quantity -print
cpio -p -a -m -V -d Regex
find Path -name Regex
rsync -u -r --delete File File
find Path -uid Regex -uid Regex -type f
find Path -delete
mktemp Regex
find Path -user Regex -name Regex
cd -P Directory
find Path Path -name Regex -type f -exec chmod Permission {} \;
find Path -name Regex
find Path -type d -name Regex
sort
tail -n +Quantity
xargs -I {} echo Regex {}
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path Path -size +Size -mtime Timespan -ls
find Path Path
ls -l -R File
tee File
find Path -mtime -Timespan
grep Regex File
sort -u
wc -l
ls
tee File
find Path -name Regex
find Path Path -name Regex
mount -o loop Regex Regex
ls -1 -b
tr Regex Regex
mount Regex -o remount,ro
which Regex
find Path -exec echo {} \;
find Path -user Regex -perm Permission
find Path -mtime +Timespan -mtime -Timespan
ssh Regex -X
find Path -type d -name Regex
find Path -type f -name Regex -exec rm -f {} \;
find Path -maxdepth Quantity -not -samefile Regex
find Path -name Regex -exec rm {} \;
md5sum File
find Path -maxdepth Quantity -type d ! -name Regex
cat -v -e File
find Path ! -group Regex -printf "%p:%g\n"
find Path -size Size
rm -r -f File
find Path -type f -print -or -type d -prune
find Path -type f \( -exec grep -q Regex {} \; -or -print \)
find Path -type f \( -iname Regex -not -perm -Permission \)
find Path -iname Regex
find Path -name Regex -exec rm -R {} \;
find Path -mindepth Quantity -type f
mkdir Directory
find Path -path Regex -prune -or -print
find Path -name Regex -fprint File
find Path -type f -name Regex -size +Size -exec rm -f {} \;
tree -a -f
find Path -mindepth Quantity -maxdepth Quantity -type d
grep Regex
xargs -n Quantity -I {} cp -i File {}
find Path -mindepth Quantity -print0
xargs -0 -I {} mv {} File
find Path -name Regex
find Path -type f
join -o 1.2,1.3,2.4,2.5,1.4 <( cat -n File ) <( cat -n File )
find Path -name Regex
xargs -I {} rm {}
find Path -lname Regex
find Path -size -Size
find Path -name Regex -mmin -Quantity
find Path -type f -iregex Regex -or -iregex Regex
find Path -perm -Permission
find Path -name Regex -atime +Timespan -print
find Path -amin -Quantity
find Path -type f -print
xargs -I {} grep -i -l Regex {}
history
cut -d Regex -f Number
sed Program
find Path
awk Program
find Path -mtime +Timespan
wc -l
scp -c blowfish -r File File
mktemp --tmpdir Directory
chown -R Regex File
find Path
xargs -I {} cat {}
find Path -name Regex -exec rename Regex {} \;
find Path -name Regex
xargs -I {} rm -r -f {}
find Path -name Regex -exec rm {} \;
find Path -atime +Timespan -ok rm {} \;
find Path -ignore_readdir_race -lname Regex -exec touch -c {} \;
find Path -perm Permission -print
find Path -atime +Timespan
find Path -depth -name Regex -type f -delete
pstree -a -A -p $( ps -e -j -H
awk -v Program Program )
find Path -depth -print
cpio -o -O Regex
find Path -mtime -Timespan
find Path -type d -exec chmod Permission {} \;
find Path -exec chmod Permission {} \;
find Path -perm Permission
find Path ! Path
rsync -a -v --copy-dirlinks --delete File File
ls -F -l -t -r File
find Path -type f -iname Regex
wc -l
find Path -exec ls -l {} \;
find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex
find Path -type f -mtime +Timespan
find Path -type f -printf "%f\n"
su -l
diff -q -r File File
sort
find Path -maxdepth Quantity -type f
find Path -perm +Permission
find Path -type f -mtime -Timespan
find -x Path -type f -print0
rm -r File File File File File File
find Path -name Regex
find Path -type f -print
xargs -I {} grep -l -i Regex {}
mount -t vboxsf Regex Regex
grep Regex File
mkdir Directory
echo Regex
sed -e Program
sed -e Program
ping -c Quantity Regex
sed Program
find Path -type f -mtime +Timespan -exec rm {} \;
find Path -iname Regex -exec md5sum {} \;
find Path -type f \( -name Regex -or -name Regex \) -print
cat File
sed Program
wc -l
mount -o ro,remount Regex Regex
find Path -size +Size -exec rm -r -f {} \;
find Path -type f -name Regex
find Path -size +Size -ls
find Path -regextype posix-egrep -regex Regex
xargs -n Quantity -I {} ls {}
find Path -type d
xargs -I {} chmod Permission {}
cat File
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -xdev -name Regex -print
find Path -type f \( -iname Regex -or -iname Regex \)
find Path -name Regex
find Path -path Regex
mv File $( date -d Regex +"%Y%m%d%H%M" )
find Path -type d -print
find Path -mtime +Timespan
set
find Path -L
find Path -name Regex -print0
xargs -0 -I {} grep -i -H Regex {}
groups Regex
sed Program
grep -E -v Regex
rsync --blocking-io File File File File
seq Number
sed Program
find Path -print0
grep -e Regex Regex
cut -d Regex --complement -s -f Number
find Path -maxdepth Quantity -name Regex
find Path -name Regex
join -j Regex <( sort -k Number File ) <( sort -k Number File )
which Regex
ln --symbolic --interactive File
split -n Quantity File
find Path -perm -Permission
find Path -mindepth Quantity -maxdepth Quantity -type d -mtime -Timespan
find Path -mindepth Quantity -maxdepth Quantity -type d
find Path -name Regex -ls
find Path -print
find Path -name Regex
find Path -type d
sed -e Program -e Program
grep -v Regex
awk Program
xargs -I {} chgrp {}
cal
awk Program Program Program
cat File
gunzip
find Path -type f -name Regex
find Path $( pwd ) -name Regex -ctime +Timespan -execdir rm -f {} \;
find Path -type f -iname Regex
awk Program Program
find Path -empty
find Path -type f
find Path -type f -size Size
find Path -type f -exec scp {} File \;
find Path -maxdepth Quantity -type d -print
xargs -I {} echo Regex {}
find Path -user Regex
ps
grep -E Regex
tr -s Regex
cut -d Regex -f Number
find Path -mindepth Quantity -type d -print0
xargs -0 -I {} chmod -R Permission {}
find Path -name Regex -exec du -k {} \;
awk Program
mktemp -d $( dirname Regex )
which Regex
find Path -iregex Regex ! -type d -size +Size
find Path -perm Permission
head
echo Regex
rev
find Path Path -maxdepth Quantity -type f
date +%a
tr Regex Regex
find Path -name Regex ! -name Regex -type d -print
cat File
sort
uniq -c
sort -n -r
awk Program
find Path -iname Regex
grep -v Regex
mount Regex Regex -t ext4
find Path -type f
comm -1 -2 File File
find Path -name Regex -print
find Path -type f -name Regex ! -path Regex ! -path Regex ! -path Regex
find Path -name Regex
find Path -type f
watch -n Quantity
find Path -type f
grep -w -v -f File Regex
echo Regex
awk Program
find Path -print
find Path -name Regex -exec grep --color -aHn Regex {} \;
find Path -type f -printf "%s %p\n"
sort -n -r
head -n Quantity
sed -r Program
find Path -perm Permission
find Path -type f -not -name Regex
find Path -type f -iname Regex -ls
ln -s File Regex
find Path -maxdepth Quantity -mindepth Quantity -type d
ssh -i File -T -N -L Regex Regex
cd Directory
find Path -mindepth Quantity -type d
xargs -I {} chmod Permission {}
read -r -s -p Regex -n Quantity Regex
ssh -n Regex touch File
find Path -type f -atime +Timespan -print
find -L Path -name Regex -print0
xargs -0 -r -n Quantity -I {} rm {}
shopt -p dotglob
read
read Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex Regex
ping Regex
find Path -name Regex -type d
df -P File
awk Program
cat File File
sort -t Regex -k Number
watch -n Quantity wget -q -O File Regex
find Path -iname Regex -type f -exec sed -i Program File {} +
diff <( sort -n File ) <( sort -n File )
find Path -name Regex -print
find Path -type f -regex Regex -exec rm -r -f {} \;
find Path -name Regex
kill - Regex Regex Regex Regex
rsync -a -v -z --progress File File
chown Regex File
cp --parents File File File
find Path -atime +Timespan
find Path -name Regex
date +%Y:%m:%d -d Regex
find Path -nouser \( -fstype jfs -or -fstype jfs2 \) -ls
find Path -type f -size Size -exec ls -l {} \;
find Path -type f -exec grep Regex {} \; -print
cat File
xargs -I {} mkdir {}
find Path -iname Regex
sort -r
rm -r -f $( find Path -type d -name Regex )
find -L Path
find Path -name Regex
find Path -type f -name Regex -exec wc -c {} \;
awk Program
find Path -type d -empty
find Path -type f -exec grep Regex {} File +
find Path -type f -perm Permission -exec chmod Permission {} \;
set Regex Regex $( pwd )
uname -r
sed Program
tac File
grep -m Quantity -o -P Regex
find Path -inum Quantity -exec rm {} \;
echo -e -n Regex Regex $( md5sum File ) Regex
find Path -mmin -Quantity -type f
xargs -I {} ls -l {}
sleep Timespan
find Path -name Regex -execdir pwd \;
apropos Regex Regex Regex
find Path -exec wc -l {} \;
chown Regex File
split -l Quantity File Regex
mktemp
watch ls -l
zcat Regex
tar File
find Path -name Regex -exec ls -l {} \;
find Path -amin Quantity
find Path -type f
xargs -I {} grep Regex {}
bash
tee File
find Path \( -newer File -or -user Regex \) -print
find Path -type f
find Path -name Regex
join -v Quantity <( sort File ) <( sort File )
find Path -name Regex
nl -b a -n ln File
grep -C Quantity Regex
read -r -s -p Regex -n Quantity -t Quantity
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
find Path -name Regex -type f
info Regex --index-search Regex
find Path -type d -name Regex -ls
tee File
find Path -name Regex
echo $( comm -1 -2 <( echo Regex
fold -w Quantity
sort
uniq ) <( echo Regex
fold -w Quantity
sort
uniq )
tr -d Regex )
less -p Regex File
yes
cp File File
find Path -name Regex -type d
find Path -mindepth Quantity -mtime Timespan -exec rm -r -f {} \;
echo Regex
xargs -I {} touch {}
touch File
gzip $( find Path ! -name Regex -print )
find Path -name Regex -type f -exec grep -l Regex {} \;
xargs -I {} rm -f {}
find Path -name Regex
grep Regex
xargs -i -I {} cp -p {} File {}
echo Regex Regex Regex
xargs -n Quantity -I {} cp File {}
find Path -mmin -Quantity
find Path -prune -empty -type d
find Path -type l -name Regex -exec ls -l {} \;
mktemp -d --tmpdir Directory
mkdir -p Directory Directory
cat File
column -c Quantity
find Path -mtime Timespan
find Path -name Regex -type f -exec chmod Permission {} \;
find Path -type f
wc -l
split -l Quantity File
find Path -name Regex -print0
xargs -0 -I {} wc -w {}
awk Program
basename Regex
find Path -type f -name Regex
tee File
find Path -mtime Timespan
find Path -iname Regex
find Path -name Regex
yes Regex
rm -r File
find Path -name Regex -print
cpio -p -a -v -d Regex
find Path -iname Regex -not -iname Regex
mktemp -d Regex
find Path -name Regex
echo Regex
wc -c
find Path -name Regex -exec rm {} \;
find Path -type d -maxdepth Quantity -mindepth Quantity -exec basename {} \;
find Path -group Regex
find Path Path -f -atime +Timespan
ssh -M -f -N -o ControlPath="$SSHSOCKET" Regex
find Path -iname Regex
mkdir Directory
find Path -path Regex -prune -or -name Regex -print
find Path Path
find Path -type f -name Regex
xargs -I {} tar -c -v -f File {}
echo $( dirname Regex )
find Path -iname Regex -exec bash -c rm -r -f {} \;
ifconfig Regex
grep Regex
find Path -type f -not -name Regex -print
find Path -type f -iwholename Regex -exec grep -H Regex {} \;
echo $( date ) $( hostname )
find Path -name Regex -exec basename {} \;
find Path -type f -exec rm {} +
find Path -type f
grep -i Regex
sort
read -n Quantity
find Path -type f -exec sed -i Program {} +
ssh -i File Regex
chmod Permission $( find Path -type f )
find Path -name Regex -printf '%h\n'
sort -u
find Path -type f -name Regex
find Path -exec grep Regex {} \;
find Path -inum Quantity -print
find Path \( -name Regex -or -name Regex \) -print
find Path -name Regex -ok rm {} \;
rsync -a -v -v File File
find Path -user Regex
dig -x Regex
grep Regex
cut -d Regex -f Number
grep Regex
cut -f Number
ssh-keygen -f File
ping Regex -c Quantity
grep -E -o Regex
cut -f Number -d Regex
file File
find Path -maxdepth Quantity -name Regex
which Regex
find Path -type f -print
mv File $( echo Regex
tr Regex Regex )
find Path -print
basename $( pwd )
find Path -name Regex -print
xargs -I {} grep Regex {}
find Path -mtime +Timespan -mtime -Timespan
find Path -user Regex -iname Regex
head
echo Regex
rev
cut -b Number
rev
less $( find Path -maxdepth Quantity -type f -daystart -mtime -Timespan )
find Path -type f
sed Program
xargs -I {} ls File {}
awk Program
sort
tail - Quantity
find Path -type f -name Regex
awk -F Regex Program
sort -u
df -P -h
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
ping -c Quantity Regex
find Path -name Regex -print0
xargs -p -I {} rm {}
grep --include Regex -n -R -H -I Regex File
find Path -path Regex -print
find Path -type f -exec chmod Permission {} \;
ifconfig
awk -F Regex Program
find Path -mmin +Quantity
grep Regex $( uname -r )
rm -r -f File File File File File File File File
find Path -type f -printf "%f %s\n"
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
find Path -type d
sed -e Program
awk Program
xargs -I {} chgrp {}
find Path -type d -name Regex
shopt -s lithist
find -E Path -regex Regex
find Path
sed Program
rev
cut -d Regex -f Number
rev
cut -c Number
find Path -iname Regex
find Path -name Regex -exec cp {} File \;
du -h -s -x File
sort -r -h
head - Quantity
find Path -newermt Regex ! -newermt Regex -ls
cat File
wc $( find
grep Regex )
find Path -name Regex -perm Permission -print
find Path -type f -print0
xargs -0 -I {} du {}
sort -n
tail - Quantity
cut -f Number
xargs -I {} du -s -h {}
find Path -type f -print0
xargs -0 -I {} grep Regex {}
find Path Path -name Regex -type f
xargs -i -I {} rm {} {}
find Path -mtime +Timespan -exec rm {} \;
find Path -mtime Timespan
find Path -type f
find Path -type d -exec chmod Permission File \;
read -t Quantity -p Regex
find Path -name Regex -type d
find Path -maxdepth Quantity -name Regex
find Path
cp -r File File
find Path -size -Size
find Path -type f
ln -s -f File Regex
find Path -maxdepth Quantity -name Regex
find Path -name Regex -printf "found\n"
find Path -type d -name Regex -exec rm -r {} \;
find Path -printf '"%h/%f" '
ping -n Regex Regex
find Path
find Path -name Regex -exec rm {} \;
tee File
chown Regex File
find Path -fprint File
find Path -type f -name Regex -print
find Path -type f -perm +Permission -print
rsync -a -v File File
dirname $( mktemp -u -t Regex )
find Path -type d -ctime Timespan
tac File
awk Program
tac
set Regex Regex Regex Regex
find Path -type f -name Regex
diff -q <( sort File
uniq ) <( sort File
uniq )
find Path -name Regex -ls
find Path -xdev -name Regex -type f -mtime +Timespan
xargs -I {} rm {}
basename Regex Regex
find Path -name Regex -print0
find Path -mtime Timespan
find Path -name Regex -prune -or -depth Path -print
find Path -name Regex -print
history
sed -n Program
find Path -type f -atime Timespan
split -a Quantity -d -l Quantity File Regex
find Path -name Regex -exec grep -l -R Regex {} \;
xargs -I {} grep -L Regex {}
rsync -r -a -v -e File File File
sort
uniq -c
find Path -inum Quantity -print
find Path -name Regex -print0
xargs -0
pushd Directory
find Path -perm -Permission -exec chmod Permission {} \;
find Path -atime Timespan
yes
awk Program
more
find Path -maxdepth Quantity -type f
md5sum
sort File
rev
uniq -f Quantity
rev
read -d Regex -s -n Quantity
find Path -name Regex
cat File File
sort
uniq -u
curl Regex Regex
bash
find Path -path Regex -print
find Path -name Regex -print
find Path -name Regex -not \( -path Regex -or -path Regex \)
find Path -type f -exec chmod Permission {} \;
find Path -name Regex
rename -v -n Regex
find Path -name Regex
xargs -I {} wc -l {}
find Path -name Regex
grep -r -n -w $( pwd ) -e Regex
find Path -name Regex
find Path $( pwd ) -name Regex -type f
find Path -name Regex -print
find Path -type f -exec gzip -9 {} \; -exec mv File {} \;
find Path -name Regex
file $( which Regex )
find Path ! -name Regex -print
find Path -name Regex -print0
xargs -r -0 -I {} grep -L Regex {}
echo Regex
tee >( wc )
find Path -name Regex -type d
find Path -mindepth Quantity -maxdepth Quantity -name Regex
find Path -exec ls -l {} \;
find Path -type f -wholename Regex
find Path -user Regex -type f -name Regex
ln -s $( find Path -name Regex ) Regex
find Path -daystart -mtime -Timespan
find Path -type f
xargs -I {} head -v -n Quantity {}
grep -B Quantity -A Quantity -e Regex
find -E Path -type f -iregex Regex
grep -r Regex File
tee >( wc -l )
chgrp -R Regex File
ssh -o "StrictHostKeyChecking no" -i File Regex command
find Path -newer File
rsync -a -v -l -z -p File File
find Path -type d -iname Regex -ls
find Path \( -name Regex -or -name Regex -or -name Regex \) -exec rm {} \;
find Path -type f -mtime +Timespan -print0
xargs -0 -r -I {} rm -f {}
find Path -xdev -size +Size -exec ls -l {} \;
rename Regex Regex
find Path -name Regex
grep Regex
xargs -I {} rm {}
find Path -name Regex -exec grep -E -l Regex {} \;
find Path -type f -name Regex
find Path -mmin Quantity
df File
awk Program
source <( grep Regex File
sed Program )
yes Regex
head - Quantity
find Path -type f -perm Permission -exec ls -l {} \;
find Path -name Regex
find Path -maxdepth Quantity -name Regex
find Path -name Regex -print0
xargs -0 -I {} rm File File File File File {}
xargs -0 -I {} rm {}
find Path
ls -a
tee File
tr -d Regex
fold -w Quantity
head -n Quantity
seq -s Regex Number Number
find Path -type d
find Path -inum Quantity -exec mv {} File \;
find Path -name Regex
echo Regex
cut -d Regex -f Number
diff File File
grep Regex
wc -l
join File
awk Program
find Path -user Regex -perm -Permission -print
find Path -lname Regex
echo $( yes Regex
head -n Quantity )
tail - Quantity File
more
split -l Quantity File
find Path -name Regex
find Path -iname Regex -exec md5sum {} \;
mkdir Directory
find Path -regex Regex
find Path -type f -group Regex
find Path -maxdepth Quantity -mindepth Quantity -type d -exec echo Regex \;
find Path -name Regex -print
find Path -daystart -maxdepth Quantity -mmin +Quantity -type f -name Regex Path Path -f {} Path
find Path -name Regex -print0
xargs -0 -I {} rm {}
find Path -mmin -Quantity -type f -ls
find Path -type d -name Regex
tr Regex Regex
sed Program
find Path -name Regex
find Path -type f -name Regex
tree -F Directory
sed -r Program
find Path -user Regex -name Regex
grep -b -o Regex File
less
find Path -name Regex
mv File File
find Path -size -Size
df -H --total File
grep -r Regex File
ssh-keygen -H -f File
find Path -newermt Regex
find Path
man Regex
mount -o remount,ro Regex
dirname $( readlink File )
find Path -name Regex -print
find Path -type f -name Regex -ctime -Timespan
cat File tee File
find Path -type f -iname Regex
find Path Path
grep -P Regex
find Path -name Regex
find Path ! -iname Regex Path
find Path -mmin -Quantity \( ! -regex Regex \)
zcat Regex
grep -a -i Regex
find Path -name Regex
find Path -type f ! -name Regex -mtime -Timespan
echo Regex
tee
grep --exclude Regex -r -n -w Regex -e Regex
find Path -maxdepth Quantity -type f -name Regex -printf '%f\0'
find Path -type f
wc -l
df File
find Path -fstype ext3 -name Regex
zcat Regex
wc -l
find Path -name Regex -prune -regex Regex
hostname $( cat File )
env
grep Regex
comm -1 -2 <( ls File
sort ) <( ls File
sort )
find Path -type f -ctime -Timespan
tail -n Quantity
find Path -type f -name Regex -size +Size -exec du -h {} \;
grep -v Regex
history
awk Program
awk Program
sort
uniq -c
sort -n -r
head
ps -e -f
tee File
grep Regex
grep -v Regex
wc -l
chown -R Regex File
find Path -size +Size -exec rm -r -f {} \;
find Path -path Regex -prune -or -type f -print
echo Regex
tee -a File
find Path -type f
xargs -I {} file {}
comm -1 -2 <( cut -d Regex -f Number File
uniq ) <( cut -d Regex -f Number File
uniq )
find Path -name Regex -type d -exec rm -r -f {} \;
hostname -I
awk Program
cut -f Number -d Regex
read -p Regex
rsync -a -v --progress --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex --exclude Regex File File
find Path -name Regex -print0
xargs -0 -I {} cat {}
wc -l
find Path -type f -print -delete
find Path Path -name Regex
find Path Path -size +Size -mtime Timespan -print0
xargs -0 -I {} ls -l {}
sort File File
split -d -l Quantity File Regex
echo Regex
sed Program
rev
cut -d Regex -f Number
rev
cut -c Number
chown -R Regex File
cat File
tar -x -z
zcat Regex
grep -o Regex
sed Program
find Path -type f -perm Permission -print Path
sleep Timespan
sleep Timespan
find Path -type d
tr Regex Regex
find Path -type f
find Path -user Regex -perm -Permission -print
find Path -type d -exec ls -d -l -r -t {} \;
ls -d -1 File
find Path -print -exec touch {} \;
find Path -name Regex
grep -v Regex
find Path -name Regex -exec tar -u -f File {} \;
ls $( readlink File )
echo -e $( )
grep -v $( date +%Y-%m-%d )
tail - Quantity
dig Regex Regex a
find Path -iname Regex \( -type d -or -type f \) -mtime -Timespan
find Path -type f -print0
xargs -0 -I {} rm {}
cat File -n
grep $( whoami )
cut -f Number
find Path -type f -print0
xargs -0 -I {} grep -i -l Regex {}
find Path -size +Size -ok mv {} File File \;
mkdir -p $( dirname Regex )
find Path -size +Size
find Path -size +Size -ok mv {} File File \;
find Path -regex Regex
find Path -name Regex -mtime Timespan -type f -exec awk Program {} \;
find Path -name Regex -print
more File
grep $( hostname )
awk Program
find Path -name Regex
rmdir --ignore-fail-on-non-empty Directory
dirname $( readlink -f File )
find Path -type f -exec sed -i Program {} \;
find Path -type d -depth
cp -v File File
find Path -type f \( -name Regex -or -name Regex -or -name Regex \)
find Path -type f -size -Size -exec ls -l {} \;
od -t x1 -A n File
tr -d Regex
find Path -type f -mtime +Timespan -exec rm -f {} \;
find Path \( -type d ! -name Regex -prune \) -or \( -mtime -Timespan -print \)
awk Program Program
column -t
find Path -type f -mtime +Timespan -exec rm {} \;
pstree -A -s Regex
find Path -name Regex -mtime +Timespan -print0
xargs -0 -I {} rm {}
rm $( find Path -name Regex ) -r -f
diff -q -r File File
cut -d Regex -f Number
xargs -I {} dirname {}
uniq
find Path -name Regex -mtime Timespan
find Path -mtime +Timespan -exec rm {} \;
chgrp Regex File
tac File
sort -u -t Regex -r -k Number
tac
find Path -name Regex -print0
whoami
find Path ! -newer File
find Path -size -Size
find Path -type f -name Regex ! -name Regex -print
find Path -name Regex
xargs -I {} grep -l Regex {}
which -a Regex
xargs -I {} file -L {}
find Path -size +Size
find Path -maxdepth Quantity -type d -exec chmod -R Permission {} \;
find Path -size +Size -size -Size
find Path -name Regex -maxdepth Quantity -exec mv {} File +
cal
awk Program
find Path -name Regex
basename Regex
head - Quantity File
tr -s Regex Regex
nl -n ln
grep Regex
cut -f Number
dig Regex Regex dragon-architect.com
awk Program Program
find Path ! -name Regex
find Path -type d
mkdir -p Directory
find Path -name Regex
grep -f <( sed Program File )
find Path -maxdepth Quantity -empty -not -name Regex
find Path -mtime +Timespan -execdir rm {} +
tree -p -u -g -f
find Path -iname Regex ! -size +Size
mkdir -p $( dirname Regex )
jobs -l
grep Regex
grep -v Regex
awk Program
find Path -type f -name Regex -exec md5sum {} +
awk Program
sort
md5sum
chown -R Regex File
ssh -N -i <( echo Regex ) -R Regex Regex
find Path -ctime -Timespan
find Path -maxdepth Quantity -mmin +Quantity -type f -name Regex -delete
find Path -type f ! -perm -Permission
df File
awk Program
find Path -name Regex -type d
comm -3 File File
sed Program
find Path -mtime -Timespan -mtime +Timespan
rsync -a -f Program -f Program -f Program File File
find Path -type d
sed -e Program
xargs -I {} mkdir -p {}
ln --force --target-directory Directory File
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
tee
find Path -name Regex
xargs -I {} rm {}
man Regex
find Path -type f -name Regex -exec grep -E Regex {} File \;
find Path -name Regex -type f -print0
xargs -0 -I {} rm -f {}
echo Regex
read Regex
find Path -iname Regex
xargs -I {} grep Regex {}
find Path -type f
awk -F Regex Program
sh
find Path -type f -mtime -Timespan -exec cp {} File \;
yes Regex
rm -i -r File File File
find Path -type f -name Regex
xargs -I {} grep Regex {}
find Path -mtime -Timespan -name Regex -print
find Path -mindepth Quantity -prune -empty
find Path -name Regex
xargs -I {} rm {}
find Path -type f -links Quantity -print
find Path -type d -print
wc -l
chown Regex File
find Path -type d -name Regex
cat File
xargs -n Quantity
find Path -L
find Path -name Regex -print
find Path -user Regex
grep --include Regex -r -n -w Regex -e Regex
find Path -nouser -or -nogroup
find Path -type d -name Regex -prune -or -print
cpio -d -u -m -p Regex
find Path -type f -name Regex -print0
xargs -0 -I {} grep -l Regex {}
split --suffix-length Quantity --lines Quantity File
find Path -name Regex
find Path ! -type d Path Path
cat File
tr -d -c Regex
fold -w Quantity
find Path -name Regex
find Path -type d -name Regex -prune -or -name Regex
find Path -iname Regex -exec du -b {} +
find Path -type f -print
find
xargs -I {} ls {}
find Path -name Regex
mkdir -p Directory
mount -t vfat -o rw,auto,user,fmask=0000,dmask=0000 Regex Regex
find Path -name Regex -prune
find Path -name Regex
grep -v Regex
xargs -I {} grep -H -n Regex {} File {}
df File
awk Program
find Path -type f -name Regex
crontab -l
sed Program
crontab File
find Path -name Regex -print
read -a Regex
find Path -perm -Permission
find Path -perm Permission -iname Regex
find Path -name Regex -print -or -name Regex
find Path -type d -mtime +Timespan -exec rm -r -f {} \;
ls -1
tr Regex Regex
find Path -maxdepth Quantity -mindepth Quantity -type f -iname Regex -exec rename -n Regex {} +
find Path -cmin Quantity -print
find Path -iname Regex
find Path -name Regex
dirname $( readlink -f File )
readlink $( pwd )
find Path -atime -Timespan
finger $( whoami )
find Path -type f -exec ls -a -l {} \;
sort -n -r -k Number
head -n Quantity
find Path -maxdepth Quantity -name Regex -size -Size
xargs -I {} rm -f {}
find Path -name Regex -exec grep -l Regex {} \;
find Path -name Regex -print0
xargs -0 -n Quantity -I {} dirname {}
sort
uniq
ping Regex -I Regex -c Quantity -w Timespan
find Path -mtime Timespan
find Path -mmin -Quantity
find Path -type f -exec sed -i Program {} \;
paste File
sed -e Program
column -t -s Regex
cat File
cut -c Number
echo Regex
tr Regex Regex
grep -v Regex
tr Regex Regex
find Path -perm Permission
find Path -name Regex -print
grep -r -H Regex File
find Path -type f -maxdepth Quantity
more
echo Regex
cut -d Regex -f Number
ln -s -f -n File Regex
find Path -lname Regex
find Path -exec grep Regex {} +
source File
find Path -maxdepth Quantity -cmin -Quantity -type f
find Path
comm -3 <( sort File ) <( sort File )
set
grep Regex
find Path -name Regex -exec rm {} \;
find Path -mtime +Timespan -type f -size +Size -ls
find Path \( -name Regex -and -prune \) -or -print
find Path -name Regex
grep Regex
find Path -ctime -Timespan
echo Regex Regex $( whoami ) Regex Regex Regex Regex Regex Regex Regex $( which Regex )
file File
find
xargs
find Path -exec grep -i Regex {} \;
crontab -u Regex -l
sed Program
crontab -u Regex File
find Path -type f -perm Permission -exec chmod Permission {} \;
find Path -type d -mtime -Timespan -exec mv -t Directory {} +
chown Regex File File
find Path -user Regex -iname Regex
ls
more
find Path -maxdepth Quantity -type f -newermt Regex ! -newermt Regex -delete
find Path -daystart -ctime -Timespan
find Path -name Regex
find Path -type f -atime +Timespan
find Path -name Regex -print0
xargs -0 -n Quantity -I {} mv {} File
ls
grep Regex
cat -n
find Path -type f -iname Regex
wc -l
chown -v Regex File
find Path -name Regex -prune -or \( -type f -mtime Timespan -print0 \)
find Path -ls
top
find Path -name Regex
xargs -I {} tar -c -z -v -f File {}
find Path -name Regex
find Path -type f -name Regex
find Path -name Regex
ls -1
tr Regex Regex
sed Program
awk -F Regex Program Program
column -t -s Regex
find Path -type f -exec sed Program {} \;
grep Regex
find Path
crontab -l
sed Program
crontab File
df -k File
find Path -name Regex
find Path -xdev -name Regex
find Path -name Regex -mtime +Timespan -print0
xargs -0 -P Quantity -I {} bzip2 {}
find Path -type f -print0
xargs -0 -I {} chmod Permission {}
tail - Quantity File
tee -a File
find Path
grep Regex
find Path -type d
find Path -name Regex -print0
xargs -0 -p -I {} rm {}
sed Program
find Path -empty
shopt -s globstar
find Path -not \( -path Regex -prune \) -not \( -path Regex -prune \) -type f
find -depth Path -type d -name Regex -exec rm -r -f File \;
find Path -name Regex
xargs -I {} rm {}
find Path -type f -regex Regex
od -t x1 --skip-bytes Size --read-bytes Size File
head - Quantity
awk Program
mv File File
find Path -mindepth Quantity -maxdepth Quantity -type d
wc -l
rm -r -f $( pwd -P )
find Path
xargs -I {} md5sum {}
find Path -type f -name Regex -exec cp {} File \;
ls -d -1 File
cat -n
find Path -name Regex -exec awk Program {} \;
cat $( find Path -name Regex )
wc -l
find Path -path Regex -prune -or -name Regex -print
find Path -name Regex -ok rm {} \;
zcat Regex
awk -v Program Program
yes
head -n Quantity
awk Program
find Path -exec grep -H Regex {} \;
find Path ! -name Regex -exec gzip {} \;
gzip --help
less
find Path -type d -print0
xargs -0 -I {} chmod Permission {}
find Path -type f -iname Regex -print0
find Path -name Regex -print
find Path -perm Permission
find Path
paste -s -d File
find Path -name Regex -not -path Regex
find Path -user Regex
find Path -type d -links Quantity
find Path -type f
read -s -p Regex Regex
find Path -path Regex -prune -or -name Regex -print
find Path -size +Size
find Path -name Regex
find Path -maxdepth Quantity -type f -name Regex
sed -e Program
sort
xargs -I {} mv File File {}
find Path -name Regex
df File -B Size
tail - Quantity
awk Program
cut -d Regex -f Number
find Path -name Regex -newer File -print
rsync -r -a -v -z File File
groups Regex
tr Regex Regex
grep -E -v Regex
find Path -type f -exec file {} \;
yes
basename Regex
ls -d File
sed Program
find Path -empty -exec ls {} \;
find Path -printf '%l\n'
find Path Path -f -amin Quantity
find Path -type d -maxdepth Quantity
zcat Regex
sed -n Program
find Path -name Regex -exec diff {} File \;
find Path -type f -exec chgrp Regex {} \;
find Path -ipath Regex
head -n Quantity
find Path -type d
chmod Permission File
ls -d File
cut -f Number -d Regex
find Path
file -i File
find Path -type f -name Regex
sed Program
sed Program
xargs -I {} cp -v {} File
find Path -name Regex -ls
find Path -user Regex -print
find Path -regex Regex
find Path -xdev -type f -size +Size -name Regex -exec gzip {} \; -exec echo {} \;
find Path -name Regex -type d
df --total -B Size
tail -n Quantity
sed Program File
echo -e Regex
tee -a File
find Path -name Regex -prune -or \( ! -name Regex -print0 \)
cpio -p -m -d -0 Regex
find Path -type f
xargs -I {} grep Regex {}
man Regex
less -p Regex
dig Regex -f File
uniq
find Path -nouser -exec ls -l {} \; -ok chown Regex {} \;
find Path -name Regex -exec ls -l {} \;
find Path -name Regex -print
grep --help
grep Regex
find Path -name Regex
find Path -user Regex -type f -name Regex
find Path -type l
mkdir -p -- $( dirname -- Regex )
ifconfig
find Path -iname Regex
find Path -atime +Timespan
find Path -type d -name Regex
find Path -name Regex
xargs -I {} grep -n Regex {}
find Path -type f -name Regex -print
find Path $( pwd ) -name Regex -exec echo $( dirname {} ) \;
history
more
echo $( clear )
find Path -type f -mtime +Timespan
tee File
xargs -I {} -P Quantity compress {}
ping -c Quantity Regex
awk Program
pwd
xargs -I {} basename {}
find Path -type f -exec grep -H -n Regex {} +
find Path -type f -print0
xargs -0 -I {} wc -l {}
ln -s -f -v File Regex
find Path -inum Quantity -exec mv {} File \;
source <( grep -v Regex File )
find Path -name Regex
find Path -size +Size
cat $( find Path -name Regex -print )
rsync -a -z -P -e ssh -p Regex File File
find Path -cmin -Quantity
find Path -name Regex
xargs -I {} dirname {}
find Path -name Regex -exec sed -s --in-place Regex -e Program {} \;
find Path -type d
find Path -print0
find Path -type d -exec chmod Permission {} \;
find Path -name Regex
find Path -type f
cat File
xargs -I {} dirname {}
sort -u
xargs -I {} mkdir -p {}
find Path -empty -type d -delete
find Path -type f -name Regex -exec grep -B Quantity -A Quantity Regex {} \;
rev File
awk Program
find Path
sort -f
uniq -i -d
echo Regex
sed Program
find Path -name Regex -mtime -Timespan
dig -x Regex
awk Program
find Path -inum Quantity -exec rm -i {} \;
cp -a File File File
find Path -name Regex
xargs -I {} rm {}
find Path -path Regex -ls
find Path -name Regex -exec cat {} \;
mkdir -p -v Directory
find Path -mtime +Timespan -exec rm {} \;
find Path -mtime Timespan -not \( -name Regex -or -regex Regex -or -regex Regex \)
chown -R Regex File
find Path -mtime Timespan
find Path -ls
sort -n
awk Program
find Path -type d
sort
find Path -type f ! -regex Regex -delete
find Path -user Regex
find Path -maxdepth Quantity -type f Path
find Path -name Regex
xargs -I {} grep -L Regex {}
find Path -type f ! -perm -Permission
history
awk Program
sort
uniq -c
sort -r -n
head
tr -d Regex
zcat Regex
tail -n +Quantity
head - Quantity
find Path ! -perm Permission
find Path -name Regex -type f -exec grep -i Regex {} \;
find Path -iname Regex -exec grep Regex {} \; -print
sed -r Program
find Path -iname Regex -exec rm {} \;
echo Regex
xargs -n Quantity -I {} cp File {}
md5sum File
sed -e Program
groups Regex
cat File
find Path -type f -iregex Regex ! -name Regex -print0
find Path -type f -size +Size -print
find -L Path -type f -perm -Permission
hostname -f
rsync -a -H -v -z File File
find Path -name Regex -exec rm -r -f {} \;
chmod Permission $( find Path -type f -print )
find Path -type f -name Regex -exec sed -i Program {} \;
find Path -maxdepth Quantity -type d -print0
mkdir Directory
find Path ! Path -prune
find Path -type f -size +Size -printf "The %p file is greater than 500MB\n"
find
head
find Path ! -newermt Regex -type f -print0
xargs -0 -I {} rm {}
find Path -iname Regex -print0
xargs -0 -I {} ls -l {}
find Path -maxdepth Quantity -type f -print0
xargs -I {} rm -f {}
find Path -type d -name Regex
find Path -type d -maxdepth Quantity
yes
head -n Quantity
awk Program
find Path -type f -size +Size -exec du -h {} +
sort -h -r
find Path -type d -mindepth Quantity -print -exec chmod Permission File \;
find Path -type f -name Regex
find Path -type f
grep -v Regex File
wc
ls File
tee File File
find Path -name Regex -type f -delete
find Path -name Regex
find Path -maxdepth Quantity -type f ! -name Regex -exec ln -s {} Regex \;
hostname
gunzip Regex
find Path -name Regex -exec grep -P Regex {} \; -print
dirname $( readlink File )
echo Regex
grep -o Regex
wc -l
find Path -type f -exec grep Regex {} File +
find Path -type d -exec chmod Permission {} \;
find Path -type l -print
mkdir Directory
ifconfig
sed Program File
find Path -depth -empty -type d
find Path -maxdepth Quantity -mindepth Quantity -type d -printf '%f\n'
find Path ! -perm Permission
wc -l File
rsync -r -t -u -v File File
find Path -name Regex
xargs -I {} grep Regex {}
find Path -name Regex
grep -v Regex
find Path -maxdepth Quantity -name Regex -maxdepth Quantity
xargs -n Quantity -I {} rm {}
cat File
sed Program
sh
grep -v Regex
find Path -exec echo Regex \;
fold -w Quantity File
wc -l
find Path -iname Regex -exec mv {} File \;
find Path -name Regex
find Path -name Regex -execdir vim {} \;
find Path -type f -atime +Timespan
tac File
sed Program
tac
find Path -path Regex -prune -or -print
find Path -type f -newer File ! -newer File -exec rm {} \;
find Path -type d
find Path -iname Regex
find Path -name Regex -delete
find Path -name Regex -print
find Path -mtime Timespan
grep -v Regex
grep -v Regex
grep -v Regex
ifconfig Regex
sed -n Program
find Path -name Regex
find Path -mindepth Quantity -maxdepth Quantity -name Regex
echo Regex
uniq -c
find Path -type f -name Regex -print0
xargs -0 -I {} sed -i Regex Program {}
grep Regex File
more
find Path -version
cat $( which Regex )
find Path -perm -Permission
find Path -type f -name Regex -exec mv {} File \;
find Path -type d -iname Regex -ls
find Path -exec echo {} \;
find Path ! -perm Permission
find Path -mtime -Timespan
mount Regex -o remount,umask=000
find Path -name Regex -size +Size -print
cat File
grep Regex
find Path -type f -mtime Timespan -exec rm {} +
find Path -type f -exec grep -l Regex {} \;
find Path -perm Permission
find Path -type d -ls
head
tree -p -d
rev File
sort -k Number
rev
find Path -uid Regex -print
find Path -type f -name Regex -newer File -print
cat File
wc -c
find Path -name Regex
xargs -I {} mv {} File
mkdir -p Directory
find Path -type f -iregex Regex -mtime +Timespan -exec rm {} \;
find Path -path Regex
find Path -type d -name Regex -exec rm -r {} \;
find Path -type f
readlink -f File
tail -f Regex
grep --line-buffered Regex
read -t Quantity
find Path -type f -size +Size -exec ls -l -h {} \;
awk Program
rsync -r -v -v File File
find Path -name Regex -type f
xargs -I {} cat {}
wc -l
find Path ! \( -newer File -user Regex \) -print
find Path -type d -gid Regex
history Quantity
grep Regex
grep Regex
find Path -size -Size
find Path \( -type d -regex Regex -prune -false \) -or -type f -print0
find Path -type f \( -iname Regex -or -iname Regex -or -iname Regex -or -iname Regex \) -exec echo {} \;
find Path -path Regex -prune -or -not -name Regex -print
grep Regex
find Path -iname Regex -printf '%h\n'
sort -u
find Path -name Regex -exec rm -f {} \;
find Path -type f
find Path -type d
true
sleep Timespan
find Path -links -Quantity -print
find Path -type f -name Regex
chown Regex File
find Path -type f -size +Size -size -Size
find Path -mtime +Timespan -print
xargs -I {} rm {}
cat File
tr -s Regex
cut -d Regex -f Number
find Path -type f
sed -e Program
sed -e Program
sort -u
mkdir Directory
find Path -iname Regex -size +Size
find Path -printf "%i \n"
find Path -type f -name Regex -mtime +Timespan -size +Size
xargs -r -I {} cp -t Directory {}
echo -n Regex
md5
find Path -type f -empty
crontab -l
grep -v Regex
awk Program
find Path $( pwd ) -group Regex -exec find {} -type l -print \;
split -l Quantity File Regex
find Path -type f -printf '%TY-%Tm-%Td %TT   %p\n'
sort
$( echo Regex
tr Regex Regex )
find Path -type d
xargs -I {} chmod -v Permission {}
awk Program Program
column -t
find Path -type f -print0
find Path -user Regex -name Regex
scp -r -p File File
find Path -name Regex
ssh -S Path -O Regex Regex
echo $( pwd -P )
find Path -exec ls -l {} \;
ls -a -l -d $( which Regex )
find Path -name Regex -print
shopt -s dotglob
rmdir Directory
rename Regex Regex
find Path -type d -exec chmod Permission {} \;
set -e
chmod Permission $( ls -1 -a
grep -v Regex )
find Path -maxdepth Quantity -type d
awk -F Regex Program
fold File File
more
diff <( sort File ) <( sort File )
find Path -name Regex -exec echo Regex \;
find Path -regex Regex
find Path -type f -perm Permission -exec chmod Permission {} \;
top -u abc -d 30 -b -n 10
top -p $(pgrep -d',' http)
top -p "$(pgrep -d ',' java)"
top -p `pgrep process-name
tr "\\n" ","
sed 's/,$//'`
top -c -p $(pgrep -d',' -f string_to_match_in_cmd_line)
top -c
top -b -n1 -c
top -n 1
cp mymodule.ko /lib/modules/$(uname -r)/kernel/drivers/
cat /boot/config-`uname -r`
grep IP_MROUTE
cat /boot/config-`uname -r`
top -b -d2 -s1
sed -e '1,/USERNAME/d'
sed -e '1,/^$/d'
top -b -n 1 -u abc
awk 'NR>7 { sum += $9; } END { print sum; }'
top -b -d 5 -n 2
awk '$1 == "PID" {block_num++; next} block_num == 2 {sum += $9;} END {print sum}'
top -n 1
top -bn1
grep zombie
top -bn1
sed -n '/Cpu/p'
top -bn1
grep zombie
awk '{print $4" "$6" "$8" "$10}'
top -b -n1 -c
top -b -n1
grep processname
top -n1
sed 's/\(.*\)$/\1__CUSTOM_LINE_MARKER/g'
top -bn1
sed -n '/Cpu/p'
awk '{print $2}'
sed 's/..,//'
top -b -n1
head -8
tail -1
awk '{ printf "User: %s\nPID: %s\nCPU Usage: %s\nMEM Usage: %s\n", $2,$1,$9,$10 }'
top -b -n1 -c
awk '/PID *USER/{print;getline;print}'
top -b -n1 -c
grep -A 2 '^$'
top -u abc -d 30 -b -n 10
top -p $(pgrep -d',' http)
top -p "$(pgrep -d ',' java)"
top -p `pgrep process-name
tr "\\n" ","
sed 's/,$//'`
top -c -p $(pgrep -d',' -f string_to_match_in_cmd_line)
top -c
LINE=$(top -b -n 1
tail -n +8
head -n 1
tr -s ' ')
OUTPUT=`top -b -n 1
tail -n +8
head -n 1`
top –p $PID
top -b -p `pidof a.out`
top -b -p `pidof a.out` -n 100
top -p "$(pgrep --newest ProgramName)"
top -p "$(pgrep ProgramName
head -n 1)"
top -p $(ps aux
awk '/ProgramName/ && ! /awk/ { print $2; exit; }')
top -p "$(pgrep --oldest ProgramName)"
top -b -n 1
mail -s "any subject" your_email@domain.com
sudo cp mymodule.ko /lib/modules/$(uname -r)/kernel/drivers/
cat /boot/config-`uname -r`
grep IP_MROUTE
cat /boot/config-`uname -r`
find /lib/modules/`uname -r` -regex .*perf.*
grep “HIGHMEM” /boot/config-`uname -r`
cat /proc/2671/maps
grep `which tail`
view /boot/config-$(uname -r)
sudo lsusb -t
less
grep PROBES /boot/config-$(uname -r)
grep UTRACE /boot/config-$(uname -r)
grep ds1337 /lib/modules/`uname -r`/modules.alias
sudo lsusb -v
less
top -l 1
grep $app_name
top -l 1 -s 0 -stats mem -pid $PID
top -l 1 -s 0 -i 1 -stats vprvt -pid $PID
sed -i "s/\\\\\n//g" filename
set -e
perl -pi -e 'BEGIN { print "A new line" }' $(find . -name '*.py')
for a in `find . -name '*.py'` ; do cp "$a" "$a.cp" ; echo "Added line" > "$a" ; cat "$a.cp" >> "$a" ; rm "$a.cp" ; done
find . -name \*.py -print0
xargs -0 sed -i '1a Line of text here'
find . -name \*.py
xargs sed -i '1a Line of text here'
find ~ -type d -exec chmod +x {} \;
rename 's/(.*)$/new.$1/' original.filename
rename 's/^/new./' original.filename
nl -s prefix file.txt
cut -c7-
nl -s "prefix_" a.txt
cut -c7-
find /volume1/uploads -name "*.mkv" -exec mv \{\} \{\}.avi \;
cat <(crontab -l) <(echo "1 2 3 4 5 scripty.sh")
crontab -
ping google.com
xargs -L 1 -I '{}' date '+%c: {}'
ping host
perl -nle 'print scalar(localtime), " ", $_'
nl -ba infile
nl -ba long-file \
echo "$string"
nl -ba -s') '
crontab -l -u user
cat - filename
crontab -u user -
cat file1 file2
crontab
crontab filename
pushd "$HOME/Pictures"
sudo chmod +x java_ee_sdk-6u2-jdk-linux-x64.sh
chmod +x pretty-print
chmod +x rr.sh
chmod a+x ComputeDate col printdirections
chmod +x *.sh
chmod g+w $(ls -1a
grep -v '^..$')
chmod g+w .[^.]* ..?*
find . -maxdepth 0 -type f -exec chmod g+w {} ';'
chmod g+w * ...*
nl -v1000001 file
sed 's/3d3d/\n&/2g' temp
split -dl1 - temp
for filename in *.jpg; do mv "$filename" "prefix_$filename"; done;
nl -s"^M${LOGFILE}>  "
sudo chmod +rx $(which node)
find . -type d -exec chmod +rx {} \;
find . -name "rc.conf" -exec chmod o+r '{}' \;
find . -type f -iname '*.txt' -print0
xargs -0 mv {} {}.abc
find ~/dir_data -type d -exec chmod a+xr,u+w {} \;
v=5 env
less
TESTVAR=bbb env
fgrep TESTVAR
pushd %Pathname%
chmod +x $(brew --prefix)/etc/bash_completion
touch -d "$(date -r filename) - 2 hours" filename
touch -d "$(date -r "$filename") - 2 hours" "$filename"
alias cd-='cd $(history -p !!:1)'
ssh -t example.com "screen -r -X ls"
ssh -t example.com "screen -r; ls"
ssh -t example.com "screen -r"
chmod a+x myscript.sh
chmod a+x $pathToShell"myShell.sh"
sudo chmod u+s `which Xvfb`
ssh -fL 127.0.0.1:someport:host.in.the.remote.net:22 proxy.host
yes no
<command>
yes 1
command
yes n
rm -ir dir1 dir2 dir3
yes
cp * /tmp
yes
rm -ri foo
yes y
rm -ir dir1 dir2 dir3
yes '
COUNTRY'
sed $(wc -l < file)q
paste -d ' ' file -
sed 's/.*/& Bytes/' "$TEMPFILE"
column -t
find -type f
xargs -I {} mv {} {}.txt
echo -e "1\n2\n3"
sed 's/.*$/&<br\/>/'
sed 's/$/\r/g' input
od -c
echo 'deb blah ... blah'
sudo tee --append /etc/apt/sources.list > /dev/null
awk 'NR==1 {print $0, "foo", "bar"; next} {print $0, ($2=="x"?"-":"x"), ($4=="x"?"-":"x")}' file
column -t
find . -type f -name "*.java"
xargs tar rvf myfile.tar
find . -name -type f '*.mp3' -mtime -180 -print0
xargs -0 tar rvf music.tar
find . \( -iname "*.png" -o -iname "*.jpg" \) -print -exec tar -rf images.tar {} \;
find . -mtime -1 -type f -exec tar rvf "$archive.tar" '{}' \;
find . -mtime -1 -type f -print0
xargs -0 tar rvf "$archive.tar"
history -a
history -r .cwdhist
history -r file.txt
LOGNAME="`basename "$0"`_`date "+%Y%m%d_%H%M"`"
name="$(date +'%d%m%Y-%H-%M')_$(whoami)"
LBUFFER+="$(date)"
xhost +si:localuser:`whoami`
PROMPT_COMMAND='echo "$(date +"%Y/%m/%d (%H:%M)") $(history 1
cut -c 7-)" >> /tmp/trace'
KEY+=`date -r "$arg" +\ %s`
find . -name text.txt
sed 's
.*/\(.*\)/.*
sed -i "s@^@\1 @" &
'
sh
find dir -name image\*.jpg -exec /bin/ksh script.ksh {} \;
find . -type f -print0
xargs -0 ./group.sed --separate
find . -regex "xxx-xxx_[a-zA-Z]+_[0-9]+_[0-9]+\.jpg$" -exec ./rename.sh "{}" ";"
rsync -rvz -e 'ssh -p 2222' --progress ./dir user@host:/path
rsync -av --copy-dirlinks --delete ../htmlguide ~/src/
rsync -avh /home/abc/* /mnt/windowsabc
rsync -a --stats --progress --delete /home/path server:path
rsync -av /home/user1 wobgalaxy02:/home/user1
rsync -avz --progress local/path/some_file usr@server.com:"/some/path/"
rsync -avzru --delete-excluded server:/media/10001/music/ /media/Incoming/music/
rsync -avzru --delete-excluded /media/Incoming/music/ server:/media/10001/music/
rsync -av --exclude '*.svn' user@server:/my/dir .
rsync -avv source_host:path/to/application.ini ./application.ini
rsync -avz -e "ssh -p $portNumber" user@remote.host:/path/to/copy /local/path
rsync -chavzP --stats user@remote.host:/path/to/copy /path/to/local/storage
rsync -chavzP --stats /path/to/copy user@host.remoted.from:/path/to/local/storage
rsync -avlzp user@remotemachine:/path/to/files /path/to/this/folder
rsync -av --rsync-path="sudo rsync" /path/to/files user@targethost:/path
rsync -av /path/to/files user@targethost:/path
rsync -azP -e "ssh -p 2121" /path/to/files/source user@remoteip:/path/to/files/destination
rsync -avlzp /path/to/sfolder name@remote.server:/path/to/remote/dfolder
rsync -aHvz /path/to/sfolder name@remote.server:/path/to/remote/dfolder
rsync -aHvz /path/to/sfolder/ name@remote.server:/path/to/remote/dfolder
rsync -avz --ignore-existing /source folder/* user@remoteserver:/dstfolder/
rsync -ravz /source/backup /destination
rsync -a --relative /top/a/b/c/d remote:/
rsync --progress -avhe ssh /usr/local/  XXX.XXX.XXX.XXX:/BackUp/usr/local/
rsync -rave "ssh -i /home/test/pkey_new.pem" /var/www/test/ ubuntu@231.210.24.48:/var/www/test
rsync -av <SOURCE_DIR> rsyncuser@192.168.1.110:/srv/www/prj112/myfolder
rsync -aqz _vim/ ~/.vim
rsync -aqz _vimrc ~/.vimrc
rsync -a --delete blanktest/ test/
rsync -aPSHiv remote:directory .
rsync -ave ssh fileToCopy ssh.myhost.net:/some/nonExisting/dirToCopyTO
rsync -avR foo/bar/baz.c remote:/tmp/
rsync -a myfile /foo/bar/
rsync -vuar --delete-after path/subfolder/ path/
rsync -a --exclude .svn path/to/working/copy path/to/export
rsync -avR somedir/./foo/bar/baz.c remote:/tmp/
rsync -azP -e "ssh -p PORT_NUMBER" source destination
rsync -rvz --chmod=ugo=rwX -e ssh source destination
rsync -avz --rsh='ssh -p3382' source root@remote_server_name:/opt/backups
rsync -avz --chmod=ug=rwx --chmod=o=rx -e ssh src dest
rsync -a -v src dst
rsync -a -v --ignore-existing src dst
rsync -av --delete src-dir remote-user@remote-host:dest-dir
rsync -avz foo:src/bar /data/tmp
rsync -azvu -e ssh user@host1:/directory/ user@host2:/directory2/
rsync -avz -e "ssh -p $portNumber" user@remoteip:/path/to/files/ /local/path/
find /var/www/* -type d -print
tar -zcpvf {}.tar.gz -C /var/www/ --files-from - {} \;
rsync -aP --include=*/ --include=*.txt --exclude=* . /path/to/dest
find *.1  -exec tar czf '{}.tgz' '{}' --remove-files \;
find . -name \*.xml
grep -v /workspace/
tr '\n' '\0'
xargs -0 tar -cf xml.tar
find . -type f -name "*html"
xargs tar cvf htmlfiles.tar -
find /path/to/directory/* -maxdepth 0 -type d -printf "%P\n" -exec sudo tar -zcpvf {}.tar.gz {} \;
find /path/* -maxdepth 0 -type d -exec sudo tar -zcpvf {}.tar.gz {} \;
find -x data -name "filepattern-*2009*" -print0
tar --null --no-recursion -uf 2009.tar --files-from -
find data -xdev -name "filepattern-*2009*" -print0
tar --null --no-recursion -uf 2009.tar --files-from -
find data/ -name "filepattern-*2009*"
cpio -ov --format=ustar > 2009.tar
find data/ -name 'filepattern-*2009*' -exec tar uf 2009.tar '{}' +
find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
find data/ -name filepattern-*2009* -print0
xargs -0 tar uf 2009.tar
rsync -a -f"+ info.txt" -f"+ data.zip" -f'-! */' folder1/ copy_of_folder1/
rsync -vaut ~/.env* ~/.bash* app1:
rsync -av --files-from=- --rsync-path="sudo rsync" /path/to/files user@targethost:/path
find data/ -print0
tar --null -T - --create -f archive.tar
find data/ -print0
tar -T - --null --create -f archive.tar
find ./*
cpio -o > arch.cpio
tar -cvf - data/*
gzip > data.tar.gz
rsync -av remote_host:'$(find logs -type f -ctime -1)' local_dir
rsync -auve "ssh -p 2222" . me@localhost:/some/path
rsync -av . server2::sharename/B
rsync -az --delete /mnt/data/ /media/WD_Disk_1/current_working_data/;
rsync symdir/ symdir_output/ -a --copy-links -v
rsync -avz tata/ tata2/
rsync -avR $i /iscsi;
rsync -av $myFolder .
bzip2 -c file
tee -a logfile
rsync -a --filter="-! */" sorce_dir/ target_dir/
rsync -a /mnt/source-tmp /media/destination/
rsync -avz --rsh="ssh -p$2" key.pub $1:~/.ssh/key.pub
find "$(pwd -P)" -type d \( -path '/path/to/dir1' -or -path '/path/to/dir2' \) -prune  -or -not \( -path '/path/to/file1' -or -path '/path/to/file2' \) -print0
gnutar --null --no-recursion -czf archive.tar.gz --files-from -
sudo rsync -az user@10.1.1.2:/var/www/ /var/www/
rsync -av --progress sourcefolder /destinationfolder --exclude thefoldertoexclude
rsync -av --progress --exclude=*.VOB --exclude=*.avi --exclude=*.mkv --exclude=*.ts --exclude=*.mpg --exclude=*.iso --exclude=*ar --exclude=*.vob --exclude=*.BUP --exclude=*.cdi --exclude=*.ISO --exclude=*.shn --exclude=*.MPG --exclude=*.AVI --exclude=*.DAT --exclude=*.img --exclude=*.nrg --exclude=*.cdr --exclude=*.bin --exclude=*.MOV --exclude=*.goutputs* --exclude=*.flv --exclude=*.mov --exclude=*.m2ts --exclude=*.cdg --exclude=*.IFO --exclude=*.asf --exclude=*.ite /media/2TB\ Data/data/music/* /media/wd/network_sync/music/
find .. -type d -print0
xargs -0 tar cf dirstructure.tar --no-recursion
find backup/ -type d -print0
xargs -0 tar cf directory-structure.tar --no-recursion
find backup/ -type d
tar cf directory-structure.tar -T - --no-recursion
find backup/ -type d
xargs tar cf directory-structure.tar --no-recursion
find . -type d
xargs tar rf /somewhereelse/whatever-dirsonly.tar --no-recursion
find . -type d -print0
tar cf directory-structure.tar --null --files-from - --no-recursion
find . -type d -print0
tar cf dirstructure.tar --null --files-from - --no-recursion
find / -print0
tar -T- --null --no-recursive -cjf tarfile.tar.bz2
find / -print0
xargs -0 tar cjf tarfile.tar.bz2
tar -czf /fss/fi/outfile.tar.gz `find /fss/fin -d 1 -type d -name "*" -print`
sudo crontab -e -u apache
screen -S 'name' 'application'
screen -S foo
screen -S lynx lynx
screen -r 'name'
find . -type f -print0
xargs -0 chmod 644
find . -type d -print0
xargs -0 chmod 755
alias rm100m="find / -type f -name *.tar -size +100M -exec rm -i {} \;"
alias rm1g="find / -type f -name *.tar -size +1G -exec rm -i {} \;"
alias rm2g="find / -type f -name *.tar -size +2G -exec rm -i {} \;"
alias rm5g="find / -type f -name *.tar -size +5G -exec rm -i {} \;"
alias rmc="find . -iname core -exec rm {} \;"
ifconfig eth0 hw ether 00:80:48:BA:d1:30
screen -xr 14313
tmux attach -t test1
tmux attach -t <session name>
scp -p /home/reportuser/dailyReport.doc root@localhost:/root/dailyReports/20150105/
scp -o StrictHostKeyChecking=no root@IP:/root/K
scp -rp "DAILY_TEST_FOLDER" "root@${IPADDRESS}:/home/root/"
sshpass -p "YOUR_PASSWORD" ssh -o StrictHostKeyChecking=no YOUR_USERNAME@SOME_SITE.COM
sshpass -p "YOUR_PASSWORD" ssh -o StrictHostKeyChecking=no YOUR_USERNAME@SOME_SITE.COM:2400
yes
sudo rpm -Uvh https://mirror.webtatic.com/yum/el6/latest.rpm
yes 1
script -c 'aspell check text.txt' /dev/null
yes 0
script -c 'ispell text.txt' /dev/null
yes 0
script -c 'ispell text.txt' out.txt
find /etc -name "*.txt"
xargs -I {} mv {} {}.bak
find /etc -print0 -name "*.txt"
xargs -I {} -0 mv {} {}.bak
mysqldump -e --user=username --password=pswd database
gzip
uuencode my-dbbackup.`date +"\%Y-\%m-\%d"`.gz
mail me@domain.com
screen -L bash -c '(while :; do tail ~/screenlog.0
grep -o "[0-9]*%"
tail -1; done
zenity --progress --auto-close &); 7z a "output.zip" "/path/to/input"'
find -name "*.php" –exec cp {} {}.bak \;
find . -name "*.java" -exec cp {} {}.bk \;
find -depth -printf '%m:%u:%g:%p\0' >saved-permissions
mount --bind /tmp/fakerandom /dev/random
mount --bind /original/path /new/path
mount --bind /something /new_something
ifconfig eth0 down
find /usr/local/svn/repos/ -maxdepth 1 -mindepth 1 -type d -printf "%f\0"
xargs -0 -I{} echo svnadmin hotcopy /usr/local/svn/repos/\{\} /usr/local/backup/\{\}
yes ''
ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
find . -type f
while read f; do g=`md5sum $f
awk '{print $1}'`; echo "$g $f"> $f-$g.md5; done
find . -type f
while read f; do g=`md5sum $f` > $f.md5; done
find . -type f -exec md5sum {} \; > MD5SUMS
md5sum *.java
awk '{print $1}'
sort
uniq -d
find . -type f -exec md5sum \{\} \;
find .
xargs md5sum
FILE="/tmp/command_cache.`echo -n "$KEY"
md5sum
cut -c -10`"
md5=$(echo "$line"
md5sum)
checksum=`md5sum /etc/localtime
cut -d' ' -f1`
ls -alR -I dev -I run -I sys -I tmp -I proc /path
md5sum -c /tmp/file
cpio -i -e theDirname
md5sum
echo -n ""
md5sum
echo -n
md5sum
md5sum "$ecriv"
md5=$(md5sum $item
cut -f1 -d\ )
md5="$(md5sum "${my_iso_file}")"
md5=`md5sum ${my_iso_file}
cut -b-32`
md5sum "$source_file" "$dest_file"
find "$path" -type f -print0
sort -z
xargs -r0 md5sum
md5sum
md5sum main.cpp*
md5sum <(zcat /tmp/tst.gz) <(bzcat /tmp/tst.bz2) <(lzcat /tmp/tst.lzma) <(xzcat /tmp/tst.xz)
find //path/to/source/Directory -type f -exec md5sum {} +
awk '{print $0}' > Output.txt
find path/to/folder -type f -print0
sort -z
xargs -0 sha1sum; find path/to/folder \( -type f -o -type d \) -print0
sort -z
xargs -0 stat -c '%n %a'
sha1sum
find path/to/folder -type f -print0
sort -z
xargs -0 cat
sha1sum
find path/to/folder -type f -print0
sort -z
xargs -0 sha1sum
sha1sum
find path/to/folder -type f -print0
xargs -0 sha1sum
sha1sum
echo -n teststring
gzip -1
pigz -lv
echo -n teststring
gzip -1
tail -c 8
head -c 4
hexdump -e '1/4 "%08x" "\n"'
seq -s "*" 1 500
bc
SUM=$(tree
md5sum)
echo "a"
md5sum
echo -n 'exampleString'
md5sum
echo -n "logdir"
md5sum -
awk '{print $1}'
echo "password"
md5sum
cat submission.cpp
astyle -bj
cpp -
md5sum
echo -n "yourstring"
md5sum
grep -ar -e . --include="*.py" /your/dir
md5sum
cut -c-32
cat *.py
md5sum
grep -ar -e . /your/dir
md5sum
cut -c-32
grep -aR -e . /your/dir
md5sum
cut -c-32
find -maxdepth 1 -type f -exec md5sum {} \;
sed 's/[^(]*(\([^)]*\)) =/\1/'
find -maxdepth 1 -type f -exec md5sum {} \;
awk '{s=$2; $2=$1; $1=s;}1'
ls -p
grep -v /
xargs md5sum
awk '{print $2,$1}'
find . -name '.svn' -prune -o -type f -printf '%m%c%p'
md5sum
find /path -type f -name "*.py" -exec md5sum "{}" +;
echo -n -e '\x61'
md5sum
cat $FILES
md5sum
find /path -type f
sort -u
xargs cat
md5sum
cat $(echo $FILES
sort)
md5sum
md5sum filename
cut -f 1 -d " "
find . -maxdepth 1 -type f
md5sum
find "$path" -type f -print0
sort -z
xargs -r0 md5sum
md5sum
du -csxb /path
md5sum -c file
find /path/to/dir/ -type f -name *.py -exec md5sum {} +
awk '{print $1}'
sort
md5sum
tar c dir
md5sum
find -iname "MyCProgram.c" -exec md5sum {} \;
find /path/to/dir/ -type f -name "*.py" -exec md5sum {} +
awk '{print $1}'
sort
md5sum
md5sum $(which cc)
md5sum $(which gcc)
md5sum `which c++`
<files.txt  xargs stat -c %s
paste -sd+ -
bc
echo foo
tee >(sha1sum) >(md5sum)
octave -q --eval 'printf ("%f\n", sin([0:0.1:pi/2]))'
nl
tee y.txt
seq -5 10
xargs printf "- - %s"
xargs
bc
seq -s+ -5 10
bc
seq 10
jq -s 'add'
seq 10
tr '[\n]' '+'
sed -e 's/+/ + /g' -e's/ + $/\n/'
xargs expr
seq 10
jq -s add
seq 100000
paste -sd+
bc -l
ipcs -mb
awk 'NR > 3 { print $7 }'
paste -sd+
bc
cat /file/with/numbers
php -r '$s = 0; while (true) { $e = fgets(STDIN); if (false === $e) break; $s += $e; } echo $s;'
alias memu="ps -u $(whoami) -o pid,rss,command
awk '{print \$0}{sum+=\$2} END {print \"Total\", sum/1024, \"MB\"}'"
find "$PWD" / -iname '*.jpg' -exec du -s {} +
sed "s/^/$(hostname): /"
find . -name "*jpg" -exec du -k {} \;
awk '{ total += $1 } END { print total/1024 " Mb total" }'
find . -type f -iname "*.jpg" -ls
awk 'BEGIN {print "0"}; {print $7, "+"}; END {print "p"}'
dc
octave -q --eval 'printf ("%f\n", [0:0.1:pi/2])'
nl
tee x.txt
depth=$(pstree -sA $processid
head -n1
sed -e 's#-+-.*#---foobar#' -e 's#---*#\n#g' -eq
wc -l)
find . –iname "error" –print ( -i is for ignore )  find . –iname "error" –print ( -i is for ignore )
env
grep -i shell
cat report.txt
grep -i error
more
screen -D -m yourEvilProgram
rename -v 's/\.JPG/\.jpeg/' *.JPG
crontab -l
sed '/anm\.sh/s#\/5#\/10#'
crontab -
crontab -l
sed '/anm\.sh/s,^\*/5,*/10,'
crontab -
sudo find ./bootstrap/cache/ -type d -exec chown apache:laravel {} \;
sudo find ./storage/ -type d -exec chown apache:laravel {} \;
find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
find ~ -group vboxusers -exec chown kent:kent {} \;
find . \( \! -user xx -exec chown -- xx '{}' + -false \)
sudo find /var/www -nouser -exec chown root:apache {} \;
echo ',s/foo/bar/g; w'
tr \; '\012'
ed -s file.txt
source <(export
sed 's/gcc.4.2/gcc64/g')
cd -P "$dir1"
cd /lib/modules/$(uname -r)/
cd  /path/to/pdf
cd -L ..
cd $(dirname $(dirname $(which perl)))/lib
cd "$(find . -print0
sort -z
tr '\0' '\n'
tail -1)"
cd $(basename $1 .tar.gz)
cd /home/`whoami`
cd "$(dirname "$1")"
cd "$(dirname $(which oracle))"
cd $(dirname $(which oracle))
cd $(dirname `which oracle`)
cd $(dirname $(which $0) )
cd $(which oracle
xargs dirname)
cd "$(grep DOWNLOAD $HOME/.config/user-dirs.dirs
cut -f 2 -d "="
tr "\"" "\n"
tr -d "\n")"
cd "$(grep DOWNLOAD $HOME/.config/user-dirs.dirs
cut -f 2 -d "="
tr "\"" "\n")"
cd $( ~/marker.sh go "$@" )
cd $(dirname $(readlink -f $0))
cd $(readlink /proc/$PID/cwd)
cd $(readlink -f $(dirname $0))
cd
sudo  find /var/www/html/ -type d -exec chmod 775 {} \;
sudo  find /var/www/html/ -type f -exec chmod 664 {} \;
find . -name "*.css" -exec sed -i -r 's/#(FF0000
F00)\b/#0F0/' {} \;
chown -v root:root /path/to/yourapp
find /path/to/directory -type f -exec chmod 644 {} +
cd $(dirname $(readlink -f $0))
find / -group 2000 -exec chgrp -h foo {} \;
chsh -s $(which zsh)
find . -name '*.php' -exec chmod 755 {} \;
tee logfile.txt
chown user_name file
sudo chown root:wheel com.xxxx.adbind.plist
chown root:root script.sh
chown user_name folder
sudo chown el my_test_expect.exp
chown $1:httpd .htaccess
chown $FUID:$FGID "$FILE2"
chown -- "$user:$group" "$file"
sudo chown bob:sftponly /home/bob/writable
sudo chown root:dockerroot /var/run/docker.sock
sudo chown root:wheel adbind.bash
sudo chown root:wheel bin
sudo chown root:www-data /foobar/test_file
sudo chown `whoami` /data/db
sudo chown `whoami` /vol
find /path/to/look/in/ -type d -name '.texturedata' -exec chmod 000 {} \; -prune
find /path/to/look/in/ -type d -name '.texturedata' -prune -print0
xargs -0 chmod 000
find "$d/" -type d -print0
xargs -0 chmod 755
find -perm 777
xargs -I@ sudo chmod 755 '@'
find . -name "*.php" -exec chmod 755 {} \;
find . -name "*.php" -exec chmod 755 {} + -printf '.'
wc -c
find . -name "*.php" -exec chmod 755 {} \; -exec /bin/echo {} \;
wc -l
chmod 444 .bash_logout .bashrc .profile
sudo chmod 755 .git/hooks/pre-commit
sudo chmod 777 .git/hooks/prepare-commit-msg
sudo chmod 755 /dvtcolorconvert.rb
chmod 777 /usr/bin/wget
sudo chmod 755 mksdcard
find . -type d -exec chmod 755 {} +
find ~/dir_data -type d -exec chmod a+xr,u+w {} \;
find ./debian -type d
xargs chmod 755
find . -name "*.php" -exec chmod 755 {} + -printf '.'
wc -c
find . -name "*.php"
pv --line-mode
xargs chmod 755
find . -name '*.php' -exec chmod 755 {} \; -exec echo '+' \;
find . -name "*.php" -exec chmod 755 {} \; -exec /bin/echo {} \;
wc -l
find . -type f -exec chmod 644 {} +
find ~/dir_data -type f -exec chmod a-x,u+w {} \;
chmod 555 /home/sshtunnel/
find /path -type d -exec chmod 0755 "{}" \;
find /path -type d -exec chmod 0755 {} \;
find /path -type d
xargs chmod 0755
find . -type f -exec chmod 500 {} ';'
find . -name "*.rb" -type f -exec chmod 600 {} \;
find /usr/local -name "*.html" -type f -exec chmod 644 {} \;
find /path/to/someDirectory -type d -print0
xargs -0 sudo chmod 755
find . -type f
xargs -I{} chmod -v 644 {}
find . -type f
xargs chmod -v 644
find ./ -type f -print0
xargs -t -0 chmod -v 644
find . -type f -print
sed -e 's/^/"/' -e 's/$/"/'
xargs chmod 644
find /path/to/someDirectory -type f -print0
xargs -0 sudo chmod 644
find /path/to/dir/ -type f -print0
xargs -0 chmod 644
find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \;
find /path/to/dir/ -type f ! -perm 0644 -print0
xargs -0 chmod 644
find . -type d -print0
xargs -0 chmod 644
find . -perm 755 -exec chmod 644 {} \;
find . -type f -perm 755 -exec chmod 644 {} \;
find . -type f -name '*.php' -exec chmod 644 {} \;
find . -type f -exec chmod 644 {} \;
find . -mindepth 1 -type d
xargs chmod 700
find . -mindepth 2
xargs chmod 700
find /path/to/dir -type d -exec chmod 755 {} \;
find . -type d
xargs chmod -v 755
find . -type d -print
sed -e 's/^/"/' -e 's/$/"/'
xargs chmod 755
find . -type d -exec chmod 755 {} \;
find . -type d -exec chmod 777 {} \;
find . -type f -exec chmod u=rw,g=r,o= '{}' \;
find . -type f -exec chmod u=rw,g=r,o= '{}' \;
find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;
find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;
find htdocs cgi-bin -name "*.cgi" -type f -exec chmod 755 {} \;
find . -type f -exec sed -i 's/searc/replace/g' {} \;
cp --remove-destination $(readlink $f) $f
find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 "$1" > converted
mv converted "$1"' -- {} \;
find . -name "*.txt"
sed "s/\.txt$//"
xargs -i echo mv {}.txt {}.bak
sh
chown :friends myfile
find . -type d
sed -e 's/\.\///g' -e 's/\./avoid/g'
grep -v avoid
awk '{print $1"\t"$1}'
xargs chgrp
find . -type d
sed -e 's/\.\///g'
awk '{print $1, $1}'
xargs chgrp
find . -group root -print
xargs chgrp temp
chown root:root it
sudo chown root:root testfile.txt
sudo chown root:root uid_demo
chown $JBOSS_USER $JBOSS_CONSOLE_LOG
sudo chown nobody /var/www/html/mysite/images/
sudo chown nobody /var/www/html/mysite/tmp_file_upload/
chown user destination_dir
sudo chown root process
find /mydir -type f -name "*.txt" -execdir chown root {} ';'
ls /empty_dir/
xargs -L10 chown root
ls /empty_dir/
xargs -n10 chown root
find . -not -iwholename './var/foo*' -exec chown www-data '{}' \;
find dir_to_start -name dir_to_exclude -prune -o -print0
xargs -0 chown owner
find dir_to_start -not -name "file_to_exclude"  -print0
xargs -0 chown owner
chown ${JBOSS_USER}: $(dirname $JBOSS_PIDFILE)
true
sudo chown hduser:hadoop {directory path}
chown owner:nobody public_html
chown root:specialusers dir1
chown user:group file ...
sudo chown root. /etc/udev/rules.d/51-android.rules
sudo chown root /home/bob
sudo chown root file.sh
find . -user aluno1 -exec chown aluno2 {}
find -user root -exec chown www-data {} \;
find . -exec chown myuser:a-common-group-name {} +
find -x / -user george -print0
xargs -0 chown eva
find . -type d -user harry -exec chown daisy {} \;
find . -type f -exec chmod 644 {} \;
find . -type f -exec chmod 0644 {} +
find . -type f -exec chmod 0644 {} \;
find . -type d -exec chmod 0755 {} \;
find . -type f
xargs -I{} chmod -v 644 {}
find . -type f
xargs chmod -v 644
find . -type d
xargs chmod -v 755
find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
find . -type d -exec chmod 755 {} \;
touch -h somesymlink
find /var/www -print0
xargs -0 chown www-data:www-data
find . -type d -user harry -exec chown daisy {} \;
cd foo
cat
cd -P xyz
cd `cat $HOME/.lastdir`
cd "$(dirname "$(which oracle)")"
cd "$(dirname $(which oracle))"
cd $(dirname $(which oracle))
cd $(dirname `which oracle`)
cd $(which oracle
xargs dirname)
cd `dirname $TARGET_FILE`
cd -P ..
cd "$(dirname "$(which oracle)")"
cd `which <file>
xargs dirname`
cd `dirname $(which python)`
cd "$TAG"
find / -user 1005 -exec chown -h foo {} \;
chown amzadm.root  /usr/bin/aws
chgrp btsync /etc/btsync/[prefered conf name].conf
chgrp www-data /home/www-user/php_user.sh
chgrp forge /var/run/fcgiwrap.socket
chgrp loggroup logdir
chgrp groupb myprog
chgrp "${USER}" myprogram
chgrp god public private
chgrp pub public
chgrp Workers shared
chgrp target_group target_directory
sudo chgrp gpio /sys/class/gpio/export /sys/class/gpio/unexport
chgrp
cd $(dirname $(which ssh));
find . -type f -iname "*.txt" -print
xargs grep "needle"
find . -type f -iname "*.txt" -print0
xargs -0 grep "needle"
ssh -q $HOST [[ -f $FILE_PATH ]] && echo "File exists"
echo "File does not exist";
od -t x2 -N 1000 $file
cut -c8-
egrep -m1 -q ' 0d
0d
0d$'
mount -l
grep 'type nfs'
sed 's/.* on \([^ ]*\) .*/\1/'
grep /path/to/dir
ssh remote_host test -f "/path/to/file" && echo found
echo not found
ssh host "test -e /path/to/file"
AMV=$(mount -l
grep "\[$VLABEL\]")
diff <(ssh server1 'rpm -qa
sort') <(ssh server2 'rpm -qa
sort')
mount
grep -q ~/mnt/sdc1
df $path_in_question
grep " $path_in_question$"
is_nullglob=$( shopt -s
egrep -i '*nullglob' )
tmux show-environment -g
grep RBENV
tmux show-environment -t sessname
grep RBENV
[[ $(find /path/to/file -type f -size +51200c 2>/dev/null) ]] && echo true
echo false
tmux show-environment
grep RBENV
mount
grep nfs
mount
grep $(readlink -f /dev/disk/by-uuid/$UUID )
mount
grep $(blkid -U '09b8f1ab-8d4b-4c5f-b395-40be09c090b0')
mount
grep $(blkid -U '09b8f1ab-8d4b-4c5f-b395-40be09c090b0')
grep '/media/WD_Disk_1 '
[ `md5sum $(which c++)
cut -d' ' -f1` == `md5sum $(which g++)
cut -d' ' -f1` ] && echo Yes, equal content
echo No, unequal content
cat *.txt
sort
sort -u -c
pstree --show-parents -p $$
head -n 1
sed 's/\(.*\)+.*/\1/'
wc -l
uname -m
grep '64'
find "$some_dir" -prune -empty -type d
read && echo empty
echo "not empty"
find "`echo "$some_dir"`" -maxdepth 0 -empty
[[ "$(find . -maxdepth 1 -cmin +60 -name file)" = "" ]]
echo "old"
kill -0 1
find "$somedir" -maxdepth 0 -empty -exec echo {} is empty. \;
comm -23 <(sort subset
uniq) <(sort set
uniq)
head -1
find "$somedir" -type f -exec echo Found unexpected file {} \;
ls `readlink somelink`
[ $(find your/dir -prune -empty) = your/dir ]
du -csxb /path
md5sum -c file
ssh -S my-ctrl-socket -O check jm@sampledomain.com
ssh -O check officefirewall
readelf -a -W libsomefile.a
grep Class:
sort
uniq
sudo env
find . -type f -name "*.php" -exec php -l {} \;
df $path_in_question
grep " $path_in_question$"
df /full/path
grep -q /full/path
pstree --show-parents -p $$
head -n 1
sed 's/\(.*\)+.*/\1/'
grep screen
wc -l
rpm -qf `which sort`
bzip2 -t file.bz2
groups monit
grep www-data
brew doctor
find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
find . -type d -name ".svn" -print
parallel rm -rf
find . -type d -name ".svn" -print
xargs rm -rf
kill -9 $(ps -A -ostat,ppid
grep -e '[zZ]'
awk '{ print $2 }')
kill $(ps -A -ostat,ppid
awk '/[zZ]/{print $2}')
unzip -l some-jars-and-textfiles.zip
tr '[:blank:]' \\t
cut -f 5
grep jar
history -c
history -cr
history -c
echo `clear`
clear
chown $(stat -c%u:%g "$srcdir") "$dstdir"
chown $(stat -f%u:%g "$srcdir") "$dstdir"
screen -X quit
ssh -S my-ctrl-socket -O exit jm@sampledomain.com
dir="`echo $dir
sed s,//,/,g`"
paste -d "" - -
diff "$source_file" "$dest_file"
diff current.log previous.log
grep ">\
<" #comparring users lists
diff -up fastcgi_params fastcgi.conf
diff -u file1 file2
find . -name "*.csv" -exec diff {} /some/other/path/{} ";" -print
find . -okdir diff {} /some/other/path/{} ";"
awk 'NR==1 { print; next } { print $0, ($1 == a && $2 == b) ? "equal" : "not_equal"; a = $1; b = $3 }' file
column -t
find . -name *.xml -exec diff {} /destination/dir/2/{} \;
find . -name '*.h' -execdir /bin/diff -u '{}' /tmp/master ';'
diff -ENwbur repos1/ repos2/
diff -u A1 A2
grep -E "^\+"
comm abc def
diff -Naur dir1/ dir2
diff -Nar /tmp/dir1 /tmp/dir2/
comm <(sort -n f1.txt) <(sort -n f2.txt)
comm <(sort f1.txt) <(sort f2.txt)
diff <(echo hello) <(echo goodbye)
diff <(ls /bin) <(ls /usr/bin)
diff <(zcat file1.gz) <(zcat file2.gz)
find FOLDER1 -type f -print0
xargs -0 -I % find FOLDER2 -type f -exec diff -qs --from-file="%" '{}' \+
comm -23 <(ls) <(ls *Music*)
DST=`dirname "${SRC}"`/`basename "${SRC}"
tr '[A-Z]' '[a-z]'`
g=`dirname "$f"`/`basename "$f"
tr '[A-Z]' '[a-z]'`
pstree -p
grep git
FOO=$(echo "Hello world"
gzip
base64)
gzip archive.tar
hey=$(echo "hello world"
gzip -cf)
gzip -c my_large_file
split -b 1024MiB - myfile_split.gz_
gzip -c mysqldbbackup.sql
uuencode mysqldbbackup.sql.gz
mail -s "MySQL DB" backup@email.com
gzip "$file"
find /var -iname \*.log
xargs bzip -
find /var -iname \*.log -exec bzip {} \;
gzip "{}"
gzip */*.txt
find . -type f -name "*.txt" -exec gzip {} \;
find ./ -name "*.img" -exec bzip2 -v {} \;
find . -name '*.txt'
xargs zip -9 txt.zip
find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
find $LOGDIR -type d -mtime -1 -exec compress -r {} \;
find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec gzip -N {} \;
find $FILE -type f -mtime 30 -exec gzip {} \;
find $FILE -type f -not -name '*.gz' -mtime 30 -exec gzip {} \;
find $PATH_TO_LOGS -maxdepth 1 -mtime +$SOME_NUMBER_OF_DAYS -exec sh -c "case {} in *.gz) ;; *)  gzip '{}' ;; esac;" \;
find /source -type f -print0
xargs -0 -n 1 -P $CORES gzip -9
find . -type f -print0
xargs -0r gzip
echo *.txt
xargs gzip -9
sudo find / -xdev -type f -size +100000 -name "*.log" -exec gzip -v {} \;
sudo find / -xdev -type f -size +100000 -name "*.log" -exec gzip -v {} \; 2>&1
awk '{print $6}'
sudo find / -xdev -type f -size +100000 -name "*.log" -exec gzip {} \; -exec echo {} \;
find *.1  -exec tar czf '{}.tgz' '{}' --remove-files \;
gzip -k *cache.html
find . -type f -name "*cache.html" -exec gzip -k {} \;
find . -type f -name "*cache.html" -exec sh -c "gzip < {} > {}.gz" \;
find folder -type f -exec gzip -9 {} \; -exec mv {}.gz {} \;
find . \! -name "*.Z" -exec compress -f {} \;
echo gzip. $( gzip
wc -c )
gzip
find . -type f  -mtime +7
tee compressedP.list
parallel compress
find . -type f  -mtime +7
tee compressedP.list
xargs -I{} -P10 compress {} &
find . -type f  -mtime +7
tee compressedP.list
xargs compress
uuencode <(head -c 200 /dev/urandom
base64
gzip)
bzip2 file
tee -a logfile
find -name \*.xml -print0
xargs -0 -n 1 -P 3 bzip2
bzip2 *
find PATH_TO_FOLDER -maxdepth 1 -type f -exec bzip2 -zk {} \;
compress $* &
bzip2 -k example.log
find "$1" -type f
egrep -v '\.bz2'
xargs bzip2 -9 &
date -ujf%s $(($(date -jf%T "10:36:10" +%s) - $(date -jf%T "10:33:56" +%s))) +%T
find ~/ -name '*.txt' -print0
xargs -0 wc -w
awk 'END { print $1/(NR-1) }'
find ~/Journalism  -name '*.txt' -print0
xargs -0 wc -w
awk '$1 < 2000 {v += $1; c++} END {print v/c}'
find . -name '*.txt' -not -name "all.txt"
xargs cat > all.txt
pdfunite `find . -name "*.pdf"
sort` all.pdf
find . -iname '*test*' -exec cat {} \;
find . -name '*test*' -exec cat {} \;
paste -s -d' \n' input.txt
scp -qv $USER@$HOST:$SRC $DEST
ssh -S "$SSHSOCKET" -O exit "$USER_AT_HOST"
ssh -M -f -N -o ControlPath="$SSHSOCKET" "$USER_AT_HOST"
ssh -l ${USERNAME} ${HOSTNAME} "${SCRIPT}"
ssh -o StrictHostKeyChecking=no -l username hostname "pwd; ls"
scp -v user@remotehost:/location/KMST_DataFile_*.kms
scp -v /my_folder/my_file.xml user@server_b:/my_new_folder/
ssh -o UserKnownHostsFile=/dev/null username@hostname
scp -P 1234 user@[ip address or host name]:/var/www/mywebsite/dumps/* /var/www/myNewPathOnCurrentLocalMachine
scp -P 2222 /absolute_path/source-folder/some-file user@example.com:/absolute_path/destination-folder
scp -c blowfish -r user@your.server.example.com:/path/to/foo /home/user/Desktop/
yes > backingfile &
find . -name "*.txt" \( -exec echo {} \; -o -exec true \; \) -exec grep banana {} \;
yes
mv ...
yes a=\"20131202\"
sed -e :a -e 's/...\([0-9]\{4\}\)\([0-9]\{2\}\)\([0-9]\{2\}\)./\1 \2 \3/'
yes
pv --quiet --rate-limit 10
yes 123456789
grep --line-buffered .
{ head -n 1; head -n 1; }
ping google.com
awk -F'[ =]' 'NR>1{print system("echo -n $(date +%s)"), $11}'
yes Y
command-that-asks-for-input
yes Yes
./ittp-update.sh
yes $'a\nb'
script.py
yes ok
recalcitrant.php
yes 2>/dev/null
./MyScript.sh
yes
cat
more
yes
rm
yes
command
yes
command-that-asks-for-input
ping -b 10.10.0.255
grep 'bytes from'
awk '{ print $4 }'
yes "Hidden"
dd of=/dev/sdb
yes "Hidden"
tr '\n' '\0'
dd of=/dev/sdb
yes "Hidden"
paste -d' ' -s -
dd of=/dev/sdb
yes 'UUUUUUUUUUUUUUUUU'
tr -d '\n' > /dev/to/overwrite
zcat /usr/share/man/man1/man.1.gz
groff -mandoc -Thtml
ping -c1 1199092913
head -n1
grep -Eow "[0-9]+[.][0-9]+[.][0-9]+[.][0-9]+"
echo 595a
awk -niord '$0=chr("0x"RT)' RS=.. ORS=
od -tx1c
echo "luke;yoda;leila"
tr ";" "\n"
echo abc
od -A n -v -t x1
tr -d ' \n'
echo -ne 'some random\nbytes'
xxd -plain
tr -d '\n'
sed 's/\(..\)/%\1/g'
find -type f -name '*.au'
awk '{printf "%s %s\n",$0,$0".wav" }'
xargs sox
find -type f -name '*.au'
awk '{printf "sox %s %s\n",$0,$0".wav" }'
bash
find . -name '*.doc'
while read i; do antiword -i 1 "${i}" >"${i/doc/txt}"; done
find . -name '*.doc'
while read i; do antiword -i 1 "${i}" >"${i/doc/txt}" && rm "${i}"; done
cal -h 02 2012
cut -c4-17
sed -r 's/(..)\s/\0\t\&/g'
sed 's/$/\t\\\\/'
head -n-1
tail -n +2
cal 02 2012
perl -F'(.{1,3})' -anE'BEGIN{$,="\t&";$\="\t\\\\\n"}$.==1
eof
do{$i//=@F;print@F[map{$_*2-1}(1..$i/2)]}'
cal 02 2012
perl -lnE'$.==1
eof
do{$,="\t&";$\="\t\\\\\n";$l=$_;print map{substr($l,$_*3,3)}(1..5)}'
cal
sed '1d;2{h;s/./ /g;x};/^\s*$/b;G;s/\n/ /;s/^...\(.\{15\}\).*/\1/;s/.../ &\t\&/g;s/\&$/\\\\/'
find $STARTDIR -name '*.ps' -print
sed -e 's/.ps$//'
xargs -l -i  ps2pdf '{}.ps' '{}.pdf'
find . -name *.txt
xargs dos2unix
find . -type f -exec dos2unix {} \;
find . -type f -exec dos2unix {} {} \;
find . -type f -print0
xargs -0 -n 1 -P 4 dos2unix
find . -name "*bmp" -print0
xargs -0 -l -i basename "{}" ".bmp"
xargs -0 -l -i convert "{}.bmp" "{}.png"
b=`echo "$a"
sed 's/./\L&/g'`
b=`echo "$a"
sed 's/./\U&/g'`
sed 's/.*/\L&/'
find ./polkadots -name 'image.pdf' -exec convert -transparent white -fuzz 10% {} image.png \; -print
find . -type f -name '*.m4a' -exec bash -c 'avconv -i "$0" "${0/%m4a/mp3}"' '{}' \;
find / -name "*.md" -type f -exec sh -c 'markdown "$0" > "$0.html"' {} \;
find / -name "*.md" -type f -exec sh -c 'markdown "${0}" > "${0%.md}.html"' {} \;
find . -type f
while read file; do sed -e 's/^M//g' -i "$file"; done
find /path/to/files -iname '*.jpg' -exec mogrify -format pdf {} +
readlink -f /x/y/../../a/b/z/../c/d
ln -sf "$(readlink -f "$link")" "$link"
od
cut -b 8-
xargs -n 1
sort
uniq
wc -l
find . -type l
while read f; do /bin/cp -rf --remove-destination -f $(find . -name $(readlink "${f}")) "${f}";done;
CLEAN=`echo -n $CLEAN
tr A-Z a-z`
cat foo.md
pandoc -f markdown_github
lynx -stdin
cat infile
dos2unix -U
od -c
var1=`echo $var1
tr '[A-Z]' '[a-z]'`
head -c1024 /dev/urandom
xxd -p
tr -d $'\n'
head /dev/random -c16
od -tx1 -w16
head -n1
cut -d' ' -f2-
tr -d ' '
IFS=';' read -a myArray <<< "$myArray"
find $(pwd) -type f
xargs -I xxx sed -i 's/\r//g' xxx
cp -f "$project_dir"/iTunesArtwork Payload/iTunesArtwork
cp "${FILE}" "COLLECT/$(mktemp job_XXXXXXXXX)"
cp -v [MacVim_source_folder]/src/MacVim/mvim /usr/local/bin
sudo cp -a libgtest_main.so libgtest.so /usr/lib/
cp -n src dest
find . -name '*FoooBar*'
sed 's/.*/"&"/'
xargs cp ~/foo/bar
find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
find . -name "*foo*"
sed -e "s/'/\\\'/g" -e 's/"/\\"/g' -e 's/ /\\ /g'
xargs cp /your/dest
find . -type f -name '*.txt'
sed 's/'"'"'/\'"'"'/g'
sed 's/.*/"&"/'
xargs -I{} cp -v {} ./tmp/
cp lib*.so ~/usr/gtest/lib
find -name '*FooBar*' -print0
xargs -0 cp -t ~/foo/bar
find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'
find . -iname "*foobar*" -exec cp "{}" ~/foo/bar \;
find . -name "file.ext"
grep "FooBar"
xargs -i cp -p "{}" .
find .
grep FooBar
xargs -I{} cp {} ~/foo/bar
cp -n
cp -vi /boot/config-`uname -r` .config
ls
xargs -n 1 cp -i file.dat
ls -d */
xargs -iA cp file.txt A
echo dir1 dir2 dir3
xargs -n 1 cp file1
cat allFolders.txt
xargs -n 1 cp fileName.txt
find . -mindepth 1 -maxdepth 1 -type d
grep \/a
xargs -n 1 cp -i index.html
find . -mindepth 1 -maxdepth 1 -type d
xargs -n 1 cp -i index.html
echo ./fs*/*
xargs -n 1 cp test
cp --parents src/prog.js images/icon.jpg /tmp/package
cp $(ls -1tr *
tail -1) /tmp/
rsync --blocking-io *.cc *.h SConstruct rsync://localhost:40001/bledge_ce
rsync -pr ./export /path/to/webroot
rsync --iconv=UTF-8-MAC,UTF-8 /Users/username/path/on/machine/ 'username@server.ip.address.here:/home/username/path/on/server/'
rsync --iconv=UTF-8,UTF-8-MAC /home/username/path/on/server/ 'username@your.ip.address.here:/Users/username/path/on/machine/'
rsync -a --relative /new/x/y/z/ user@remote:/pre_existing/dir/
rsync -r /path/to/source username@computer:/path/to/dest
rsync 6.3.3/6.3.3/macosx/bin/mybinary ~/work/binaries/macosx/6.3.3/
ssh USER@REMOTE "cat file"
xclip -i
cat allFolders.txt
xargs -n 1 cp fileName.txt
rsync --partial --progress --rsh=ssh local_file user@host:remote_file
rsync -P -e ssh local_file user@host:remote_file
echo 'some_file_name'
cpio -p --owner someuser:somegroup destination_directory
rsync -av --exclude='path1/to/exclude' --exclude='path2/to/exclude' source destination
rsync -u src dest
rsync -R src/prog.js images/icon.jpg /tmp/package
rsync -Rv src/prog.js images/icon.jpg /tmp/package/
set %PATH%
clip
rsync -r username@computer:/path/to/source /path/to/dest
find . -type f -name "*.mp3" -exec cp {} /tmp/MusicFiles \;
find dir/ -name '*.txt'
xargs cp -a --target-directory=dir_txt/ --parents
find "$somedir" -type d -empty -exec cp /my/configfile {} \;
find . -depth -print
cpio -o -O /target/directory
find . -name "*c" -print0
xargs -0 -n1 cp xyz.c
find ./C -name "*.c"
xargs -n1  cp xyz.c
find . -type d -name "temp*"
xargs -n1 cp xyz.c
rsync --sparse sparse-1 sparse-1-copy
find ./ -mount -depth -print
cpio -pdm /destination_dir
find projects/ -name '*.php' -print
cpio -pdm copy/
find . -name \*.xml -print0
cpio -pamvd0 /new/parent/dir
find /source_path -name *.data -exec cp {} /target_path \;
find /source_path -name \*.data
while read -r filename; do cp "${filename}" "$(printf "%s\n" "${filename}"
sed "s/^.*[/]\(category[^/]*\)[/]\(.*[.]data\)$/\/target_path\/\1_\2/")"; done
find jcho -name '*.data'
while read -r f; do cp "$f" "$(echo "$f"
sed 's~\([^)]*\)/\([^()]*\)$~\1_\2~')"; done
find jcho -name *.data -exec sh -c 'f="${0}"; d=$(echo ${f}
sed -re 's/0/2/' ); cp ${f} ${d} ' {} \;
find . -type f -name "*.mp3" -exec cp {} /tmp/MusicFiles \;
find . -name '*.txt'
while IFS= read -r FILE; do echo "Copying $FILE.."; cp "$FILE" /destination; done
find . -name '*.txt'
while read line; do echo "Copying '$line' to /tmp"; cp -- "$line" /tmp; done
find -name '*.patch' -print0
xargs -0 -I {} cp {} patches/
find ./work/ -type f -name "*.pdf" -mtime +5 -size +2M
xargs -r cp -t ./backup/
find ~/ -name *.png -exec cp {} imagesdir \;
find dir/ -name '*.txt'
xargs cp -a --target-directory=dir_txt/ --parents
rsync -a --include='*/' --exclude='*' source/ destination/
rsync -a -f"+ */" -f"- *" source/ destination/
rsync /path/to/local/storage user@remote.host:/path/to/copy
find /home/ -maxdepth 1 -print
sudo cpio -pamVd /newhome
find -print0
sort -z
cpio -pdv0 ../new
find -name '*FooBar*' -print0
xargs -0 cp -t ~/foo/bar
find .
grep FooBar
xargs -I{} cp {} ~/foo/bar
find . -iname "*foobar*" -exec cp "{}" ~/foo/bar \;
find folder* -name '*.a' -print
cpio -pvd /path/to/dest
find .
cpio -pdumv /path/to/destination/dir
find /mail -type f
cpio -pvdmB /home/username
find /var/spool/mail -type f
cpio -pvdmB /home/username/mail
find . -type f -not -path '*/exlude-path/*' -exec cp --parents '{}' '/destination/' \;
find . -type f -not -iname '*/not-from-here/*' -exec cp '{}' '/dest/{}' ';'
find . -type f -not -path '*/not-from-here/*' -exec cp '{}' '/dest/{}' \;
cp `ls
grep -v Music` /target_directory
find . -type f
xargs grep -l "textToSearch"
cpio -pV $destination_path
rsync -zvr --include="*.sh" --exclude="*" $from/*  root@$host:/home/tmp/
find . -name "*failed.ipynb"
cpio -pd ./fails
find . -name 'file_name.extension' -print
cpio -pavd /path/to/receiving/folder
find olddir -name script.sh -printf "%p\0" -printf "newdir/%P\0"
xargs -0L2 cp -n
find .
grep "FooBar"
tr \\n \\0
xargs -0 -I{} cp "{}" ~/foo/bar
find myfiles
cpio -pmud target-dir
find foo -type f ! -name '*Music*' -exec cp {} bar \;
find  /home/mine -iname "*.png" -printf "%P\n "
xargs  -I % -n1 cp %  /home/mine/pngcoppies/copy%
find /home/mine -iname "*.png" -execdir cp {} /home/mine/pngcoppies/copy{} \;
find "/tmp/2/" -iname "$j.sh" -exec cp {} "$i" \;
find . -type f -iname "*.flac" -o -print0 -iname "*.mp3" -print0 -o -iname "*.wav" -print0 -o -iname "*.aac" -print0 -o -iname "*.wma" -print0
while read -d $'\0' file; do cp -ruv "$file" "/media/wd/network_sync/music/$file"; done
find . -type f -exec sh -c 'cp "$@" /tmp' {} +
find . -type f -exec sh -c 'cp "$@" /tmp' {} +
find . -type f -exec cp -t TARGET {} \+
find /path -type f -name '*~' -print0
xargs -0 -I % cp -a % ~/backups
find src/ -type d -exec mkdir -p dest/{} \; -o -type f -exec touch dest/{} \;
yes
cp -rf /zzz/zzz/* /xxx/xxx
pwd
tr -d '\n'
pbcopy
pwd
xsel -i
ssh-copy-id myname@somehost
find dir/ -name '*.txt'
xargs cp -a --target-directory=dir_txt/ --parents
find "$sourceDir" -type d
sed -e "s?$sourceDir?$targetDir?"
xargs mkdir -p
find ./<SOURCE_DIR>/ -type d
sed 's/\.\/<SOURCE_DIR>//g'
xargs -I {} mkdir -p <DEST_DIR>"/{}"
find . -type d -exec mkdir -p -- /path/to/backup/{} \;
find olddir -type d -printf "newdir/%P\0"
xargs -0 mkdir -p
find . -depth -print
cpio -o -O /target/directory
mkdir dir2; tar cvf - dir1/ --exclude "*/exclude"
tar xvf - -C dir2
mkdir dir2; find dir1 \( -type l -o -type f \) -not -wholename '*/exclude/*' -exec cp -P --parents '{}' dir2/ \;
cp /file/that/exists /location/for/new/file
cp -n src dest
find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
scp -C file remote:
cp --remove-destination `readlink bar.pdf` bar.pdf
cp --remove-destination `readlink file` file
sudo cp -a include/gtest /usr/include
cp -rf --remove-destination `readlink file` file
any_command_what_produces_relative_path_names
cpio -pamVd /new/parent/dir
find . -type f -execdir bash -c '   dest=${1//[0-9]/}   [[ -f $dest ]]
cp -- "$1" "$dest" ' _ {} \;
cat $1
ssh $2 "mkdir $3;cat >> $3/$1"
rsync -e ssh file host:/directory/.
chmod --reference version2/somefile version1/somefile
rsync -rtvpl /source/backup /destination
rsync -avz --chmod=o-rwx -p tata/ tata2/
rsync -avzn --list-only --include 'company1/' --include 'company1/unique_folder1/***' --exclude '*' -e ssh user@server.com:/path/to/old/data/ /path/to/new/data
cp -nr src_dir dest_dir
cp --parents src/prog.js images/icon.jpg /tmp/package
find ./ -depth -print
cpio -pvd newdirpathname
find .
cpio -pdumv /path/to/destination/dir
find original -type d -exec mkdir new/{} \;
find . -type d
cpio -pdvm destdir
find src/ -type d -exec mkdir -p dest/{} \; -o -type f -exec touch dest/{} \;
rsync -rl --delete-after --safe-links pi@192.168.1.PI:/{lib,usr} $HOME/raspberrypi/rootfs
find .
cpio -pdumv /path/to/destination/dir
cp -R t1/ t2
cp `which python2.7` myenv/bin/python
tar -c -C /path/on/local/machine .
docker cp - dvc:/path/on/container
tar -c foo.sh
docker exec -i theDockerContainer /bin/tar -C /tmp -x
chown --reference=file.txt -- "$tempfile"
chown --reference=oldfile newfile
chown `stat -c %U originalfile`:`stat -c %G originalfile` newfile
bash
tee /var/log/bash.out.log
find /your/webdir/ -type d -print0
xargs -0 chmod 755
find /your/webdir -type f
xargs chmod 644
find . -maxdepth 1 -type d -exec ls -dlrt {} \;
wc --lines
find . -type d -exec ls -dlrt {} \;
wc --lines
find /DIR -type f -print0
tr -dc '\0'
wc -c
find . -name "*.c" -print0
xargs -0 cat
wc -l
find -name '*php'
xargs cat
wc -l
find -name '*.php'
xargs cat
wc -l
find . -name "*.php"
xargs grep -v -c '^$'
awk 'BEGIN {FS=":"} { $cnt = $cnt + $2} END {print $cnt}'
find ./ -type f -exec wc -l {}  \;
cut -d' ' -f1
paste -sd+
bc
find ~music -type f -iname *.mp3
wc -l
find . -name '*.php'
xargs wc -l
find -type f  -exec readlink -m {} \;
gawk 'BEGIN{FS="/";OFS="/"}{$NF=tolower($NF);print}'
uniq -c
find . -atime +30 -exec ls \;
wc -l
find "$DIR_TO_CLEAN" -mtime +$DAYS_TO_SAVE
wc -l
find . -maxdepth 1 -type f -printf '%TY-%Tm\n'
sort
uniq -c
find /home/my_dir -name '*.txt'
xargs grep -c ^.*
cat foo.pl
sed '/^\s*#/d;/^\s*$/d'
wc -l
find /path/to/dir/ -type f -name "*.py" -exec md5sum {} +
awk '{print $1}'
sort
md5sum
cat foo.c
sed '/^\s*$/d'
wc -l
sed '/^\s*$/d' foo.c
wc -l
result="$(dig +short @"$server" "$domain"
wc -l)"
git ls-files
xargs file
grep "ASCII"
cut -d : -f 1
xargs wc -l
zcat Sample_51770BL1_R1.fastq.gz
wc -l
zcat *R1*.fastq.gz
wc -l
echo "123 123 123"
grep -o 123
wc -l
who
awk -F' ' '{print $1}'
sort -u
wc -l
find /usr/src -name "*.html" -exec grep -l foo '{}' ';'
wc -l
find /usr/src -name "*.html"
xargs grep -l foo
wc -l
tr -d -C X <infile
wc -c
sed 's/[^x]//g' filename
tr -d '\012'
wc -c
find /home/user1/data1/2012/mainDir -name '*.gz'
wc -l
find -name "*.gz"
wc -l
find . -name "*.java"
wc -l
find . -mindepth 1 -maxdepth 1 -type d
wc -l
find /mount/point -maxdepth 1 -type d
wc -l
diff -U 0 file1 file2
grep ^@
wc -l
find . -type f
xargs
wc -c
diff file1 file2
grep ^[\>\<]
wc -l
diff -U 0 file1 file2
grep -v ^@
wc -l
find . -type f -exec basename {} \;
wc -l
find /directory/ -maxdepth 1 -type d -print
wc -l
comm -12 <(sort file1.txt) <(sort file2.txt)
wc -l
comm -12 ignore.txt input.txt
wc -l
find /usr/ports/ -name pkg-plist\* -exec grep dirrmtry '{}' '+'
wc -l
find /usr/ports/ -name pkg-plist\* -exec grep -l etc/rc.d/ '{}' '+'
wc -l
find /usr/ports/ -name pkg-plist\* -exec grep 'unexec.rmdir %D' '{}' '+'
wc -l
find . -type d -exec basename {} \;
wc –l
find /dev/sd*[a-z] -printf .
wc -c
find /dev/sd*[a-z]
wc -l
find /data/SpoolIn -name job.history -exec grep -l FAIL {} \+
wc -l
find /data/SpoolIn -name job.history -exec grep -l FAIL {} \;
wc -l
find /data/SpoolIn -name job.history
xargs grep -l FAIL
wc -l
find -name file1
wc -l
find -name file1
wc -l
find . -name "*.php" -exec chmod 755 {} \; -exec /bin/echo {} \;
wc -l
cat /dir/file.txt
wc -l
cat /etc/fstab
wc -l
cat myfile.txt
wc -l
fold -w "$COLUMNS" testfile
wc -l
find . -name '*.php' -type f
xargs cat
wc -l
wc -l `tree -if --noreport
grep -e'\.php$'`
cat `/gnuwin32/bin/find.exe . -name *.php`
wc -l
cat *.txt
wc -l
find xargstest/ -name 'file??'
sort
xargs wc -l
find . -name "*.java" -exec wc -l {} \;
find . -name "*.rb" -type f -exec wc -l \{\} \;
find . -name "*.rb" -type f -print0
xargs -0 wc -l
git ls-files
xargs cat
wc -l
find ./ -type f -exec wc -l {}  \;
cut -d' ' -f1
paste -sd+
bc
cat $(find /usr/share/doc/ -name '*.txt')
zegrep -ic '\<exception\>'
who
grep -v localhost
wc -l
watch "ls /proc/$PYTHONPID/fd
wc -l"
find ${DIRECTORY} -type f -print
sed -e 's@^.*/@@'
grep '[aeiouyAEIOUY]'
wc -l
find . -maxdepth 1 -type f -iname '*[aeiouy]*' -printf ".\n"
wc -l
find . -type f
wc -l
find . -type f -perm 755
wc -l
find teste2 -type f -iname "$srchfor"
wc -l
find /students -type l -print 2> /dev/null
wc -l
find ./randfiles/ -type f
wc -l
who
awk '{print $1}'
sort
uniq -c
sort -n
zcat file.gz
awk -v RS="-----------\n" '/A=2[ ,\n]/ && /dummy=2[ ,\n]/{count++} !/dummy=2[ ,\n]/{other++} END{print "Final counter value=",count, "; other=", other}'
zcat file.gz
awk -v RS="-----------\n" '/A=2[ ,\n]/ && /dummy=2[ ,\n]/{count++} END{print "Final counter value=",count}'
find . -print0
tr -cd '\0'
wc -c
find . -type f -name "*.*"
grep -o -E "\.[^\.]+$"
grep -o -E "[[:alpha:]]{3,6}"
awk '{print tolower($0)}'
sort
uniq -c
sort -rn
sort file1 file2
uniq -d
wc -l
find . -type f
sed -e 's/.*\.//'
sed -e 's/.*\///'
sort
uniq -c
sort -rn
comm -23 a.txt b.txt
wc -l
who
wc -l
who
sed 1d
wc -l
echo "1 1 2 2 2 5"
tr ' ' $'\n'
grep -c 2
find . -name *.py -exec wc -l {} \;
awk '{ SUM += $0} END { print SUM }'
find . -type f -name '*.gz'
xargs zcat
wc -l
find /usr/src -name "*.html" -execdir /usr/bin/grep -H "foo" {} ';'
wc -l
time find /usr/src -name "*.html"
xargs /usr/bin/grep -l "foo"
wc -l
find .  -type f  -name '*.txt' -exec wc -l {} \;
awk '{total += $1} END{print total}'
wc -l `find . -type f -name '*.txt' `
find . -type f -exec wc -l {} \;
awk '{ SUM += $0} END { print SUM }'
df -h -B 1M
grep dev/sda
tr -s ' '
cut -d' ' -f3
python -c "import sys; print sum([int(num) for num in sys.stdin.readlines()])"
ls -l /boot/grub/*.mod
wc -l
cal -h
cut -c 4-17
tail -n +3
wc -w
find DIR_NAME -type f
wc -l
find . -maxdepth 1 -type d -print0
xargs -0 -I {} sh -c 'echo -e $(find "{}" -printf "\n"
wc -l) "{}"'
sort -n
find . -maxdepth 1 -type d -print0
xargs -0 -I {} sh -c 'echo  $(find {}
wc -l) {}'
sort -n
find . -maxdepth 1 -type d -print0
xargs -0 -I {} sh -c 'echo $(find {}
wc -l) \\t {}'
sort -rn
less
find -type f -exec printf '\n' \;
wc -l
find -type f -printf '\n'
wc -l
find . -type f
wc -l
find `pwd` -type f -exec ls -l {} \;
wc -l
cat $i
wc -l
sed '/^\s*$/d' $i
wc -l ## skip blank lines
ls -1
wc -l
wc -l `find . -type f \( -name "*.cpp" -o -name "*.c" -o -name "*.h" \) -print`
find . -name '*.php' -type f
sort
xargs wc -l
find . -name '*.php' -type f
xargs wc -l
sort -nr
find . -name '*.php' -type f
xargs wc -l
wc -l $(find . -name "*.php")
wc -l `find . -name "*.php"`
wc -l `tree -if --noreport
grep -e'\.php$'`
find . -name "*.php"
xargs wc -l
wc -l **/*.php
find . -name '*.php'
awk '{gsub(" ","\\ ", $0);print $0}'
xargs wc -l
find . -name tests -prune -o -type f -name '*.php'
xargs wc -l
find . -name "*.php" -not -path "./tests*"
xargs wc -l
find . -name '*.php'
xargs wc -l
sort -r
count=$(grep -c ^ < "$FILE")
wc -l < $FILE
wc -l $file
awk '{print $1}';
cat $file
sed '/\/\//d'
sed '/^\s*$/d'
wc -l
pv file1
wc -l
cat 'filename'
grep '[^ ]'
wc -l
bar file1
wc -l
tail -n 100 file1
bar
wc -l
tail -n 100 file1
pv
wc -l
awk '!/^[[:space:]]*$/{++x} END{print x}' filename
command
wc -l
wc -l file
cat /dir/file.txt
wc -l
wc -l /dir/file.txt
cat /etc/fstab
wc -l
cat *.txt
wc -l
cat myfile.txt
wc -l
grep -n -i null myfile.txt
wc -l
grep -v '^\s*$' *.py
wc
cat fileName
grep -v ^$
wc -l
find . -name '*.php'
wc -l
curl yahoo.com --silent
wc -l
grep "OK" <filename>
wc -l
cat ip_addresses
sort
uniq -c
sort -nr
awk '{print $2 " " $1}'
NUMCPU=$(grep $'^processor\t*:' /proc/cpuinfo
wc -l)
find . -name "*.php"
xargs grep -v -c '^$'
awk 'BEGIN {FS=":"} { cnt = cnt + $2} END {print cnt}'
find . -name '*.php' -o -name '*.inc'
xargs wc -l
wc -l $(git ls-files
grep '.*\.cs')
git ls-files
grep -P ".*(hpp
cpp)"
xargs wc -l
git ls-files
grep "\.java$"
xargs wc -l
git ls-files
sed 's/ /\\ /g'
grep -E "\.*(swift$
mm$)"
xargs wc -l
git ls-files
grep -vE "(png
jpg
ico)"
xargs wc -l
git ls-files -z
xargs -0 wc -l
git ls-files
xargs -d '\n' wc -l
git ls-files
xargs wc -l
wc -l $(git ls-files)
wc -l --files0-from=<(git ls-files -z)
git ls-files
xargs file
grep "ASCII"
cut -d : -f 1
xargs wc -l
git ls-files
xargs cat
wc -l
cat `/gnuwin32/bin/find.exe . -name *.php`
wc -l
find . -name '*.js' -or -name '*.php'
xargs wc -l
grep 'total'
awk '{ SUM += $1; print $1} END { print "Total text lines in PHP and JS",SUM }'
find . -name '*.php' -type f
xargs cat
wc -l
find . -type f -name '*.php' -exec bash -c 'wc -l "$0"' {} \;
awk '{s+=$1} END {print s}'
find / -name '*.py' -exec cat \{} \;
tqdm --unit loc --unit_scale True
wc -l
git grep ^
wc -l
find ./ -type f -exec wc -l {}  \;
cut -d' ' -f1
paste -sd+
bc
find . -name '*.php'
xargs cat
awk '/[a-zA-Z0-9]/ {i++} END{print i}'
find . -type f -name "*" -newermt 2013-12-04 ! -newermt 2013-12-05
xargs -I {} tar -czvf files.tar.gz {}
seq 1 1000
split -l 1 -a 3 -d - file
join -j2  <(seq 0 255) <(seq 0 255)
xargs -n256 printf "%02x/%02x\n"
xargs mkdir -p
echo "a.txt b.txt c.txt d.txt z.txt"
xargs touch
tmp=$(mktemp -d $(dirname "$1")/XXXXXX)
tmpfile=$(mktemp $(dirname "$file1")/XXXXXX)
tmpfile=$(mktemp $(dirname "$1")/XXXXXX)
mkdir -p folder$( seq -s "/folder" 999 )1000
dd if=/path/to/source/file bs=1 skip=100 count=250
md5sum
find dir/ -name '*.txt'
tar -c --files-from=-
bzip2 > dir_txt.tar.bz2
find /var/log -name '*.log'
tar cv --files-from=-
bzip2 > log.tar.bz2
find dir/ -name '*.txt'
tar -c --files-from=-
bzip2 > dir_txt.tar.bz2
tar czf - www
split -b 1073741824 - www-backup.tar.
tar -czvf my_directory.tar.gz -C my_directory .
tar --one-file-system -czv /home
split -b 4000m - /media/DRIVENAME/BACKUPNAME.tgz
find . -mindepth 1 -maxdepth 1 -type d
grep \/a
xargs -n 1 cp -i index.html
find . -mindepth 1 -maxdepth 1 -type d
xargs -n 1 cp -i index.html
find . -type d -print
sed 's@^@/usr/project/@'
xargs mkdir
find . -type d -print
sed 's@^@/usr/project/@'
xargs mkdir -p
mkdir alpha_real
ln -s $(readlink -f $origlink) $newlink
find $sourcePath -type f -name "*.log" -exec tar -uvf $tarFile {} \;
ln myfile.txt my-hard-link
ssh -i keyfile.rsa -T -N -L 16379:localhost:6379 someuser@somehost
screen -S main
screen -X title mynewtitle
screen -x 2073 -p 0 -X title h
screen -x main -X title blah
screen -x main -p oldwindow -X title blah
echo -e  'y\n'
ssh-keygen -q -t rsa -N "" -f ~/.ssh/id_rsa
rsync /dev/null node:existing-dir/new-dir/
screen -S demo -p 1 -X screen '/home/aa/scripts/outputs.sh'
find /path/to/drive -type f -exec file -b '{}' \; -printf '%s\n'
awk -F , 'NR%2 {i=$1} NR%2==0 {a[i]+=$1} END {for (i in a) printf("%12u %s\n",a[i],i)}'
sort -nr
ssh-keygen -b 2048 -t rsa -f key -C michael
ssh-keygen -t rsa -C "$APP" -N "$SSHKEYPASS" -f ~/.ssh/id_rsa
(rsync -rcn --out-format="%n" old/ new/ && rsync -rcn --out-format="%n" new/ old/)
sort
uniq
ssh-keygen -f ~/.ssh/apache-rsync
ssh-keygen -t rsa
ssh-keygen -f outfile -N ''
ssh -N -L 2222:remote.example.com:22 bridge.example.com&
ln -s target
ln -s target-directory/`ls -rt target-directory
tail -n1` latest
ln -s `pwd`/current/app/webroot public_html
find /foo -maxdepth 1 -type f ! -name 'runscript*' -exec ln -s {} /bar/tmp/ \;
find $PWD -name '.[^.]*' -exec ln -s '{}' /path/to/dir \;
find original -type f -exec ln -s {} new/{} \;
cat results2.txt
xargs -I{} ln -s {} ~/newlinks
find $PWD -type f -exec ln -st $tmpdir {} +
ln -s "$source" -t ~/newlinks
ln -s "$(find dir -name '*.jpg')" .
find /home/michael/foxpro/mount/A[1FV]/[12][0-9][0-9][0-9] -name '*.dbf' -type f -exec ln -s {} \;
find ../[12][0-9][0-9][0-9] -type f -exec ln -s {} \;
ln -s git-stuff/home/.[!.]* .
ln -s "$file"
ln -s "../config/init"
ln -s "`pwd`" $1/link
ln -s "$(readlink -e "$2")" "$1/link"
ln -s $HOME/downloads/fnord $HOME/bin/
ln -s "$ACTUAL_DIR" "$SYMLINK"
ln -s "$(which bam2)" "$tmpdir"/bam
ln -s  "${TARGET}${file}"  "${DESTINATION}${file}"
ln -s .bashrc .bash_profile
ln -sn git-stuff/home/profile .profile
ln -s /lib/libc.so.6 /lib/libc.so.0
ln -sF /usr/share/my-editor/my-editor-executable   /usr/bin/my-editor
sudo ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" /usr/local/bin/subl
ln -s   /var/cache/apt/archives/bash_4.3-14ubuntu1_amd64.deb foo
ln -s newtarget temp
ln -s "$wh" wh
ln -s "/Applications/Sublime Text 2.app/Contents/SharedSupport/bin/subl" ~/bin/subl
ln -s "/Applications/Sublime Text.app/Contents/SharedSupport/bin/subl" ~/bin/subl
ln -s $file `basename $file`
ln -r -s "$orig_dest" "$dest_dir/$orig_name"
ln $file /tmp/allfiles
sudo ln -s /usr/bin/perl /usr/local/bin/perl`echo -e '\r'`
ln -s "$dir" "$1/link"
ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/
ln -s /Applications/Sublime\ Text.app/Contents/SharedSupport/bin/subl /usr/local/bin/
ln -s /Applications/Sublime\ Text\ 2.app/Contents/SharedSupport/bin/subl /usr/local/bin/
join -a1 -a2 <(sed s/^Gene/00ne/ S43.txt
sort) <(sed s/^Gene/00ne/ S44.txt
sort)
column -t
sed s/^00ne/Gene/
echo -en '111 22 3\n4 555 66\n'
column -t
sed 's/ \([0-9]\)/\1/g'
tar cvf - `find . -mtime -1 -type f -print` > $archive.tar
find data/ -print0
tar --null -T - --create -f archive.tar
find data/ -print0
tar -T - --null --create -f archive.tar
find . -type f -name "*.java"
xargs tar cvf myfile.tar
find ~/Library -name '* *' -print0
xargs -0 tar rf blah.tar
tmpdir=$(mktemp -d)
cd $tmpdir
source  <(date +"CDATE='%Y-%m-%d %H:%M:%S' EPOCH='%s'")
export FOO_BACKWARDS=$(echo 'foo'
rev)
find $sourcePath -type f -name "*.log"
xargs zip $zipFile -@
sudo mkdir -p $javaUsrLib
mkdir -p $tempWork
find ./test -printf "././%f\n"
cpio -o -F newArch
find -name "bar" -execdir touch foo \;
touch -m 201111301200.00 $log_dir/last.check
touch "$correctFilePathAndName"
cp /dev/null emptyfile.c
find . -type d -name "mydir" -exec touch '{}/abc.txt' \;
find . -type d -name "mydir" -print
sed 's/$/\/abc.txt/g'
xargs touch
echo -e "Icon\\r"
xargs touch
touch $'Icon\r'
find . -type d -exec touch {}/index.html \;
touch index.html
find . -mindepth 1 -maxdepth 1 -type d
awk 'BEGIN {FS="./"}; {print $2}'
xargs -d '\n' tar czf backup1.tar
tar cz my_large_file_1 my_large_file_2
split -b 1024MiB - myfiles_split.tgz_
find . -type f -mtime -7 -print -exec cat {} \;
tar cf -
gzip -9
mkdir -p ./some/path
rsync -a --rsync-path="mkdir -p /tmp/x/y/z/
rsync" $source user@remote:/tmp/x/y/z/
find ~ -type d -exec mkdir junk {} \; 2> /dev/null
mkdir dir2
touch filename_`/bin/date +%Y%m%d%H%M%S`.txt
echo -e "$correctFilePathAndName"
xargs touch
find test -path 'test/icecream/cupcake/*' -o -path 'test/mtndew/livewire/*'
cpio -padluv test-keep
mkdir -p a/b/c
mkdir -p `dirname /full/path/to/file.txt`
mkdir -p tmp/real_dir1 tmp/real_dir2
mkdir -p x/p/q
mkdir -p $2
mkdir -p /my/other/path/here
mkdir -p /tmp/test/blah/oops/something
mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}
mkdir -p directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}
mkdir -p foo/bar/baz
mkdir -p ~/foo/bar/baz ~/foo/bar/bif ~/foo/boo/bang
mkdir -p path2/{a..z}
find . -type f -mtime +1000 -print0
cpio -dumpl0 /home/user/archives
ssh -M -S my-ctrl-socket -fnNT -L 50000:localhost:3306 jm@sampledomain.com
du -csxb /path
md5sum > file
cat <(fgrep -i -v "$command" <(crontab -u test -l)) <(echo "$job")
crontab -u test -
cat <(fgrep -i -v "$command" <(crontab -l)) <(echo "$job")
crontab -
find . -type f
xargs stat -c "%a %n"
awk '{print "chmod "$1" "$2}' > ./filesPermissions.sh
find . -type f
xargs ls -la
awk '{print "chmod "$1" "$NF}'>./filesPermissions.sh
find ~/junk -exec touch ~/junk/cart{1,2,3,4,5,6} {} \; 2> /dev/null
ssh -L 4444:raptor.lan:22 genja.org
ln -s "$(readlink -e "$2")" "$1/link"
find dir -name '*.jpg' -exec ln -s "{}" \;
find /your/project -maxdepth 1 ! -name "CONFIGFILE" -exec ln -s \{\} ./ \;
find /your/project -type f ! -name 'CONFIGFILE' -exec ln -s \{\} ./ \;
find /path/with/files -type f -name "*txt*" -exec ln -s {} . ';'
find bar1 -name '*foo*' -not -type d -not -name '*.cc' -exec ln -s $PWD/'{}' bar2/ \;
find /home/folder1/*.txt -type f -exec ln -s {} "folder1_" +\;
find /home/folder1/*.txt -type f -exec ln -s {} "folder2_" + \;
find /home/folder1/*.txt -type f -exec ln -s {} \;
find /home/folder2/*.txt -type f -exec ln -s {} \;
find /tmp/a1 -exec tar -rvf dirall.tar {} \;
find /tmp/a1 -print0
tar --null -T- -cvf dirall.tar
find /tmp/a1
xargs tar cvf foo.tar
find /home/testuser/log/ -mtime +1
xargs  tar -czvPf  /opt/older_log_$(date +%F).tar.gz
mkdir ~/.npm-global
mkdir "${HOME}/.npm-packages"
find /path/to/dir -name '*.pdf' -exec convert -thumbnail x80 {}[0] {}-thumb.png \;
rand_str="$(mktemp --dry-run XXXXX)"
ifconfig eth0:fakenfs 192.0.2.55 netmask 255.255.255.255
tmux new-session -ds cf
dir="$(mktemp aws-sync-XXXXX)"
shred -s 10 - > my-file
mkdir -p -- "$(dirname -- "$f")"
set script_dir = `pwd`/`dirname $0`
rand_str=$(mktemp --dry-run ${str// /X})
my_tmp_dir=$(mktemp -d --tmpdir=/tmp)
TMPDIR=$(mktemp -p /tmp -d .daemonXXXXXXX)
content_dir1=$(mktemp)
content_dir2=$(mktemp)
fif2=$(mktemp -u)
tmpfile=$(mktemp)
tmpfile=`mktemp`
mktemp -t identifier.XXXXXXXXXX
launcherfile=$(mktemp -p "$appdir" "$template")
TMPPS_PREFIX=$(mktemp "${TMPDIR:-/tmp/}${tempname}.XXXXXX")
tempFile="$(mktemp "${TMPDIR:-/tmp/}$(basename "$0")-XXXXX")"
mktemp
f=`mktemp -p .`
tempfile=$(mktemp $(pwd)/templateXXXXXX)
source=`mktemp`
TMP_FILE="$(mktemp -t)"
LGT_TEMP_FILE="$(mktemp --suffix .cmd)"
gnuplotscript=$(mktemp /tmp/gnuplot_cmd_$(basename "${0}").XXXXXX.gnuplot)
script1=`mktemp /tmp/.script.XXXXXX`;
script2=`mktemp /tmp/.script.XXXXXX`;
tmp_file=`mktemp --tmpdir=/tmp emacs-manager.XXXXXX`
mytemp="$(mktemp -t "${PROG}")"
mktemp /tmp/banana.XXXXXXXXXXXXXXXXXXXXXXX.mp3
TMPDIR=$(mktemp -d)
other="$(mktemp --directory)"
td=$( mktemp -d )
tempd=`mktemp -d`
mktemp -d -t
dir=$(mktemp -d)
tmpdir=$(mktemp -d)
$ my_temp_dir=$(mktemp -d --tmpdir=$temp_dir -t $template)
mydir=$(mktemp -d "${TMPDIR:-/tmp/}$(basename $0).XXXXXXXXXXXX")
tmpdir=$(mktemp -d /tmp/tardir-XXXXXX)
mktemp -d -p /path/to/dir
mktemp -dt "$(basename $0).XXXXXXXXXX"
rsync_src=`mktemp -d -p $mnt_dir`
tdir="$(pwd)/$(mktemp -d)"
sed -n 's;\(http://[^/]*\)/.*;\1;p'
sed -n 's;\(http://[^/]*/\).*;\1;p'
echo '1234567890  *'
rev
cut -c 4-
rev
rmdir "$(dirname $dir)"
rmdir "$(dirname $(dirname $dir))"
nslookup `hostname`
gzip -dc /file/address/file.tar.gz
awk -F'\t' 'NR==FNR{a[$5];next} $5 in a' <(zcat file2.txt) <(zcat file1.txt)
gzip -dc path/to/test/file.gz
grep -P 'my regex'
grep -vP 'other regex'
split -dl1000000 - file
gzip -dc path/to/test/file.gz
grep -P --regexp='my regex'
split -dl1000000 - file
gzip -dc path/to/test/file.gz
grep -P --regexp='my regex'
split -l1000000
gzip -d ${set1[@]} &
gzip -d file.gz
gzip -d --stdout file.gz
bash
gzip -dc /usr/src/redhat/SOURCES/source-one.tar.gz
tar -xvvf -
gzip -dc archive.tar.gz
tar -xf - -C /destination
gzip -dc libxml2-sources-2.7.7.tar.gz
tar xvf -
sort -m <(zcat $part0
sort) <(zcat $part1
sort)
gzip -dc hello-0.2.tar.gz
tar -xf -
find . -name "*.bz2" -print0
xargs -I{} -0 bzip2 -dc {}
cut -f, -d4
bzip2 -dc xac.bz2
bzip2 -d /tmp/itunes20140618.tbz
tr -d "\n\r" < yourfile.txt
find . -type f
xargs grep 'string_to_find' -sl
xargs perl -pi -w -e 's/string_to_find//g;'
find test -name ".DS_Store" -delete
COLUMN=`echo $1
tr -d -`
find /var/www -maxdepth 4 -name 'restore.php' -exec rm -r {} \;
find . -name "*.zip" -mtime +2 -print0
xargs -0 -I {} rm {}
find . -name "*.zip" -mtime +2 orint0
xargs -0 rm
find . -name "*txt" -type f -print
xargs rm
find . -name "*.bam"
xargs rm
find . -name "*.pyc"
xargs -0 rm -rf
find . -name "*.pyc"
xargs rm -rf
find . -type d -name .svn -print0
xargs -0 rm -rf
find . -depth -name .svn -exec rm -fr {} \;
find . -name .svn -delete
find . -name .svn -exec rm -rf '{}' \;
find . -name .svn -exec rm -rf {} +
find . -name .svn -exec rm -rf {} \;
find . -name .svn -exec rm -v {} \;
find . -name .svn
xargs rm -fr
find . -name .svn
xargs rm -rf
rm -rf `find . -type d -name ".svn"`
find . -iname "1US*" -exec rm {} \;
find ~/mydir -iname '*.htm' -exec rm {} \;
find /tmp -iname '*.mp3' -print0
xargs -0 rm
find . -maxdepth 1 -type d -name '__temp__*' -print0
xargs -0 rm -rf
find . -depth -name '__temp__*' -exec rm -rf '{}' \;
find . -name __temp__* -exec rm -rf '{}' \;
find -L /usr/ports/packages -type l -exec rm -- {}	+
ls -tr
head -n -5
xargs rm
(ls -t
head -n X;ls)
sort
uniq -u
xargs rm
find / -maxdepth 1 -xdev -type f
xargs grep -l 'string'
xargs perl -pi -e 's/.*\n//g'
find / -maxdepth 1 -xdev -type f -exec grep -Zli "stringtofind" {} +
parallel -0 sed "'/./d'" '{}'
find / -maxdepth 1 -xdev -type f -exec grep -i "stringtofind" -l {} \; -exec sed -i '/./d' {} \;
find / -maxdepth 1 -xdev -type f -exec grep -i "stringtofind" -q "{}" \; -print0
xargs -0 sed '/./d'
find / -maxdepth 1 -xdev -type f -exec grep -li "stringtofind" {} +
parallel sed "'/./d'" '{}'
find / -maxdepth 1 -xdev -type f
xargs grep -l 'string'
xargs perl -pi -e 's/.//g'
find $LOGDIR -type d -mtime +5 -exec rm -rf {} \;
find root -mindepth 2 -type d 2>/dev/null -exec rm -fR {} \;
find /myDir -type d -delete
find /TBD -mtime +1 -type d
xargs rm -f -r
find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -delete
find .cache/chromium/Default/Cache/ -mindepth 1 -type d -size +100M -exec rm -rf {} \;
find <directory_name> -type d -exec sh -c "cd {}
[ -d live ]
[ -d test ]
cd ../
echo \"Deleting {}\"
rm -rvi {} " {} \;
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} `;`
find directory -mindepth 1 -type d -empty -delete
find root -mindepth 2 -type d -empty -delete
find test -depth -type d -empty -delete
find /some/parrent/dir -type d
while read d ; do ls "$d"/* &>/dev/null
rm -r "$d"; done
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} `;`
find -type d -empty
find root -type -d -empty -delete
find test -depth -type d -empty -delete
find test -depth -empty -delete
find . -type f -empty -delete
find test -depth -empty -delete
find directory -mindepth 1 -type d -empty -delete
find /dir -name "filename*" -type f -delete
find /dir -name "filename*" -type f -exec rm {} \;
find /dir -name "filename*" -type f -print
xargs rm
find . -name "core" -exec rm -f {} \;
find -delete
find . -type f -name "Foo*" -exec rm {} \;
find "$DIR" -type f -atime +5 -exec rm {} \;
find "${S}/bundled-libs" \! -name 'libbass.so' -delete
find "$DIR" -type f -atime +5 -exec rm {} \;
find /TBD/* -mtime +1 -exec rm -rf {} \;
find /myDir -mindepth 1 -mtime 7 -delete
find /myDir -mindepth 1 -mtime 7 -exec rm -rf {} \;
find /myDir -mindepth 1 -mtime +7 -delete
find /myDir -mtime 7 -exec rm -rf {} \;
find /TBD/* -mtime +1
xargs rm -rf
find . -name "*~" -delete
find . -name "*~" -exec rm {} \;
find . -exec /bin/rm {} \;
find ~ -atime +100 -delete
find . -name "filename" -and -not -path "./path/to/filename" -delete
find . -name "filename" -and -not -path "*/myfolder/filename" -delete
find . -name "-F" -exec rm {} \;
find ~/Books -type f -name Waldo -exec rm {} \;
sudo find /home/user/Series/ -iname sample -exec rm {} \;
find / -nouser
xargs -0 rm
find . -type f -atime +30 -exec rm {} \;
find /path-to-directory -mtime +60 -exec rm -f {} \;
find / -nouser
xargs -0 rm
find $DESTINATION -mtime +7 -exec rm {} \;
find $INTRANETDESTINATION/monthly -mtime +366 -exec rm {} \;
find $INTRANETDESTINATION/weekly -mtime +32 -exec rm {} \;
find /home/backups -type f -iregex '.*\.t?gz$' -mtime +60 -exec rm {} \;
find /path/to/files -type f ! -newer dummyfile -delete
find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \{\} \; -delete
find -mindepth 1 -delete
find . -name "*.$1" -exec rm {} \;
find root -type -f -cmin +30 -delete
find ~ -used +365 -ok rm '{}' ';'
find project / src / -name "* .o" -exec rm -f {} \;
find . -name “*.old” -exec rm {} \;
find . -name “*.old” -print
xargs rm
find . -inum 128128
xargs rm
find . -inum $inum -exec rm {} \;
find -inum 804180 -exec rm {} \
find root -mindepth 2 -delete
find . -name "FILE-TO-FIND" -exec rm -rf {} \;
find -name file -delete
sudo find /home/user/Series/ -iname sample -print0
sudo xargs -0 rm -r
find . -maxdepth 2 -name "test" -exec rm -rf {} \;
find /path/to/files* -mtime +2 -delete
find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf '{}' ';'
find * -maxdepth 0 -name 'b' -prune -o -exec rm -rf {} \;
find -delete
find . ! -name '.gitignore' ! -path '.git' ! -path '.git/*' -exec rm -rf {} \;
find . -name "*.$1" -delete;
find . -name “*.old” -delete
find -inum 117672808 -exec rm {} \;
find . -inum $inum -exec rm {} \
find /home -xdev -inum 2655341
xargs rm
find $FOLDER -name ".*" -delete
find "$some_directory" -type f -name '.*' -delete
find "$some_directory" -type f -name '.*' -exec rm '{}' \;
find "$some_directory" -type f -name '.*'
xargs rm
find "$some_directory" -name '.*' ! -name '.' ! -name '..' -delete
find $some_directory '.*' -delete
find . -delete
grep -v "pattern" file > temp
mv temp file
sed -i.bak '/pattern to match/d' ./infile
sed -i '/pattern/d' filename
sed --in-place '/some string here/d' yourfile
find ./ -type f -name \*.php -exec sed -i ’s/^.*iframe bla bla bla.*$//g’ {} \;
echo "${depsAlastmodified[$i]}"
tr -cd '[[:digit:]]'
od -c
find . -type f -name "FILE-TO-FIND" -exec rm -f {} \;
find . -type f -name "FindCommandExamples.txt" -exec rm -f {} \;
find . -type f -name "IMAG1806.jpg" -exec rm -f {} \;
find . -type f -name 'IMAGE1806.jpg' -delete
find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
find $DIR -type f -mtime +60w -exec rm {} \;
find $OUTPUTDIR -type f -mtime +7 -delete
find -O3 "$save_path" -depth -mindepth 1 -name 'sess_*' -ignore_readdir_race -type f -cmin "+$gc_maxlifetime" -delete
find "$DIR" -type f \! -newer "$a" -exec rm {} +
find . -type f -print0
xargs -0 /bin/rm
find $HOME/Library/Safari/Icons -type f -atime +30 -name "*.cache" -print -delete
find /home/u20806/public_html -daystart -maxdepth 1 -mmin +25 -type f -name "*.txt" \ -exec rm -f {} \;
find /home/u20806/public_html -maxdepth 1 -mmin +25 -type f -name "*.txt" -delete
find . -type f -inum 314167125 -delete
ipcs -a
nawk -v u=`whoami` '$5==u &&(($1=="m" && $9==0)
($1=="s")){print "ipcrm -"$1,$2,";"}'
/bin/sh
ipcs
nawk -v u=`whoami` '/Shared/,/^$/{ if($6==0&&$3==u) print "ipcrm shm",$2,";"}/Semaphore/,/^$/{ if($3==u) print "ipcrm sem",$2,";"}'
/bin/sh
find <directory_name> -type d -exec sh -c "cd {}
[ -d live ]
[ -d test ]
echo \"Deleting test from {}\"
rm -rvi test " {} \;
find -maxdepth 1 -type d -exec sh -c "cd {}
[ -d test ]
[ -d live ]
rm -rvf test " {} \;
find . -name "*.c"
xargs rm -f
find . -name heapdump* -exec rm {} \ ;
find . -name heapdump*
xargs rm
find "$DIR_TO_CLEAN" -mtime +$DAYS_TO_SAVE -exec bash -c 'printf "Total: %d\n" $#; rm "$@"' _ {} +
find "$DIR_TO_CLEAN" -mtime +$DAYS_TO_SAVE -exec bash -c 'printf "count=0; for f; do rm "$f"
(( count++ )); done; printf "Total: %d\n" $count' _ {} +
find "$DIR_TO_CLEAN" -type -f -mtime "+$DAYS_TO_SAVE" -exec rm {} \; -exec printf '.' \;
wc -c
find "$DIR_TO_CLEAN" -type -f -mtime "+$DAYS_TO_SAVE" -exec rm {} \; -printf '.'
wc -c
find "$DIR_TO_CLEAN" -type f -mtime +$DAYS_TO_SAVE -print0
awk -v RS='\0' -v ORS='\0' '{ print } END { print NR }'
xargs -0 rm
finger
cut --complement -c36-40
finger
sed 's/\(.\{35\}\)...../\1/'
crontab yourFile.text
find . -type d -empty -delete
find . -empty -delete -print
sed -n "s/^$//;t;p;"
find . -type f -empty -delete
seq 10
sed '0~2d'
printf 'foobar\n\377'
tr -d '\0-\176'
od -t c
find -mindepth 1 -maxdepth 1 -print0
xargs -0 rm -rf
find . -type f -inum 314167125 -delete
find /mnt/zip -name "*doc copy" -execdir rm "{}" \;
find . -name "* *" -exec rm -f {} \;
find . -name '*[+{;"\\=?~()<>&*
$ ]*' -maxdepth 0 -exec rm -f '{}' \;
find "$DIR_TO_CLEAN" -mtime +$DAYS_TO_SAVE -exec rm {} \;
find "$DIR_TO_CLEAN" -mtime +$DAYS_TO_SAVE
while read FILE; do rm "$FILE"; done
find /var/tmp/stuff -mtime +90 -delete
find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \+
find /var/tmp/stuff -mtime +90 -exec /bin/rm {} \;
find /var/tmp/stuff -mtime +90 -execdir /bin/rm {} \+
find /var/tmp/stuff -mtime +90 -print
xargs /bin/rm
find /var/tmp/stuff -mtime +90 -print0
xargs -0 /bin/rm
find DIR \( -name 2015\* -a \( -name \*album\* -o -name \*picture\* \) \) -delete
find ./ -mtime +31 -delete
find $LOCATION -name $REQUIRED_FILES -type f -mtime +1 -delete
find $LOCATION -name $REQUIRED_FILES -type f -mmin +360 -delete
find . -inum 782263 -exec rm -i {} \;
find . -inum [inode-number] -exec rm -i {} \;
history -d "$1"
find /var/tmp/stuff1 -mtime +90 -delete &
find . -inum 782263 -exec rm -i {} \;
grep -v '^2 ' file
cut -d' ' -f2-
nl -w1 -s' '
var=`hg st -R "$path"
tr -d '\n'`
find . -type f -iname '*.un~'
while read UNDOFILE ; do FILE=$( echo "$UNDOFILE"
sed -r -e 's/.un~$//' -e 's&/\.([^/]*)&/\1&' ) ; [[ -e "$FILE" ]]
rm "$UNDOFILE" ; done
find . -type f -iname '*.un~'
while read UNDOFILE ; do FILE=$( echo "$UNDOFILE"
sed -r -e 's/.un~$//' -e 's&/\.([^/]*)&/\1&' ) ; [[ -e "$FILE" ]]
rm "$UNDOFILE" ; done
find . -name bad -empty -delete
finger
awk -F"\t" -v 'OFS=\t' '{ $4=""; print $0}'
sed 's/\t\{2,\}/\t/'
for h in $(seq 1006 1008
tac); do history -d $h; done
xargs -n 1 -I '{}' find "$(pwd)" -type f -inum '{}' -delete
tail -n +2 "$FILE" > "$FILE.tmp"
mv "$FILE.tmp" "$FILE"
sed '/start/,+4d'
ls -tr $(find /home/backups -name '*.gz' -o -name '*.tgz')
head -1
xargs rm -f
find index.html
xargs -rt sed -i 's/<script>if(window.*<\/script>//g'
rmdir nonsense_dir
find /tmp/*/* -mtime +7 -type d -exec rmdir {} \;
column -s: -t
find /etc -execdir echo "{}" ';'
who am i
awk '{print $5}'
sed 's/[()]//g'
cut -f1 -d "."
sed 's/-/./g'
df /full/path
grep -q /full/path
lshw -class cpu
grep "^       width"
uniq
awk '{print $2}'
who
grep $USER
who -m
ssh -x remoteServer "cd yourRemoteDir; ./yourRemoteScript.sh </dev/null >/dev/null 2>&1 & "
set +e
set +m
set -f
set -o noclobber
shopt -u compat31
shopt -u dotglob
shopt -u nocasematch
shopt -u nullglob
echo $line
cut -c2-
md5sum
find /home/*/public_html/ -type f \( -iwholename '*/libraries/joomla/version.php' -o -iwholename '*/libraries/cms/version.php' -o -iwholename '*/libraries/cms/version/version.php' \) -print0 -exec perl -e 'while (<>) { $release = $1 if m/ \$RELEASE\s+= .([\d.]+).;/; $dev = $1 if m/ \$DEV_LEVEL\s+= .(\d+).;/; } print qq( = $release.$dev\n);' {} \;
column -x -c 30 /tmp/file
cat infile
od -c
cat file.txt
perl -ne 's/foo/bar/g;'
less
echo 12345
rev
echo 798
rev
last -i
grep $(whoami)
grep 'still logged in'
php -i
more
od -t x1 file
cut -c8-
od -c oldfile
find -P . -type f
rev
cut -d/ -f2-
rev
cut -d/ -f1-2
cut -d/ -f2-
sort
uniq -c
ls -l
more
od -t fD file
od -t fD
cowsay "hello"
rev
find $dir -type -f size +$size -print0
xargs -0 ls -1hsS
find /your/dir -type f -size +5M -print0
xargs -0 ls -1Ssh
find $STORAGEFOLDER -name .todo  -exec ls -l {} \;
find . -perm 0777 -type d -exec ls -l {} \;
find /nas -type d -ls
find -name file -ls
find /var/ -size +10M -ls
find /usr/bin -type f -size -50c -exec ls -l '{}' ';'
find . -perm 0777 -type f -exec ls -l {} \;
find . -newer Nov -ls
find / -type f -user root -perm -4000 -exec ls -l {} \;
find / -type f -user bluher -exec ls -ls {}  \;
find . -type f -newermt ‘Apr 18 23:59:59 EDT 2013’ ! -newermt ‘Apr 20 00:00:00 EDT 2013’ -exec ls -l ‘{}’ \;
find /var/ -size +10M -exec ls -lh {} \;
find /home/backups -printf "%T@ %p\n"
sort -n
head -1
cut -d" " -f2-
xargs ls -al
od -a test.sh
fold -w1 filename
sort
uniq -c
sort -nr
objdump -x `which tail`
set
more
find /usr/X11/man/man5 -print
find man5 -print
tree -P "*foo"
find /home -group test
cat dax-weekly.csv
awk '{a[i++]=$0} END {for (j=i-1; j>=0;) print a[j--] }'
cat /boot/System.map-`uname -r`
grep funcname
grep something file
more
find . -type f
sed '/.\/dir[12]\/[^/]*$/d'
find -P .  -maxdepth 1 -type l -exec echo -n "{} -> " \; -exec readlink {} \;
find -P . -type l -exec echo -n "{} -> " \; -exec readlink {} \;
find /home/bozo/projects -mtime -1
set derby
ab=`ps -ef
grep -v grep
grep -wc processname`
yes
cat
more
yes
more
set
grep -A999 '^foobar ()'
grep -m1 -B999 '^}'
set
sed -n '/^foobar ()/,/^}/p'
echo `uname -a
awk '{print $2}'`
uname -srvm
cp --help
diff -y one.txt two.txt
diff /destination/dir/1 /destination/dir/2 -r -x *.xml
diff /destination/dir/1 /destination/dir/2 -r -X exclude.pats
diff -x '*.foo' -x '*.bar' -x '*.baz' /destination/dir/1 /destination/dir/2
diff -y /tmp/test1  /tmp/test2
diff /tmp/test1  /tmp/test2
diff -y a b
diff -Naur dir1/ dir2/
diff -r dir1 dir2
diff -r dir1/ dir2/
diff -ENwbur repos1/ repos2/
diff -y file1 file2
diff -a --suppress-common-lines -y a.txt b.txt
diff dir1.txt dir2.txt
diff <(ls /bin) <(ls /usr/bin)
diff <(./a) <(./b)
diff /tmp/ksh-{9725,9781}.log
grep ^\<
rev file.txt
set
grep "^_="
find . -type f -exec stat {} + > /dev/null
find . -type f -exec stat {} \; > /dev/null
find . -type f -exec stat {} \; > /dev/null
file file-name
which file
xargs file
cat -n file.txt
less
less -N file.txt
uname -i
uname -n
file ascii.txt
file utf8.txt
time find . -type f -exec stat {} + > /dev/null
yes 'c=(╱ ╲);printf ${c[RANDOM%2]}'
bash
yes 'printf \\u$[2571+RANDOM%2]'
bash
awk '{printf "%s ", $0} END {printf "\n"}' inputfile
awk '{printf "%s ", $0}' inputfile
awk '{printf "%s
", $0} END {printf "\n"}' inputfile
awk 1 ORS=' ' file
uname -s -r -v
uname -r
tail -1000 file-with-line-too-long.txt
more
ls *.txt
tee /dev/tty txtlist.txt
find /tmp -user me -ls
uname -m
file -ib "$file"
file --mime myfile.txt
env
grep '^variable='
find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
uname -r
cut -d. -f1-2
uname -r
sed 's/\([0-9]\+\.[0-9]\+\)\..*/\1/'
sed 's/$/p/' file_of_line_numbers
sed -nf - source
file -bi myfile.txt
uname -o
tree -p -u -g -f
tree -p -u -g -f -i
dmidecode
more
df '/some/directory'
awk '{print $1, $6}'
column -s"${tab}" -t
cat
od -b
od -cAn;
du --summary --human-readable *
du -sh *
uname -a
man bash
less -Ip "\\\'"
find . -type f -exec ls -s {} \;
sort -n -r
head -5
find . -not -empty -type f -exec ls -s {} \;
sort -n
head -5
find . -type f -exec ls -s {} \;
sort -n
head -5
find -type f -exec du -Sh {} +
sort -rh
head -n 5
cat YourFile.txt
more
more YourFile.txt
cat `which ~/f`
column -t file
uniq -w12 -c
cat myfile
zcat sample_0001.gz
sed -e 's/lk=1&//g'
cat text
fold -80 your_file
more
more /var/log/syslog
grep -v '^$\
^#\
^\s*\#' filename
grep -v "^[[:space:]]*$"
more
echo "$a"
awk '{print tolower($0)}'
find home/magie/d2 -type f -perm -u+rx
wc -l
find home/magie/d2 -type f -perm +111
wc -l
tree -I '3rd*'
diff -y -W 150 file1.cf file2.cf
grep -E -m 1 -n 'old' file
sed 's/:.*$//' -
sed 's/$/s\/old\/new\//' -
sed -f - file
tree /
du -sb /data/sflow_log
cut -f1
$ file /bin/bash
find . -print
grep "/${prefix}${ypatt}"
od -t x1 -An /bin/ls
head
od -c foo
head -2
ssh-keygen -l -E md5 -f /etc/ssh/ssh_host_ecdsa_key.pub
ssh-keygen -l -f /etc/ssh/ssh_host_ecdsa_key.pub
echo $foo
rev
cut -c1-3
rev
echo "$var"
rev
cut -d: -f1
rev
echo 'maps.google.com'
rev
cut -d'.' -f 1
rev
rev file.txt
cut -d/ -f1
rev
basename /usr/local/svn/repos/example
rev file.txt
cut -d ' ' -f1
rev
file -i filename
mount
grep "^$path"
awk '{print $3}'
echo -e "Test\rTesting\r\nTester\rTested"
awk '{ print $0; }'
od -a
echo -e "line1\r\nline2"
awk '{ print $0; }'
od -a
echo -e "line1\r\nline2"
od -a
find . -type f -exec wc -l {} +
find . -type f -exec echo {} \;
wc -l
find . -type f -print0
tr -dc '\0'
wc -c
find . -type d -ls
awk '{print $4 - 2, $NF}'
sort -rn
head
ls
column -c 80
du -a --max-depth=1
sort -n
du -a -h --max-depth=1
sort -hr
find -name *.undo -print0
du -hc --files0-from=-
find . -name “*.old” -print
wc -l
find . -regex ".*\.\(flv\
mp4\)" -type f -printf '%T+ %p\n'
sort
head -n 500
du -sb
finger
sed 's/\t/ /'
sed 's/pts\/[0-9]* *[0-9]*//'
awk '{print $2"\t("$1")\t"$3" "$4" "$5}'
sort
uniq
finger
sed 's/^\([^ ]*\) *\([^ ]*\) *pts[^A-Z]*\([^(]*\).*/\2\t(\1)\t\3/'
echo $var
awk '{gsub(/^ +
+$/,"")}1'
mount -l
dpkg -S `which command`
w
brew --prefix
pstree -a
cal -3
cal -3 12 2120
yum info zsh
\w
ifconfig -a
brew info grc
watch wc -l <filename>
pstree -p `pgrep pppd`
pstree -p -s PID
ifconfig
sort
uniq -c
yum provides zsh
find . -name "*.andnav"
rename -vn "s/\.andnav$/.tile/"
set +e
set +a
rsync -ave ssh '"Louis Theroux"''"'"'"'"''"s LA Stories"'
curl -s 'http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz'
gunzip -dc
less
curl 'http://www.multitran.ru/c/m.exe?CL=1&s=hello&l1=1'
iconv -f windows-1251
tr -dc '[:print:]'
curl https://s3.amazonaws.com/sampletest/sample.tar.gz
gunzip
pax -r -s "/old/new/"
seq 1 10
xargs -n1 -P2 bash -c 'i=$0; url="http://example.com/?page${i}.html"; curl -O -s $url'
seq 10000
parallel -j100 wget https://www.example.com/page{}.html
find . -type f -iname \*.mov -printf '%h\n'
sort
uniq
xargs -n 1 -d '\n' -I '{}' echo mkdir -vp "/TARGET_FOLDER_ROOT/{}"
od -t x1 -t a /dev/ttySomething
od -tx2 FILENAME
printf "a\0b"
od -tx1
od -t c file
od -xc filename
od -xcb input_file_name
less
pg_dump -U myUser myDB
gzip > myDB.sql.gz
od -xcb testscript.sh
mysqldump –add-drop-table –extended-insert –force –log-error=error.log -uUSER -pPASS OLD_DB_NAME
ssh -C user@newhost “mysql -uUSER -pPASS NEW_DB_NAME”
mysqldump --all-databases
ssh user@yourserver.com mysql
echo 'hi'
od -c
echo `echo "Ho ho ho"`
od -c
cp -rs /mnt/usr/lib /usr/
tmux attach -t "$(echo stuff)"
sudo rsync -pgodt /home/ /newhome/
rsync --exclude='B/' --exclude='C/' . anotherhost:/path/to/target/directory
ping -n 1 %ip%
find "TTL"
sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`
set -x
crontab -e
sudo crontab -u wwwrun -e
tac temp.txt
sort -k2,2 -r -u
mail -s "Alert: SSH Access from `who
cut -d'(' -f2
cut -d')' -f1`" -a tmpfile user@example.com
set -o history -o histexpand
set -H
set -o history
shopt -s dotglob
shopt -s globstar
shopt -s nullglob
shopt -s autocd
shopt -s cdable_vars
shopt -s cmdhist
shopt -s compat31
shopt -s direxpand
shopt -s expand_aliases
shopt -s failglob
shopt -s histappend
shopt -s lastpipe
shopt -s lithist
shopt -s nocaseglob
shopt -s nocasematch
shopt -s execfail
shopt -s progcomp
shopt -s promptvars
shopt -s expand_aliases extglob xpg_echo
shopt -s extglob progcomp
shopt -s nullglob dotglob
touch -a UEDP0{1..5}_20120821.csv
echo "* * * * * script"
crontab -
`sudo chown -R mongodb:mongodb /data/*`
ls -l $FILENAME
grep -q ^l && SOURCE_DIR=$(ls -l $FILENAME
awk '{print $NF}');
pushd
find ! -path "dir1" -iname "*.mp3"
find -iname example.com
grep -v beta
find -name "*.js" -not -path "./directory/*"
find . -name '*.js' -and -not -path directory
find . -name '*.js'
grep -v excludeddir
find . -path ./misc -prune -o -name '*.txt' -print
find . -type d -name proc -prune -o -name '*.js'
find ./ -path ./beta/* -prune -o -iname example.com -print
find build -not \( -path build/external -prune \) -name \*.js
DATA=$( find "${1}" -type f -exec ${MD5} {} ';'
sort -n )
watch -n 3 -d ./my_script.sh
ssh user@target "cd /some/directory; nohup myprogram > /dev/null 2>&1"
ssh -n -f user@host "sh -c 'cd /whereever; nohup ./whatever > /dev/null 2>&1 &'"
exec 1
tee ${LOG_FILE}
exec 1 2>&1
tee ${LOG_FILE}
exec 2
tee ${LOG_FILE}
zcat file.gz
awk -F, '$1 ~ /F$/'
watch -n 1 --color --exec bash -c 'python -m unittest discover
& pyrg'
watch bash -c your_script
watch -n10 cat /tmp/iostat.running
ssh $USER@$SERVER "cd ${REMOTE_PATH}; mkdir -p $i" < /dev/null
ssh user@target "cd /some/directory; nohup myprogram > foo.out 2> foo.err < /dev/null"
ssh askapache 'nohup sh -c "( ( chown -R ask:ask /www/askapache.com &>/dev/null ) & )"'
ssh askapache 'sh -c "( ( nohup chown -R ask:ask /www/askapache.com &>/dev/null ) & )"'
ssh askapache 'nice -n 19 sh -c "( ( nohup chown -R ask:ask /www/askapache.com &>/dev/null ) & )"'
watch -n 1 date
watch -n1 dropbox-cli status
watch -n 300 du -s path
watch elinks -dump file.html
source <(./generate_commands)
watch -n 60 killall -USR1 dd
watch ls -l data.temp
watch -n 0.5 ls -l
watch 'ls -l'
watch ls -l
watch -d ls -l
ssh root@something 'ls -l'
watch ls
watch -n 1 ls
watch --interval=10 lynx -dump http://dslrouter/stats.html
find ./ -name *.ogv -exec bash -c 'myfile {}' \;
find ./ -name *.ogv -exec myfile {} \;
find . -type f -exec bash -c 'myfile "{}"'  \;
echo "`hostname -i` file.txt"
xargs myscript.rb
myscript.rb `hostname -i` file.txt
watch -n 1  "mysqladmin -u root -pXXXXX processlist
grep tablename"
tee -a /root/plist.log
watch -n 1 ps -C java -o pcpu,state,cputime,etimes
watch -tdn0.5 ps -mo pid,tid,%cpu,psr -p \`pgrep BINARY-NAME\`
watch -tdn0.5 ps -mo pid,tid,%cpu,psr -p \`pgrep firefox\`
watch -n 1 'ps aux
grep php'
awk -f script.awk file{,}
column -t
ssh REMOTE "sh -c \"(nohup sleep 30; touch nohup-exit) > /dev/null &\""
find -exec some_script {} \;
ssh -t genja.org 'ssh raptor.lan hostname\; uptime'
watch "tail file
grep pattern"
find . -exec utility \;
watch -n 5 "wget -qO-  http://fake.link/file.txt
tail"
watch -n 5 wget -qO-  http://fake.link/file.txt
watch -n1200 "xbacklight -set 0%
sleep 20
xbacklight -set 100%"
find . -name 'sqlite.db'
xargs your_script.sh
watch -n 300 -t '/usr/bin/fbi -noverbose -a -t 4 -u `find -type f
egrep -i "(jpg
bmp
png
gif)$"`'
watch -n 1 --color 'bash -c "python -m unittest discover
& pyrg"'
watch 'echo -e "\033[31mHello World\033[0m"'
watch 'echo -e "\tHello World"'
watch -n 1 --color 'python -m unittest discover 2>&1
pyrg'
watch -n 5 -c 'tail -f -n 50 mylogfile.txt
ccze'
watch -d 'top -n1
grep mysql'
watch --color 'tput setaf 1; echo foo'
/usr/bin/find $*
/usr/bin/find ./ $*
find . -print0
xargs -0 COMMAND
find . -exec COMMAND {} +
find -maxdepth 0 -name "*.sh"  -exec ./lastline.sh {} \;
find .
xargs -n 1 echo
watch -n 300 -t `find -type f
egrep -i "(jpg
bmp
png
gif)$"`
find . -exec env f={} somecommand \;
$@
tee $FILE
ssh user@remote 'bash -s' < /path/to/commands-inc.sh
cat commands-to-execute-remotely.sh
ssh blah_server
zcat FILE
awk '{ ...}'
awk -f script.awk File2 File1
rev
column -t
rev
awk -f `which script.awk` arg1
awk -f script.awk file.txt{,}
column -t
ssh "$USER@$SERVER" "$cmd_str"
seq 0 20
xargs -n1 tssh MYBOXES
source "$file"
exec /usr/bin/find "$@"
find -iname "MyCProgram.c" -exec md5sum {} \;
LD_PRELOAD=./linebufferedstdout.so python test.py
tee -a test.out
find /target/path -type f -exec your_command_here \{\} \;
find /target/path -type f -print0
xargs -0 your_command_here
find /path/to/files -exec truncate.sh {} \;
find . -type f -exec ./truncate {} \;
find "$SOURCE" -type f -iname '*.jpg' -exec /path/to/filecopy.sh {} +
find /tmp/foo -exec /tmp/echoargs {} \;
find /etc -type f
xargs --max-lines=1  -r --max-procs=20  ./do1.sh
find . -exec echo {} \;
timeout 5 ssh user@ip
find . -maxdepth 1 -name *.jpg -print -exec convert
find . -type f -exec file {} \; > /tmp/filetypes.log
find /etc -print0
xargs -0 file
find /etc -print0
grep -azZ test
xargs -0 file
`which parallel` "$@"
source $(ruby genrc.rb)
find . -name *20120805.gz -exec zcat {} \;
true
cd /
true
echo "$ret"
true
sleep 10
true
xargs false
tmux send-keys -t cf 'cd ~/server' C-m
tmux "$tmux_command \; attach"
set -e
set -o errexit
set -o errexit -o nounset -o noclobber -o pipefail
set -e
set -o errexit
logout
exit -1
exit
exit 1
exit N
mv "${myargs[@]}"
pushd /home/`whoami`/Pictures
export git=$(which git)
export JAVA_HOME=$(readlink -f /usr/bin/javac
sed "s:/bin/javac::")
export JAVA_HOME=$(readlink -f $(dirname $(readlink -f $(which java) ))/../)
export JAVA_HOME=$(readlink -ze /usr/bin/javac
xargs -0 dirname -z
xargs -0 dirname)
export PS1='$(whoami)@$(hostname):'
set `od -j $o -N 8 -t u1 $pkg`
set `od -j $o -N 8 -t u1 $rpm`
cat myfiles_split.tgz_*
tar xz
echo "http://www.suepearson.co.uk/product/174/71/3816/"
cut -d'/' -f1-3
comm -3 <(sort -un f1) <(sort -un f2)
comm -3 <(sort file1) <(sort file2)
comm -23 <(sort file1.txt) <(grep -o '^[^;]*' file2.txt
sort)
comm -23 <(sort fileA) <(cut -d' ' -f1 fileB
sort -u)
comm -23 <(sort set1) <(sort set2)
cat B C D
sort
comm -2 -3 A -
paste -d: <(grep '<th>' mycode.html
sed -e 's,</*th>,,g') <(grep '<td>' mycode.html
sed -e 's,</*td>,,g')
cat archive.tar
tar x
echo 'someletters_12345_moreleters.ext'
cut -d'_' -f 2
echo "$url"
cut -d'/' -f3
number=$(echo $filename
awk -F _ '{ print $2 }')
echo "$url"
cut -d'/' -f4-
echo "$url"
cut -d'/' -f1-3
echo "$url"
cut -d':' -f1
rpm2cpio foo.rpm
xzcat
cpio -idmv
rpm2cpio libstdc++-4.9.2-1.fc21.x86_64.rpm
cpio -idmv
rpm2cpio packagename
cpio -ivd
tar xvf "$myarchive"
cd "${myarchive%.tar.gz}"
zcat Input.txt.gz
cut -d , -f 1
sort
uniq -c
rpm2cpio php-5.1.4-1.esp1.x86_64.rpm
cpio -idmv
echo 'test/90_2a5/Windows'
xargs dirname
xargs basename
echo "bla@some.com;john@home.com"
awk -F';' '{print $1,$2}'
cut -d: -f1 /etc/group
sort
head -16482 in.sql
tail -258 > out.sql
bunzip2 file.bz2
bzip2 -dc archive.tbz
tar xvf - filename
find . -name "*.txt" 2>>/dev/null
find . -type f -print0
egrep -iazZ '(\.txt
\.html?)$'
grep -vazZ 'index.html'
xargs -n 1 -0 grep -c -Hi elevator
egrep -v ':[0123]$'
dig stackoverflow.com
grep -e "^[^;]"
tr -s " \t" " "
cut -d" " -f5
source <(wget -q -O - "http://www.modulesgarden.com/manage/dl.php?type=d&id=676")
source <(curl -s http://mywebsite.com/myscript.txt)
brew update
find . -type f -name "*.txt" -exec rm -f {} \;
cat files.txt
xargs scp user@remote:
awk '{s+=$1} END {printf "%.0f", s}' mydatafile
awk '{s+=$1} END {print s}' mydatafile
kill -9 `cat save_pid.txt`
find / -type d  -perm 777 -print -exec chmod 755 {} \;
find / -type f -perm 777 -print -exec chmod 644 {} \;
grep 'Nov 12 2012' /path/to/logfile
less
awk -f script.awk file
echo -e "$(TZ=GMT+30 date +%Y-%m-%d)\n$(TZ=GMT+20 date +%Y-%m-%d)"
grep -v $(date +%Y-%m-%d)
tail -1
sed -f commandfile file
crontab -u user -l
sed "$my_wonderful_sed_script"
crontab -u user -
ls -l
grep "^d"
awk -F" " '{print $9}'
ls -l --color=always "$@"
egrep --color=never '^d
^[[:digit:]]+ d'
ls -l --color=always "$@"
grep --color=never '^d'
ls -l
grep "^d"
ls -Al
grep "^d"
awk -F" " '{print $9}'
egrep -v '^\s*#' /etc/launchd.conf
launchctl
crontab -u $user -l 2>/dev/null
grep -v '^#'
cd /var/cron/tabs
grep -vH ^# *
echo "$USERTAB"
grep -vE '^#
^$
no crontab for
cannot use this program'
tac a.csv
sort -u -t, -r -k1,1
tac
find . -name "$i" -type f -print
xargs egrep -n "$SrchStr" >/dev/null
find . -type f \( -name "*.dat" \) -exec tail -n+5 -q "$file" {} +
tee concat.txt
find /home/myhome/data/ARCHIVE/. -name . -o -type d -prune -o -name '*201512*' -print
xargs -i mv {} /home/myhome/ARCHIVE/TempFolder/.
find /mnt/zip -name "*prefs copy" -print0
xargs rm
find /mnt/zip -name "*prefs copy" -print0
xargs -p rm
tree -if
grep \\.[ch]\\b
xargs -n 1 grep -nH "#include"
tree -if
grep \\.[ch]\\b
xargs -n 1 grep -H "#include"
cd `find . -name file.xml -exec dirname {} \;`
cd `find . -name file.xml -printf %h`
find . -type f -name "*.txt" -exec sed 's/Linux/Linux-Unix/2' thegeekstuff.txt
find . -type f -name "*.txt" -exec sed -n 's/Linux/Linux-Unix/gpw output' thegeekstuff.txt
find .  -type f  -name '*.txt' -exec wc -c {} \;
awk '{total += $1} END{print total}'
find .  -type f  -name '*.txt' -exec wc -w {} \;
awk '{total += $1} END{print total}'
find -L . -type l -delete -exec ln -s new_target {} \;
find /mnt/zip -name "*prefs copy" -print0
xargs>    -0 rm
find /mnt/zip -name "*prefs copy" -print0
xargs>    -p rm
find /mnt/zip -name "*prefs copy" -print0
xargs    -0 -p /bin/rm
find /home/madhu/release/workspace -type d -name '.git'
find /path/to/files -type d -name '.git' -exec dirname {} +
md5sum *.java
grep 0bee89b07a248e27c83fc3d5951213c1
find . -name "*.NEF" -exec basename \{\} .NEF \;
xargs> -i sh -c 'dcraw -w -c $0.NEF
convert - -resize 25% $0.jpg'
find /path/to/your/directory -regex '.*\.\(avi\
flv\)' -exec cp {} /path/to/specific/folder \;
find . \( -path '*/.*' -prune -o ! -name '.*' \) -a -name '*.[ch]'
find . -type f \( -name "*.c" -o -name "*.sh" \)
find $HOME -name '*.c' -print
xargs    grep -l sprintf
find /etc -maxdepth 1 -name "*.conf"
tail
find /etc -maxdepth 2 -name "*.conf"
tail
find . -path '*/lang/en.css' -prune -o -name '*.css' -print
find /usr/src/linux -name "*.html"
find . -mtime +7 -name "*.html" -print
find . -mtime 7 -name "*.html" -print
find . -mtime -7 -name "*.html" -print
find . -name "*.java" -exec sed -i '' s/foo/bar/g \;
find . -name "*.java" -exec sed -i s/foo/bar/g \;
find . -type f -name "*.java"
xargs    tar rvf myfile.tar
find . -type f -name "*.java"
xargs>    tar cvf myfile.tar
find . -type f -name "*.java"
xargs>    tar rvf myfile.tar
find . -type f -name "*.java"
xargs    tar cvf myfile.tar
find ~/Images/Screenshots -size +500k -iname '*.jpg'
find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
find . -name *.o -perm 664 -print
find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep -l -Z -i --label="{}" "perry sound"
xargs -0 -I{} grep -i -l --label="{}" "October 26, 2004" "{}"' \;
find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep -l -Z -i --with-filename --label="{}" --color "perry sound"
xargs -0 -I{} cp -v {} Found/' \;
find /users/tom -name "*.pl"
find . -name '*.scm'
find . -type f -name *.tex -print0
xargs -0 grep -l 'documentclass'
find . -type f -name "*.txt" ! -path "./Movies/*" ! -path "./Downloads/*" ! -path "./Music/*"
find . -name '*2011*' -print
xargs -n2 grep 'From: Ralph'
find / -maxdepth 3  -name "*log"
diff -rqx "*.a" -x "*.o" -x "*.d" ./PATH1 ./PATH2
grep "\.cpp "
grep "^Files"
find . -name "*.java" -exec grep -Hin TODO {} +
basename `cut -d ":" -f 1`
find . -name "*.java" -exec grep -Hin TODO {} +
cut -d ":" -f 1
find . -user daniel -type f -name *.jpg ! -name autumn*
find . -user daniel -type f -name *.jpg
find /var/log -name '*.log'
tar cv --files-from=-
bzip2 > log.tar.bz2
find /home/me/download/ -type f -name "*.rm" -exec ffmpeg -i \{} -sameq \{}.mp3 \; -exec rm \{} \;
find . -type f -name "*.rm" -exec ffmpeg -i {} -sameq {}.mp3 \; -exec rm {} \;
find root -name '*.rmv' -type f -exec cp --parents "{}" /copy/to/here \;
find root -name '*.rmv' -type f -exec cp {} /copy/to/here \;
find . -name *.rmv
find / -name "*.txt" -size +12000c
du -hsx *
sort -rh
head -10
find . -type f -printf "%C@ %p\n"
sort -rn
head -n 10
find -name "<fileName>"
find . \! -path "*CVS*" -type f -name "*.css"
find /private/ 2>/dev/null
grep /Flash
find -maxdepth 1 -type d
sort
while read -r dir; do n=$(find "$dir" -type d
wc -l); let n--; printf "%4d : %s\n" $n "$dir"; done
find -maxdepth 1 -type d
sort
while read -r dir; do n=$(find "$dir"
wc -l); let n--; if [ $n -eq 0 ]; then printf "%4d : %s\n" $n "$dir"; fi; done
find -maxdepth 1 -type d
sort
while read -r dir; do n=$(find "$dir" -type d
wc -l); let n--; if [ $n -gt 0 ]; then printf "%4d : %s\n" $n "$dir"; fi; done
find -maxdepth 1 -type d
sort
while read -r dir; do n=$(find "$dir" -type f
wc -l); if [ $n -gt 0 ]; then printf "%4d : %s\n" $n "$dir"; fi; done
find . -type f -name "*.php" -exec grep --with-filename -c "^class " {} \;
grep ":[2-99]"
sort -t ":" -k 2 -n -r
find . -type f -name "*.php" -exec grep --with-filename -c "^abstract class " {} \;
grep ":[^0]"
find / -perm +2000
find / -perm +g=s
find . -name "*.sql" -print0 -type f
xargs -0 grep "expression"
find / -perm +4000
find / -perm +u=s
find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
find -type f -print0
xargs -0 grep -l `printf '^\xef\xbb\xbf'`
sed 's/^/found BOM in: /'
find . -type f -print0
xargs -0 awk '/^\xEF\xBB\xBF/ {print FILENAME} {nextfile}'
find . -type f -name "*.java" -exec grep -il string {} \;
find /data -type f -perm 400 -print -quit
find  / -type d -iname "project.images" -ls
find  / -type d -name "project.images"
find  / -type d -name "project.images" -ls
find / -name foo.bar -print 2>/dev/null
find . -name modules -exec sh -c 'exit $(find {} -name modules
grep -n ""
tail -n1
cut -d: -f1)' \;
dig +short -x 173.194.33.71
find / -name httpd.conf -newer /etc/apache-perl/httpd.conf
find . -type f -name "FindCommandExamples.txt" -exec rm -f {} \;
find . -type f -name "tecmint.txt" -exec rm -f {} \;
du -s --block-size=M /path/to/your/directory/
du -h your_directory
find . ( -name a.out -o -name *.o ) -print
readlink -f `ls --dereference /proc/$pid/exe`
find . -name custlist\*
find files/ -name "*.gz"
nl -n rz
sed -e 's/\t/\n/'
xargs --max-args 2 ...
find . -mtime +7 -name "G*.html"
find . -mtime +7 -name "G*.html" -execdir  /path/to/script_7zipi {} +
find . -type f -name YourProgramName -execdir pwd \;
cd $(dirname $(find . -name $1
sed 1q))
cd $(find . -name $1
xargs dirname)
find $1 -name "$2" -exec grep -Hn "$3" {} \;
find $1 -name "$2"
grep -v '/proc'
xargs grep -Hn "$3" {} \;
find $1 -path /proc -prune -o -name "$2" -print -exec grep -Hn "$3" {} \;
find $parentdir -name $tofind*
find ./ -name '*~'
find ./ -name '*~'
xargs> rm
find -type d -a -name test
find -type d -a -name test
xargs rm -r
find . -name test -type d -print0
xargs -0 rm -r --
find . -type d -name 'test' -exec rm -rf {} \;
find .  -type f -name "* *"
find . -name "*$VERSION*"
find . -type f -name '*-*'
find "$source_dir" -name *.$input_file_type
find "$source_dir" -name "*.$input_file_type" -print0
find /home/feeds/data -type d \( -name 'def/incoming' -o -name '456/incoming' -o -name arkona \) -prune -o -name '*.*' -print
find . -type f -name "*.*" -not -path "*/.git/*" -print0
xargs -0 $SED_CMD -i "s/$1/$2/g"
find . -type f -a -name '*.*'
find . -name '*.[ch]'
find . -name '*.axvw'
find -name *.bmp -type f -exec convert '{}' '{}'.jpg \;
find /usr/src -name '*.c' -size +100k -print
find /home -name "*.c"
find / -name *.c
wc
find /home -name "*.c"
find . -name \*.c
xargs grep hogehoge
find . -name \*.c -exec grep wait_event_interruptible {} +
find . -name \*.c -exec grep wait_event_interruptible {} /dev/null \;
find . -name \*.c -print
xargs grep wait_event_interruptible /dev/null
find . -name \*.c -print0
xargs -0 grep wait_event_interruptible /dev/null
find . -iname '*.cgi'
xargs chmod 755
find . -name '*.cgi' -print0
xargs -0 chmod 755
find . -name '*.cgi' -print0
xargs -0 chmod 775
find . -iname "*.cls" -exec echo '{if(length($0) > L) { LINE=$0; L = length($0)}} END {print LINE"L"L}' {} \;
find /some/path -name '*.coffee' -print0
xargs -0 perl /path/to/your/program
find . -name "*sub*.cpp"
find ${DIR} -type f -name "*.css" -exec sed -n '/\.ExampleClass.{/,/}/p' \{\} \+
find /starting/directory -type f -name '*.css'
xargs -ti grep '\.ExampleClass' {}
find /foot/bar/ -name '*.csv' -print0
xargs -0 mv -t some_dir
find /foot/bar/ -name '*.csv' -print0
xargs -0 mv -t some_dir
find jcho -name *.data
find / -name "*.dbf"
find / -name \*.dbf -print0
xargs -0 -n1 dirname
sort
uniq
find / -name \*.dbf -print0 2>/dev/null
xargs -0 -n1 dirname
sort
uniq
find / -name "*.dbf"  -exec dirname {} \; 2> /dev/null
sort -u
find ./ -name '*.epub' -o -name '*.mobi' -o -name '*.chm' -o -name '*.rtf' -o -name '*.lit' -o -name '*.djvu'
find . -type f -size +10 -name "*.err"
find . -name '*.ext'
parallel echo {} '`dirname {}`'
find /path -type f -name "*.ext" -printf "%p:%h\n"
find /path -type f -name '*.ext' -exec my_cool_script \{\} \;
cat $(find . -name '*.foo')
cat `find . -name '*.foo' -print`
find . -name '*.foo' -exec cat {} +
find . -name '*.foo' -exec cat {} \;
find . -name '*.foo' -exec grep bar {} \;
find . -name '*.gz' -print0
xargs -0 gunzip
for file in $(find asia emea -name \*.gz -print0
xargs -0); do echo -n $(basename $file); gunzip -c $file
wc -l; done >> file_count.txt
find asia emea -name \*.gz
find asia emea -name \*.gz -print0
xargs -0
find -type f -name "*.htm"
eval "`find -type f -name "*.htm"
awk -F/ '{print "cp " $0 " " $2 "-" $3 "-" $4 "-" substr($5,5) ";" }'`"
find -type f -name "*.htm"
awk -F'[/]' 'BEGIN{OFS="-"}{ gsub(/^\.\//,"") ;print $1,$2, substr($4,3,2),substr($4,5,2),substr($4,8) }'
find -type f -name "*.htm"
sed 's@^./@@g;s@/@-@g'
awk -F'-' '{print $1 "-" $2 "-" $3 "-" substr($4, 5, 2) "-" $5}'
find . -type f -name '*.html'
find . -type f -name '*.html' -exec sed -i -e '1r common_header' -e '1,/STRING/d' {} \;
find . -name *.ini
find . -name  \*.java
find . -name "*.java"
find . -type f -name "*.java"
xargs tar rvf myfile.tar
find . -type f  -name '*.java' -exec sh -c 'iconv -f cp1252 -t utf-8 "$1" > converted
mv converted "$1"' -- {} \;
find /home/www -name "*.java" -type f -print0
xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
find . -name "*.java" -exec grep "String" {} \+
find . -name "*.java" -exec grep "String" {} \;
find . -iname '*.jpg'
find temp/medium/* -maxdepth 2 -iname "*.jpg" -print0
xargs -0 mogrify -resize 428x270"^" -quality 80 -compress JPEG -monitor -strip
find temp/images/* -maxdepth 2 -iname "*.jpg" -print0
xargs -0 mogrify -resize 100x100">" -quality 80 -compress JPEG -monitor -strip
find temp/large/* -maxdepth 2 -iname "*.jpg" -print0
xargs -0 mogrify -resize 800x800">" -quality 85 -compress JPEG -monitor -strip -gravity SouthEast -draw 'text 10,10 "www.kmstools.com"'
find temp/medium/* -maxdepth 2 -iname "*.jpg" -print0
xargs -0 mogrify -resize 428x270">" -quality 80 -compress JPEG -monitor -strip
find / -type f -name *.jpg  -exec cp {} . \;
find */201111 -name "*.jpg"
find */201111/* -name "*.jpg"
sort -t '_' -nk2
find Cam2/2013* -name "*.jpg" -print0
xargs -0 cat
ffmpeg -f image2pipe -framerate 30 -vcodec mjpeg -i - -vcodec libx264 -profile:v baseline -level 3.0 -movflags +faststart -crf 19 -pix_fmt yuv420p -r 30 "Cam2-2013-30fps-19crf.mp4"
find / -name *.jpg 2>/dev/null
find . -name *.jpg
find . -name \*.jpg -exec basename {} \;
uniq -d
find . -name *.jpg
uniq -u
find . -name \*.jpg -exec basename {} \;
uniq -u
find . -name '*.jpg'
find . -name '*.log' -mtime -2 -exec grep -Hc Exception {} \;
grep -v :0$
find path/ -name "*.log"
find path/ -name '*.log' -print0
xargs -r0 -I {} bash -c 'grep -q "string that should not occur" "{}"
echo "{}"'
find path/ -name '*.log' -print0
xargs -r0 grep -L "string that should not occur"
find  /home/family/Music -type f -name '*.m4a' -print0
find /home/family/Music -name '*.m4a' -exec ffmpeg -i "{}" -acodec libvorbis -aq 6 -vn -ac 2 "{}.ogg" \;
find /home/family/Music -name '*.m4a' -exec sh -c 'ffmpeg -i "$0" -acodec libvorbis -aq 6 -vn -ac 2 "${0%.m4a}.ogg"' '{}' \;
find /home/family/Music -name '*.m4a' -print0
xargs -0 -i ffmpeg -i {} -acodec libvorbis -aq 6 -vn -ac 2 {}.ogg
find /home/family/Music -name '*.m4a' -print0
find /home/family/Music -name *.m4a -print0
find / -name "*.md" -type f -exec sh -c 'markdown "${0}" > "${0%.md}.html"' {} \;
find / -name "*.md" -type f -exec markdown -o {}.html {} \;
find / -name "*.md" -type f -exec sh -c 'markdown "$0" > "$0.html"' {} \;
find . -iname "*.mov" -exec /path/to/myffmpeg.sh {} \;
find . -iname "*.mov" -printf "%p %f\n"
find . -iname "*.mov" -printf "%p %f\n"
while read -a HR ; do echo ffmpeg -i ${HR[0]} -f flv ${HR[1]} ;done
find . -iname "*.mov" -exec ffmpeg -i "%p" -f flv "%f" \;
find . -iname "*.mov" -print0
xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'
find . -iname "*.mov" -printf "%p %f\n"
xargs -l bash -c 'echo ffmpeg -i $0 -f flv $1'
xargs
find . -iname "*.mov" -printf "%p %f\n"
xargs -r -n2 ffmpeg -f flv -i
find . -name "*.mov"
find /tmp -iname '*.mp3' -print0
xargs -0 rm
find / -type f -name *.mp3 -size +10M -exec rm {} \;
find / -type f -name *.mp3 -size +10M -exec rm {} \;
find . -name *.mp3
find . -name "*.mp3" -print0
xargs -0 mplayer
find . -name \*.mp3 -print0
xargs -0 mplayer
find "$musicdir" -type f -print
egrep -i '\.(mp3
aif*
m4p
wav
flac)$'
find /foo/bar -name '*.mp4' -print0
xargs -I{} -0 mv -t /some/path {}
find /foot/bar/ -name '*.mp4' -exec mv -t /some/path {} +
find /working -type f -name '*.mp4'
find working -type f -name "*.mp4"
head -1
find . -name "*.mpg" -type f -print0
xargs -0 -I {} -n 1 -P 4 ffmpeg -i {} {}.mp4
find $HOME -iname '*.ogg' -type f -size -100M
sudo find / -iname '*.ogg'
find $HOME -iname '*.ogg'
find $HOME -iname '*.ogg' -size +100M
find $HOME -iname '*.ogg' -size +20M
find $HOME -iname '*.ogg' ! -size +20M
find $HOME -iname '*.ogg' -o -iname '*.mp3'
find / -iname '*.ogg'
find $HOME -iname '*.ogg'
find . -name "*.old" -exec mv {} oldfiles \;
find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} +
xargs grep -l '#hyphenate'
find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\
#hyphenate' {} +
find -name '*.p[lm]'
find . -iname *.page -exec ~/t.sh {} \;
sort
find ./polkadots -type f -name "*.pdf"
find ${INPUT_LOCATION}/ -name "*.pdf.marker"
xargs -I file mv file $(basename file .marker) ${OUTPUT_LOCATION}/.
find /home/jul/here -type f \( -iname "*.php" -o -iname "*.js" \) ! -path "/home/jul/here/exclude/*"
find /home/jul/here -type f -iname "*.php" ! -path "$EXCLUDE/*" -o -iname "*.js" ! -path "$EXCLUDE/*"
find /home/jul/here -type f -iname "*.php" -o -iname "*.js" ! -path "/home/jul/here/exclude/*"
find /home/jul/here -type f -iname "*.php" ! -path "/home/jul/here/exclude/*" -o -iname "*.js" ! -path "/home/jul/here/exclude/*"
chmod 640 $(find . -name *.php)
find . -type f -name '*.php' -exec chmod 644 {} \;
find -name \*.plist
find . -name \*.plist
find ./ -name "*.plist"
find $STARTDIR -name '*.ps' -print
find $STARTDIR -name '*.ps' -print
sed -e 's/.ps$//'
xargs -l -i  ps2pdf \{}.ps
find dir -not -path '.git' -iname '*.py'
find . -name '*.py' -exec grep --color 'xrange' {} +
find . -type f -name "*.py"
find . -name '*.py'
xargs perl script.pl
find . -name '*.py' -exec grep -n -f search_terms.txt '{}' \;
find . -name *.py
find . -name \*.py -print
find . -name "*.rb" -type f
find . -name "*.rb" -type f -exec chmod 600 {} \;
find . -name "*.rb" -type f -exec wc -l \{\} \;
find . -name "*.rb" -type f
xargs wc -l
find . -name "*.rb" -type f -print0
xargs -0 wc -l
find . -name "*.rb" -type f
xargs -I {} echo Hello, {} !
find . -name "*.rb" -type f -print0
xargs -0 -n 2 echo
find . -name "*.rb" -or -name "*.py"
find . -name "*.rb"
find . -name '*.rb'
find . -name *.rb
find . -name \*.rb
find . -name '*.rpm'
find / -user vivek -name "*.sh"
find "${S}" -name '*.so*' -exec doexe '{}' +
find . -type f -name "*.so" -exec sh -c "echo {} && readelf -s {}
grep mysymbol" \;
find . -name *.so -print0
xargs -0 -I % sh -c 'echo % ; myCommand "%"
grep ExpectedResult'
find . -name *.so -print0
xargs -0 myCommand
grep ExpectedResult
find . -name \*.sql -not -samefile $oldest_to_keep -not -newer $oldest_to_keep
find -maxdepth 1 -name '*.sql' -exec cat '{}' \;
sed -e 's/ , );/1,1);/g'
mysql -D ootp
find -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}' +
mysql -D ootp
find -maxdepth 1 -name '*.sql' -exec sed -e 's/ , );/1,1);/g' '{}'
mysql -D ootp
find -maxdepth 1 -name '*.sql' -print0 \;
xargs -0 sed -e 's/ , );/1,1);/g'
mysql -D ootp
find . -maxdepth 1 -name '*.sql' -exec "sed -e 's/ , );/1,1);/g' '{}'
/usr/bin/mysql -D ootp" \;
find working -type f -name "*.srt"
head -1
find . -name "*.swp"
find . -name "*.swp" > rm
find /directory/whatever -name '*.tar.gz' -mtime +$DAYS
find /directory/whatever -name '*.tar.gz' -mtime +$DAYS
grep 'tar.gz'
echo "You don't have files older than $DAYS days"
find . -maxdepth 2 -name '*.tex'
find . -type f -maxdepth 2 -name "*.tex"
find . -type f -name "*.tex"
find /usr/local/doc -name '*.texi'
find / -user root -iname "*.txt"
head
find . -type f \( -name "*.txt" -o -name "*.json" \)
find . -type f \( -name "*.txt" -o -name "*.json" \)
find / -iname '*.txt'
xargs --replace=@ cp @ /tmp/txt
find  . -type f -name "*.txt" -exec sed 's/TZ/MALAWI/g' {} \;
find / -name  "*.txt" -mount 2> /dev/null
find / -name  "*.txt" -xdev 2> /dev/null
find /mnt/msdos  -name "*.txt" 2> /dev/null
find /home -user tecmint -iname "*.txt"
find / -name  "*.txt" -fstype vfat 2> /dev/null
find /home/wsuNID/ -name "*.txt"
find / -name '*.txt' -exec du -hc {} \;
find /foo -name "*.txt" -delete
find /foo -name "*.txt" -exec du -hc {} +
tail -n1
find . -type f -name '*.txt'
sed 's/'"'"'/\'"'"'/g'
sed 's/.*/"&"/'
xargs -I{} cp -v {} ./tmp/
find . -name "*.txt" -printf "%T+ %p\n"
find . -type f -name '*.txt' -exec egrep pattern {} /dev/null \;
find . -name '*.txt'
perl -lne 'print if /c
d
z/'
find . -name "*.txt" -printf "%T+ %p\n"
sort
tail -1
find . -name \*.txt -exec chmod 666 {} \; -exec cp {} /dst/ \;
find . -maxdepth 1 -type f -name '*.txt' -not -name File.txt
find . -maxdepth 1 -type f -regex '.*\.txt' -not -name File.txt
find / -name "*.txt"
find -name '*.txt'
find -name \*.txt
find . -name "*.txt"
find . -name "*.txt" -print
find . -name '*.txt'
find . -name *.txt -print
find . -name '*.txt' -exec process {} \;
find . -name \*.txt -exec process {} \;
find . -name \*.txt -print0
xargs -0 -I{} process {} argument
find . -name \*.txt -exec process {} +
find . -name \*.txt -print0
xargs -0 process
find . -name "*.txt -exec process_one {} ";"
find . -name "*.txt" -print0
xargs -0 -n 1 process_one
find . -name "*.txt"
xargs python -c 'import sys; print sys.argv[1:]'
find . -name "*.txt"
python hello.py
find . -name "*.txt" -print0
xargs -0 python hello.py
python hello.py `find . -name "*.txt"`
find . -name "*.txt" -exec python myscript.py {} +
find . -name "*.txt" -print
grep -v 'Permission denied'
find . -name "*.txt" -print 2>/dev/null
find . -name '*.txt' -print0
find ~ -name "*.txt" -print
find ~/ -name '*.txt'
find /basedir/ \( -iname '*company*' -and \( -iname '*.txt' -or -iname '*.html' \) \) -print0
find -type f -name "*.wav"
grep export
./calc_space
find -name *.xml
find . -name \*.xml
while read i; do grep '<?xml' "$i" >/dev/null; [ $? == 0 ] && echo $i; done
find . -name \*.xml.bz2
find .
grep ".xml.bz2$"
for i in `find .
grep ".xml.bz2$"`; do find_graph -build_graph $i.graph $i; done
find . -name '*.zip' -exec sh -c 'unzip -d "`dirname \"{}\"`" "{}"' ';'
find . -name '*.zip' -exec sh -c 'unzip -d `dirname {}` {}' ';'
find . -name '*.zip' -execdir unzip '{}' ';'
find . -name '*1234.56789*'
find /root/of/where/files/are -name *Company*
find -name '*FooBar*' -print0
xargs -0 cp -t ~/foo/bar
find . -name "*FooBar*" -exec sh -c 'cp -- "$@" ~/foo/bar' sh {} +
find . -name '*FooBar*' -exec cp -t ~/foobar -- {} +
find . -name '*FoooBar*'
sed 's/.*/"&"/'
xargs cp ~/foo/bar
find -name *bar
find /myfiles -name '*blue*'
find /basedir/ -iname '*company*' -print0
find /root/of/where/files/are -name *company*
find . -name *conf*
find . -name *conf* -exec grep -Hni 'matching_text' {} \; > matching_text.conf.list
find / -name "*fink*" -print
find / \( -type f -or -type d \) -name \*fink\* -print
find . -name "*fink*" -print
find . -name '*foo'
find . name *foo
find . -name "*foo*"
sed -e "s/'/\\\'/g" -e 's/"/\\"/g' -e 's/ /\\ /g'
xargs cp /your/dest
find /etc -name *fstab*
find asia emea -type f -name "*gz"
find asia emea -type f -name "*gz"
while IFS= read -r fname; do printf "%s %s\n" "$fname" $(gzip -dc "$fname"
wc -l) >> file_count.txt; done
find . -name '*shp*'   -execdir mv '{}/*' shp_all ';'
mv $(find $(find . -name "*shp*" -printf "%h\n"
uniq) -type f) ../shp_all/
mv $(find . -name "*shp*" -printf "%h\n"
uniq)/* ../shp_all/
find . -name '*shp*'
find . -name "*shp*" -exec mv {} ../shp_all/ \;
find /usr -name *stat
find -name "*text"
find -iname '*weservice*'
xargs -I {} service {} restart
find dir -name \*~
xargs echo rm
find . -iname ".*" \! -iname 'list_files'
find . -iname "*.bak" -type f -print
xargs /bin/rm -f
find -iname “*.c” -exec grep -l ‘main(‘ {} \; -a -exec cp {} test1/ \;
find -name '*.[ch]'
xargs grep -E 'expr'
find . -name '*.[ch]'
xargs grep -E 'expr'
find / -name "*.core" -print -exec rm {} \;
find / -name "*.core"
xargs rm
find /var/www -name *.gif -o -name *.jpg
find /var/www -name *.gif
find /var/www -name *.gif -size +5k -size -10k
find /path/to/dir -name "*.gz" -type f
find . -name '*.gz'
find "*.gz" -exec gunzip -vt "{}" +
find . -name '*.gz'
xargs gunzip -vt
find . -name *.gz -exec gunzip '{}' \;
find . -print
grep '\.java'
find * -name "*.java"
find . -name "*.java"
find . -name '*.java'
find . -print
grep '.*Message.*\.java'
find -name '*.jpg
find . -name “*.jpg”
find $d -name '*.js'
grep -v " "
find . -type f -name '*.js' \( -exec grep -q '[[:space:]]' {} \; -o -print \)
find . -name *.less
find /var/log -name '*.log'
tar cv --files-from=-
bzip2 > log.tar.bz2
find . -type f -iname *.mp3
find . -type f -iname *.mp3 -delete
find / -type f -name *.mp3 -size +10M -exec rm {} \;
find /  -type f -name *.mp3 -size +10M -exec rm  {} \;
find . -name "*.mpg" -type f -print0
xargs -0 -I {} -n 1 -P 4 ffmpeg -i {} {}.mp4
find /srv/www/*/htdocs/system/application/ -name "*.php" -exec grep "debug (" {} \; -print
find /srv/www/*/htdocs/system/application/ -name "*.php" -exec grep -H "debug (" {} +
find /srv/www/*/htdocs/system/application/ -name "*.php" -print0
xargs -0 grep -H "debug ("
find . -type f -name "*.php"
find / -name "*.php"
find / -name "*.php" -print -o -path '/media' -prune
find . -maxdepth 1 -mindepth 1 \( -name '*.py' -not -name 'test_*' -not -name 'setup.py' \)
find /some/path -name "*rb" -o -name "*yml"
xargs grep -sl "some_phrase"
xargs sed -i -e 's/some_phrase/replacement_phrase/g'
find /apps/ -user root -type f -amin -2 -name *.rb
find / -name *.rpm -exec chmod 755 '{}' \;
find . -name "*.sh" -print0
xargs -0 -I file mv file ~/back.scripts
find . -name "*.sh" -print0
xargs -0 -I {} mv {} ~/back.scripts
find . -name "*.sh" -exec rm -rf '{}' \
find . -name "*.sh" -print0
xargs -0 rm -rf
find . -name "*.sh"
xargs rm -rf
find . -name '*.sql' -exec scriptname {} +
find . -name '*.sql' -print0
find . -type d -name ".svn" -print
parallel rm -rf
find . -type d -name ".svn" -print
xargs    rm -rf
find /tmp -name "*.tmp"
xargs rm
find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
find . -type f -name "*.txt" ! -name README.txt -print
find  . -type f -name "*.txt" -exec mv {} `basename {} .html` .html \;
find /home/user -name '*.txt'
xargs cp -av --target-directory=/home/backup/ --parents
find /home/user1 -name '*.txt'
xargs cp -av --target-directory=/home/backup/ --parents
find . -name "*.txt"
parallel -Xj1 --tty vim
find . -name "*.txt"
parallel -j1 --tty vim
find . -name "*.txt"
xargs bash -c '</dev/tty vim "$@"' ignoreme
find . -name "*.txt"
xargs vim
find /full/path/to/dir -name '*.txt' -print0
xargs -0 >/tmp/logfile
find . -name "*.txt"
xargs -o vim
find dir/ -name '*.txt'
xargs cp -a --target-directory=dir_txt/ --parents
find ~/ -name '*.txt'
find /home -user tecmint -iname "*.txt"
find -name \*.txt
find . -name "*.txt"
find . -name '*.txt' -print0
find . -name "*.txt" -print 2>/dev/null
find . -depth -name *.zip
find . -depth -name '*.zip' -exec /usr/bin/unzip -n {} \;
find . -depth -name '*.zip' -exec /usr/bin/unzip -n {} \; -delete
find . -depth -name '*.zip' -exec /usr/bin/unzip -n {} \; -exec rm {} \;
find . -type f -user tommye -iname "*.zip"
find /home/folder1/*.txt -type f
awk -F '.txt' '{printf "ln -s %s %s_CUSTOM_TEXT.txt\n", $0, $1}'
sh
find /path/to/check/* -maxdepth 0 -type f
find . -perm 0644
head
find . \( -name 1.txt -o -name 2.txt -o -name 3.txt \) -print
xargs chmod 444
find / -size +100M -exec rm -rf {} \;
find / -size +100M -exec rm -rf {} \;
find / -size 15M
find / -size 15M
find . -name '1US*'
find jcho -name 2*.data
find /data -type f -perm 400
find /data -type f -perm 400 -print
find /data -type f -perm 400 -print
xargs chmod 755
find /data -type f -perm 400 -exec echo Modifying {} \;
find /data -type f -perm 400 -print0
find /data -type f -perm 400 -exec echo Modifying {} \; -exec chmod 755 {} \;
find / -size 50M
find / -size 50M
find . -perm -664
find . -type f -perm 755
find . -type d -perm 777 -print -exec chmod 755 {} \;
find / -type d -perm 777 -print -exec chmod 755 {} \;
find . -type d -perm 777 -print -exec chmod 755 {} \;
find / -type f -perm 0777 -print -exec chmod 644 {} \;
find / -type f -perm 0777 -print -exec chmod 644 {} \;
find -perm 777
find / -type f -perm 0777 -print -exec chmod 644 {} \;
find . -type f \( -iname “*.c” \)
grep -i “keyword”
find .  -type f -name "CDC*" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \;
find .  -type f -name "CDC*" -ctime -1 -exec sed -i'' -e '1d' -e '$d' '{}'  \
wc -l
find . -name "*.css"
find . -name "*.css" -exec grep -l "#content" {} \;
find . -type f \( -iname "ES*" -o -iname "FS_*" \)
find / -perm /a=x
find / -perm /a=x
find . -name a\*.html
find . -iname a\*.html
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find . -name “*.jpg”
xargs gimp
find "$SOURCE" -type f -iname '*.jpg'
find . -name 'Lemon*.mp3' -exec mplayer {} ';'
find . -name 'Lemon*.mp3' -print0
xargs -0 mplayer
find . -name 'Lemon*.mp3' -print0
xargs -­0 -i mplayer '{}'
find ~ -type f -mtime 0 -iname '*.mp3'
find /home -type f -name '*.mp3'
find -type f -name "Makefile"
find -type f -name "Makefile" -exec awk 'FNR==235 {print FILENAME; print}' {} +
find . -name Makefile -print0
xargs -0 grep -nH $
grep :235:
find . -type f -name Makefile -print -exec sed -n '235p' {} \;
find ../../$name-module -name 'Name*' -type f -exec bash -c "mv \"\$1\" \"\${1/Name/$Name}\"" -- {} \;
find ../../$name-module -print0 -name 'Name*' -type f
xargs -0 rename "s/Name/$Name/"
find ../../$name-module -name 'Name*' -type f -exec bash -c 'mv "$1" "${1/Name/$Name}"' -- {} \;
find $HOME -iname '*.ogg' -size +20M
find $HOME -iname '*.ogg' ! -size +20M
find . -name "*.pdf" -print
grep -v "^\./pdfs/"
xargs -J X mv X ./pdfs/
find . -name \*.php -type f
find . -name \*.php -type f -print0
xargs -0 -n1 -P8 grep -Hn '$test'
find . -type f -name *.php
find -name '*.php' -exec bash -c '[[ "$(wc -l < "$0")" -eq 1 ]]
echo "$0"' '{}' ';'
find -name *.php -print
xargs -L1 awk 'NR>1{exit} END{if(NR==1) print FILENAME}'
find . -type f -name '*.php' -exec grep -Hcm2 $ {} +
sed -n '/:1$/{s///;p}'
find . -type f -name '*.php' -exec wc -l {} \;
egrep "^\s*1\s"
find . -type f -name '*.php' -exec grep -Hcm2 '[^[:space:]]' {} +
sed -n '/:1$/{s///;p}'
find . \( -iname "*.png" -o -iname "*.jpg" \) -print -exec tar -rf images.tar {} \;
find . -name "*.pl"
find /usr/share -name README
find / -perm /u=r
find / -perm /u=r
head
find / -perm /u=r
find / -perm /g=s
find / -perm +2000
find / -perm +g=s
find / -perm /g=s
find / -perm /g=s
find . -perm /g+s
head
find / -perm +6000 -type f -exec ls -ld {} \; > setuid.txt &
find /  -perm /u=s
find / -perm +4000
find / -perm +u=s
find / -perm /u=s
find / -perm /u=s
find . -perm /u=s
head
cd $(find . -name Subscription.java -printf '%h\n')
cd $(find . -name Subscription.java
xargs dirname)
cd `find . -name Subscription.java
xargs dirname`
find "$HOME" -name '*.txt' -type f -not -path "$HOME/newdir/*" -print0
xargs -0 cp -t "$HOME/newdir"
find "$HOME" -name '*.txt' -type f -print0
sort -zu
xargs -0 cp -t "$HOME/newdir"
find "$HOME" -name '*.txt' -type f -print0
xargs -0 cp -ut "$HOME/newdir"
find / -iname '*.txt'
xargs --replace=@ cp @ /tmp/txt
find / -user root -iname "*.txt"
find ./ -name doc.txt -printf "found\n"
find /home/jassi/ -type f -name "aliencoders.[0-9]+"
find /home/jassi/ -name "aliencoders.[0-9]+"
find -L $path -maxdepth 1 -type l
find /path/to/search -type l -exec test ! -e {} \; -print
find /path/to/search -type l -xtype l
find /path/to/search -xtype l
find -L . -type l
find -type l -xtype l
find -xtype l
find . -type l -! -exec test -e {} \; -print
find . -type l -exec sh -c "file -b {}
grep -q ^broken" \; -print
find . -type l -xtype l
find . -xtype l
find ./ -type l -exec file {} \;
grep broken
find . -type f -name 'btree*.c'
find /var/www/html/ -type d -name "build*"
sort
tail -n +5
xargs -I % echo -rf %
find /var/www/html/ -type d -name "build*"
sort -r
find . -type d -name "build*"
sort -r
find /path/to/search/in -name 'catalina*'
find -name 'catalina*'
find $HOME -name "*.conf" -exec sed -i 's/vermin/pony/g' {} \;
find parent -name dir*
find . -type d   -execdir echo /bin/mv {} /new/location \;
find $from_dir -mindepth 3 -maxdepth 3 -type d
find / -type d -name 'httpdocs'
find / -type d -name httpdocs
find / -type d -name httpdocs 2> /dev/null
find  /root -type d -iname "*linux*"
find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d -print0
find /var/www/html/zip/data -type d -mtime +90
uniq
find /home -mindepth 1 -maxdepth 1 -type d -name '*[aeiou][aeiou]*' -printf '*'
wc -c
find . -mindepth 1 -maxdepth 1 -type d
find . -maxdepth 1 -type d ! -name .
sort > a
find . -type d -maxdepth 1
find httpdocs -type d
find / -type d -size +50k
echo "$queue"
xargs -I'{}' find {} -mindepth 1 -maxdepth 1 -type d
find "$front_element" -maxdepth 1 -type d -not -path "$front_element" -printf '%T@ %p\n'
sort
awk '{print $2}'
find . -maxdepth 1 -type d
sed '/^\.$/d'
find -maxdepth 1 -type d -mtime -1
find /tmp -maxdepth 2 -mindepth 1 -type d
find /tmp/test/ -maxdepth 2 -mindepth 1 -type d
find /data1/realtime -mmin -60 -mmin +5 -type d
find /data1/realtime -mmin -60 -type d
find /path/to/base/dir -type d
find -type d
find . -not -path \*/.\* -type d -exec mkdir -p -- ../demo_bkp/{} \;
find -type d ! -perm -111
find . -type d ! -perm -111
find . -mmin -60 -mmin +5
find . -type d ! -iname '*.*'
while read d; do mv $d/* .; done
find . -type d -iname \*music_files\*
find . -type d -perm -o=w
find . -maxdepth 1 -type d -iname "*linkin park*" -exec cp -r {} /Users/tommye/Desktop/LP \;
find . -type d -name "*log*"
xargs -I {} sh -c "echo {};ls -la {}
tail -2"
find /path/to/look/in/ -type d
grep .texturedata
find . -name nasa -type d
find . -type d -name "0" -execdir tar -cvf ~/home/directoryForTransfer/filename.tar RS* \;
find . -type d -name "0" -execdir tar -cvf filename.tar RS* \;
find A -type d -name 'D'
find . -name "D" -type d
find ./ -type d -name 'D'
find ./ -type d -name 'D'
sed 's/D$//'
find . -name nasa -type d
find $HOME -type d -name $1 -exec echo {} ';'  -exec rm -rf {} ';'
find /path/to/look/in/ -type d -name '.texturedata'
find . -type d -name files -exec chmod ug=rwx,o= '{}' \;
find / -name local -type d
find . -name modules \! -exec sh -c 'find {} -mindepth 1 -name modules
read' \; -print
find local /tmp -name mydir -type d -print
find . -name "octave" -type d
find . -type d -name CVS -exec rm -r {} \;
find . -type d -name build
find /fss/fin -type d -name  "essbase" -print
sudo find / -type d -name "postgis-2.0.0"
find / -type d -size +50k
find / -type d
wc -l
find / -path /proc -prune -o -type d
wc -l
find / -type d -perm 0777
find YOUR_STARTING_DIRECTORY -type d -name "*99966*" -print
find / -type d -name "*99966*" -print 2>/dev/null
find . -type d
diff <(find . -exec readlink -f {} \;
sed 's/\(.*\)\/.*$/\1/'
sort
uniq) <(find . -name main.cpp  -exec readlink -f {} \;
sed 's/\(.*\)\/.*$/\1/'
sort
uniq)
sed -n 's/< \(.*\)/\1/p'
find . -type d -atime $FTIME
find . -mtime -7 -type d
find . -type d –iname stat*
find "$1"/.hg -type d -print0
xargs chmod g+s
find $1/.hg -type d -exec chmod g+s {} \;
find "$FOLDER" -type d -printf "%T@\n"
cut -f 1 -d .
sort -nr
find $ROOT_DIR -type d -depth -print
find $d -type d -exec chmod ug=rwx,o= '{}' \;
find $path -type d
find $root -type d
tr '\n' ':'
find ${x} -type d -exec chmod ug=rwx,o= '{}' \;
find ${1:-.} -mindepth 1 -maxdepth 1 -type d
find .cache/chromium/Default/Cache/ -type d -print0
du -h
grep '[0-9]\{3\}M'
cut -f2
grep -v '^.$'
find /nas -type d
find /var/www -type d \( ! -wholename "/var/www/web-release-data/*"  ! -wholename "/var/www/web-development-data/*" \)
find A -type d \( ! -wholename "A/a/*" \)
find project -maxdepth 1 -mindepth 1 -regextype posix-egrep ! -iregex  $PATTERN  ! -empty -type d
find test -type d -regex '.*/course[0-9.]*'
find test -regex "[course*]" -type d
find test -type d -regex '.*/course[0-9]\.[0-9]\.[0-9]\.[0-9]$'
find /directory-path  -type d -exec sudo chmod 2775 {} +
find /fss/fin -type d
find /home -type d ! -exec test -e '{}/bin' \; -print
find /home/me -type d
find /home/me/"$d" -type d
find /home/me/target_dir_1 -type d
find /home/mywebsite/public_html/sites/all/modules -type d -exec chmod 750 {} +
find /home/username/public_html/modules -type d -exec chmod 750 {} +
find /home/username/public_html/sites/all/modules -type d -exec chmod 750 {} +
find /home/username/public_html/sites/all/themes -type d -exec chmod 750 {} +
find /home/username/public_html/sites/default/files -type d -exec chmod 770 {} +
find /home/username/public_html/themes -type d -exec chmod 750 {} +
find /home/username/tmp -type d -exec chmod 770 {} +
find /myfiles -type d
find /path -type d -printf "%f\n"
awk 'length==33'
sudo find /path/to/Dir -type d -print0
xargs -0 sudo chmod 755
find /path/to/base/cache /path/to/base/tmp /path/to/base/logs -type d -exec chmod 755 {} +
chmod 755 $(find /path/to/base/dir -type d)
find /path/to/base/dir -type d -exec chmod 755 {} +
find /path/to/base/dir -type d -print0
xargs -0 chmod 755
find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sh -c 'd=${1##*/}; sudo tar -zcpvf "$d".tar.gz "$d"' - {} \;
find /path/to/dir -mindepth 1 -maxdepth 1 -type d -execdir sudo tar -zcpvf {}.tar.gz {} \;
find /path/to/dir -type d -exec chmod 755 {} +
sudo find /var/www -type d -print0
xargs -0 chmod 755
sudo find /var/www/some/subset -type d -print0
xargs -0 chmod g+s
find <path> -name '.*' -prune -o -type d -print
find /home/admin/public_html/ -type d -exec chmod 755 {} \;
find  /root -type d -iname "*linux*"
find folder_name -type d -exec chmod 775 ‘{}’ \;
find parent_directory -type d
find -type d
find . -type d
find . -type d -print
find . -type d -exec chmod 500 {} \;
find -type d -print0
xargs -0 chmod 644
find . -type d -exec chmod 700 {} \;
find . -type d -exec chmod 755 {} \;
find . -type d -name files -exec chmod ug+rwx,o-rwx {} \;
find -type d -print0
sed -e "y/\d0/:/;s/:$//;"
find . -type d -exec /path/to/script.sh '{}' \;
find . -type d -exec /path/to/script.sh \{} \;
find . -type d -exec ./script.sh {} \;
find . -type d -depth 1 -print0
xargs -0 sh -c 'for dir; do pushd "$dir" && latexmk -c && popd; done' fnord
find . -type d -print0
xargs -0 chmod go+rx
find . -type d -exec chmod ug=rwx,o= {} \;
find . -type d -exec chmod u=rwx,g=rx,o=x {} \;
find . -type d -exec chmod u=rwx,g=rx,o= '{}' \;
find . -type d -exec chmod u=rwx,g=rx,o=rx {} \;
find -type d exec chmod 755 {} +
find -type d exec chmod 775 {} +
find -type d
xargs chmod 775
find -type d -a ! -name '.?*' -o ! -prune
find . -type d -a ! -name '.?*' -o -name '.?*' -a ! -prune
find . -type d
grep -v '/\.'
find . -type d
grep DIRNAME
find . -type d -iregex '^\./course\([0-9]\.\)*[0-9]$'
find . -type d -mtime $FTIME
find . -type d -name "?????????????????????????????????"
find . -regextype posix-extended -type d -regex ".{5}"
find . -perm 755 -exec chmod 644 {} \;
find dir -name '?????????????????????????????????'
sudo find foldername -type d -exec chmod 755 {} ";"
find htdocs -type d -exec chmod 775 {} +
find /parent -maxdepth 1 -type d -print0
xargs -0 chmod -R 700
find . -mindepth 1 -type d
xargs chmod 700
find . -maxdepth 1 -type d -exec chmod -R 700 {} \;
find media/ -type d -exec chmod 700 {} \;
find "$GIVEN_DIR" -type d -mindepth 1
find "$GIVEN_DIR" -type d -mindepth 1 -print0
find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \;
find . -mindepth 1 -name '.*' -prune -o \( -type d -print \)
find mydir -mindepth 2 -type d
find mydir -type d
find path_to_dir -type d
find $PWD -type d
find . -mount -type d -print0
xargs -0 -n1 /tmp/count_em_$$
sort -n
find var/ -type d -exec chmod 700 {} \;
find ~/code -type d
tr '\n' ':'
sed 's/:$//'
find ~/code -type d -name '[^\.]*'
tr '\n' ':'
sed 's/:$//'
find ~/code -type d
sed '/\/\\./d'
tr '\n' ':'
sed 's/:$//'
find ~/code -name '.*' -prune -o -type d -printf ':%p'
find / -type d -name Tecmint
find / -type d -name root
find . -type d -ctime $FTIME
find . -type d -perm 755 -exec chmod 700 {} \;
find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \;
find -name "* *" -type d
rename 's/ /_/g'
find . -type f -printf "%f\n" -name "*.jar"
sort -f
uniq -i -d
find root -mindepth 2 -type d -empty
find . -type d -maxdepth 1 -empty -delete
find . -type d -maxdepth 1 -empty -print0
xargs -0 /bin/rmdir
find . -type d -empty -delete
find . -type d -empty -print0
xargs -0 /bin/rmdir
find "$somedir" -type d -empty -exec cp /my/configfile {} \;
find /tmp -type d -empty
find /tmp -type d -empty
find /tmp -type d -empty
find . -type d -empty
find ~ -empty
find /tmp -type f -empty
find ~ -empty
find . -empty -maxdepth 1 -exec rm {} \;
find . -maxdepth 1 -type f -empty -delete
find . -type f -maxdepth 1 -empty -print0
xargs -0 /bin/rm
find . -type f -empty -delete
find . -type f -empty -print0
xargs -0 /bin/rm
find /tmp -type f -empty
find /tmp -type f -empty
find /tmp -type f -empty
find . -type d -empty
find . -type f -empty
find . -size 0c -type f
find / -perm /a=x
find . -perm -111 -type f
sort -r
find . -perm /a=x
head
find . -perm /a=x
find {} -type f -depth 1 -perm +0111
sort -r
find {} -type f -depth 1 -print0 -perm +0111
xargs -n1 -0 basename
sort -r && echo
find {} -name 'upvoter-*' -type f -or -type l -maxdepth 1 -perm +111
find {} -name 'upvoter-*' -type f -or \( -type l \) -maxdepth 1 -perm +111
find -L -maxdepth 1 -name 'upvoter-*' -type f -perm /111
find {} -name 'upvoter-*' \( -type f -or -type l \) -maxdepth 1 -perm +111
find ./ -executable
find /path -perm /ugo+x
find debian/fglrx/ -name 'fglrx-libGL*'
find debian/fglrx/ -name 'fglrx-libglx*'
find . -name "*.c" -a  -perm -777
xargs rm -rf
find . -name headdump* >delete.txt
find . -type f -printf "%C@ %p\n"
sort -rn
head -n 10
find . -type f -printf "%C@ %p\n"
sort -r
head -n 10
find . -type f -printf '%T@ %p\n'
sort -n
tail -10
cut -f2- -d" "
find .  -type f -links +2 -exec ls -lrt {} \;
find /home/kibab -name file.ext -exec echo . ';'
find . -name "file.ext"
grep "FooBar"
xargs -i cp -p "{}" .
find `pwd` -name "file.ext" -exec echo $(dirname {}) \;
find . -name file1 -or -name file9
find /root/directory/to/search -name 'filename.*'
find /usr -name "*.c"
find -name "*.c"
find -iname "*.c"
find . -perm -20 -exec chmod g-w {} ;  or  find . -perm -20 -print
xargs chmod g-w
find . -type f -newerat 2008-09-29 ! -newerat 2008-09-30
find ./
wc -l
find . -name *disc*
find . -name '* *'
find ./ -iname ! -iname dirname
find . -iname "*linkin park*" -exec cp -r {} /Users/tommye/Desktop/LP \;
find . -iname "*linkin park*" > temp;rsync -arhv --files-from=temp  /Users/tommye/Desktop/LP;rm temp
find * -mtime -1 -daystart -print0
cpio -pd0 ../changeset
find / -name filedir
find .
find . \( ! -regex '.*/\..*' \)
sed 's/^..//'
find . ! -name "$controlchars"
find . -mtime -7
find .
find . -xdev -print0
find . -xdev -print0
cpio -oa0V
gzip > path_to_save.cpio.gz
find / -name *.rpm -exec chmod 755 '{}' \;
find / -xdev -name \*.rpm
find . -perm 664
find . -type f -name "*.java" -exec grep -il string {} \;
find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
find . -type f -name INPUT.txt -print0
xargs -0 -I file  sed -i.bak '/^#/d' file
find . -type f -name INPUT.txt -print0
xargs -0 -I {}  sed -i.bak '/^#/d' {}
find . -type f -name INPUT.txt -print0
xargs -0 sed -i.bak '/^#/d'
find /home/wsuNID/ -name file1.txt
find /var/www/ -name wp-config.php
find . -type f -newerct 2008-09-29 ! -newerct 2008-09-30
find . -maxdepth 1 -type f ! -name '*.gz' -exec gzip "{}" \;
find . -type f ! -name '*.gz' -exec gzip "{}" \;
find . -type f ! \( -name "*gz" -o -name "*tmp" -o -name "*xftp" \) -exec gzip -n '{}' \;
find . -maxdepth 1 -type f -not -regex '.*\.txt'
find . -not -path '*/\.*' -type f -print0
xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
find /mydir -type f -exec sed -i 's/<string1>/<string2>/g' {} +
find /home/ -type f -regextype posix-extended -regex ".*(string1
string2
$(hostname)).*"
find "$dir" -maxdepth 1 -type f
wc -l
find "$dir" -maxdepth 1 -type f
find "$dir" -maxdepth 1 -type f
sed 's#.*/#   #'
find ./dir1 -type f -exec basename {} \;
find /dir1 -type f -printf "%f\n"
find /home/kos -name *.tmp -print
find /home/user/ -cmin 10 -print
find /tmp -maxdepth 1 -name "$USER.*"
find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90
find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90 -printf "%h\n"
sort
uniq
find /var/www/html/zip/data/*/*/*/*/* -type f -mtime +90
sed 's
/[^/]*$
'
find . -mindepth 2
find ~ -mmin -90
find . -type f -exec sh -c 'echo first; false' \; -exec echo second \;
find . -type f \( -exec command1 \; -false -o -exec command2 \; \)
find . -type f -exec sh -c 'echo first; true' \; -exec echo second \;
find . -type f \( -exec sh -c 'echo first; false' \; -false -o -exec echo second \; \)
find ./ -name "*"
xargs grep "searchName"
find ./ -name "*" -printf "%f\n"
xargs grep "searchName"
full_backup_dir=$(find . -depth '(' -wholename './.*' ')' -prune -o -print)
full_backup_dir="$(find . -depth \( -wholename \./\.\* \) -prune -o -print
cpio -oav)"
file_changed=$(find . -depth \( -wholename \./\.\* \) -prune -o -mtime -1 -print
cpio -oav)
find . -depth \( -wholename \./\.\* \) -prune -o -print
cpio -aov > /media/caca/extract/full$date.cpio
full_backup_dir=$(find . -depth \( -wholename \./\.\* \) -prune -o -mtime -1 -print)
find . -mtime -1
cpio -oa 2>/dev/null
( cd $backup_dir && cpio -imd)
find $(pwd) -type f -name "*.ext"
while read file; do sed -e 's/^M//g' -i "$file"; done;
find dirname -exec echo found {} \;
find /tmp/foo -exec /tmp/echoargs {} +
find / -type f -size +20000k
find / -type f -size +20000k -exec ls -lh {} \;
awk '{ print $8 ": " $5 }'
find -maxdepth 1 -type f -mtime -1
find -maxdepth 1 -type f -daystart -mtime -1
find . -maxdepth 2  -type f
find /etc/ -mtime -30
xargs -0 cp /a/path
find /home -user bob
find /home -atime +7
find /home -mtime -7
find /home/myuser -mtime +7 -print
find -L /myfiles
find /usr -group staff
find /var/tmp -uid 1000
find sourceDir -mindepth 1 -maxdepth 1
find sourceDir -mindepth 1
find ./work -print
xargs grep "profit"
find ./ -type f -name "*.php"
xargs -r rename "s/php/html/"
find . -mtime -1 -prin
find . -atime +30 -print
find ./* -mtime +5
find . -type f -iname "*linkin park*" -exec cp -r {} /Users/tommye/Desktop/LP \;
find . -type f -iname "*linkin park*"
cpio -pvdmu /Users/tommye/Desktop/LP
find
wc -l
find ./ -type f -exec sed -i "s/$1/$2/" {} \;
find . -print
grep -i foo
find . \( -type d -name '.svn' -o -type f -name '*.html' \) -prune -o -print0
find . -type d -name '.git*' -prune -o -type f -print
find . -name "FILES.EXT"
find . -newer some_file
find . ! -newer some_file
find . -name 'a(b*' -print
find . -cmin $minutes -print
find . -nouser
find . -name ".DS_STORE"
find . -name ".DS_STORE" -delete
find $(pwd) -name YourProgram -exec dirname {} \;
while read d; do cd "$d" && ./YourPrgram; done
find ./ -iname file_name ! -path "./dirt to be Excluded/*"
find . -name '[-]*'
find . -type f -name "*.keep.$1" -print0
while IFS= read -r -d '' f; do mv -- "$f" "${f%.keep.$1}"; done
find . -type f -name "*.keep.$1" -print0
xargs -0 rename "s/\.keep\.$1$//"
find . -path './sr*sc'
find . -path "./sr*sc"
find . -path ‘*/1/lang/en.css’ -print
find . -size +1M
find . -size +1M -exec mv {} files \+
find . -size +1M -print0
xargs -0 -I '{}' mv '{}' files
find . -size +1M -ok mv {} files \+
find ./ -type f -name *".html"
xargs sed -i "s/php/html/g"
find ./ -size +5M -type f
xargs -r ls -Ssh
find -type f -name .git -prune -o -print
find аргумент [опция_поиска] [значение] [значение]
find ~/ [опция_поиска] [значение] [опция_действия]
find "$directory" -perm "$permissions"
find / -perm -u+s -print
find ~ ! -user ${USER}
find ~ ! -user $USER -exec sudo chown ${USER}:"{}" \;
find ~ -perm 777
find /usr/src -name CVS -prune -o -mindepth +6 -print
find ~ -size 100M
find ~ -size +100M
find ~ -size -100M
find ~/clang+llvm-3.3/bin/ -type f -exec echo basename {} \;
find . -type d -print0
xargs -0 -I {} sh -c ' echo "{}: \c" ; find {} -maxdepth 1 -type f
wc -l ; find {} -maxdepth 1 -type f -print
sed "s#.*/##" '
find . -type d -print0
xargs -0 -I {} sh -c ' echo "{}: \c" ; find {} -maxdepth 1 -type f
wc -l ; find {} -maxdepth 1 -type f -print'
find /tmp/test/ -maxdepth 2 -mindepth 1 -type d
while read dir; do printf "%s : " "$dir"; find "$dir" -maxdepth 1 -type f
wc -l; find "$dir" -maxdepth 1 -type f ; done;
find / -size +100M -exec rm -rf {} \;
find / -type f -size +20000k
find / -type f -size +20000k -exec ls -lh {} \;
awk '{ print $8 ": " $5 }'
find . -name 'abc*'
sed 's/$/\tok/'
column -t
find . -name 'abc*' -exec echo {}' OK' \;
column -t
find -iname '.#*'
find . -iname '.#*' -print
while read -r i; do foobar "$i"; done
find . -iname '.#*' -print0
while read -r -d '' i; do foobar "$i"; done
find foo -path foo/bar -print
find ${directory} -name "${pattern}" -print0
xargs -0 ${my_command}
find -cmin -5
less -R
ls -ltr
grep 'Mar 4'
awk '{print 9}'
xargs zcat -fq
grep 12345
find . -type f -newermt 2007-06-07 ! -newermt 2007-06-08
find / -size +700M
find / -name passwd
find -iname "MyCProgram.c" -exec md5sum {} \;
find $PWD -name "file.ext" -exec sh -c 'echo $(dirname {})' ';'
find . -name "file.ext" -execdir pwd ';'
find `pwd` -name "file.ext" -exec echo $(dirname {}) \;
find `pwd` -name file.ext
xargs -l1 dirname
find `pwd` -name "file.ext" -printf "%f\n"
find `pwd` -name "file.ext" -exec dirname {} \;
find `pwd` -name "file.ext" -exec echo $(dirname {}) \;
find -name "filename"
find . '(' -name FOLDER1 -prune -o -name filename ')' -print
find . -name FOLDER1 -prune -o -name filename
find -name foo_bar
find . -name something
xargs -0 ls
find . -name something -exec ls -l {} \;
find -name test2 -prune
find -name test2
find /usr/ports/ -name Makefile -exec grep ^USE_RC_SUBR '{}' '+'
wc -l
find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE.*CPAN' '{}' '+'
wc -l
find /usr/ports/ -name Makefile -exec grep '^MASTER_SITE_SUBDIR.*\.\./.*authors' '{}' '+'
wc -l
cat `find . -name aaa.txt`
find . -maxdepth 1 -ctime +1 -name file
find . -maxdepth 1 -cmin +60 -name file
find . -maxdepth 1 -cmin +60 -name file >/tmp.$$
find . -name foo -type d -prune -o -name foo -print
find ~ -type f -name 'foo*' -ok ls -l '{}' ';'
find . -name new -print -exec cat {} +
find . -name new -print -exec cat {} \;
find . -name test -prune
find . -name 'text.txt' -print -exec cat {} \;
find / -name file1
find / -name file1
find . -newer httpd.conf
find -uid 1000
find -user 1000
locate labra
xargs -I{} scp '{}' masi@11.11.11.11:~/Desktop/
find $(mount -t smbfs
awk '{print $3}') -mount -type f -ls -execdir file {} \;
find / -size +600M -print
find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
find / -perm -0002
find / -mmin -10
find / -name autoload.php
find / -name composer.json
find / -name composer.json -exec grep -n drush {} /dev/null \;
find / -name drush
find / -wholename  '/proc' -prune  -o  -type f -perm -0002 -exec ls -l {} \;
find / -group group2
find . -group root -print
xargs chown temp
find . -user daniel
find / -user comp
find / -user vivek
find / -mmin -30 -ls
find . -name "*.php" -print
find /home/dm/Video -mtime -7
find /home/dm/Video -mtime +10
find / -user user1
find / -name *.rpm -exec chmod 755 '{}' \;
find . -print
grep '\.java'
find . -print
grep '.*Message.*\.java'
find . -size 100M
find . -size +100M
find . -user tommye
find . -size -100M
find / -size 50c
find / -size -50c
find . -type f -mtime -3
find . -group 10 -perm -2000 -print
find . -group staff -perm -2000 -print
find . -user 0 -perm -4000 -print
find . -user root -perm -4000 -print
find -not -user www-data
find /home -group developer
find / -group root
find / -user root
find / -group root
head
find /home -group developer
find /home -user tecmint
find / -user root
head
find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
find / -maxdepth 1 -xdev -type f -exec grep -Zli "stringtofind" {} +
find / -maxdepth 1 -xdev -type f -print -exec grep -i "stringtofind" -q {} \;
find / -perm -644
find . -mtime -7 -type f
find -regextype posix-egrep -regex '.*(php
js)$'
find / -perm -u+s -print
find / \( -perm -006 -o -perm -007 \) \( ! -type -l \) -ls
find /home/musicuser/Music/ -type f  -iname "*$1*" -iname "*$2*" -exec mplayer {} \;
find /home -mtime -7
find /home -atime +7
find /home -mtime -7
find -newer ordinary_file
find /home -atime +100
find / [опция_поиска] [значение] 	[опция_действия]
find ./ -name "* *" -type f -d 1
perl -ple '$file = $_; $file =~ s/\s+/_/g; rename($_, $file);'
find /path -type f -not -name "*.*" -print0
xargs -0 rename 's/(.)$/$1.jpg/'
find "$1" -path "*/.*" -prune -o \( -type f -print0 \)
find $1 -type f -not -regex '.*/\..*' -exec $0 hashmove '{}' \;
find "$1" -type f -print0
parallel -0 -X md5 > checksums.md5
find "$1" -type f -exec md5sum {} \; > "$1"__checksums.md5
find $YOUR_DIR -type f
find $d -maxdepth 1 -perm -100 -type f
sed 's#.*/##'
find $d -type f -exec chmod ug=rw,o= '{}' \;
find "$dir" -type f
find $dir -type f
find "$dir" -type f
find "$musicdir" -type f -print
find $root_dir -type f
find "$source_dir" -type f -regex ".*\.\(avi\
wmv\
flv\
mp4\)" -print0
find "$source_dir" -type f
egrep "$input_file_type"
find ${x} -type f -exec chmod ug=rw,o= '{}' \;
find "${searchpath}" -type f -print0
xargs -0 grep -l -E "${string1}".*"${string2}".*"${string3}"
find "${searchpath}" -type f -print0
xargs -0 grep -l -E "${string1}.*${string2}.*${string3}"
find `echo "${searchpath}"` -type f -print0
xargs -0 grep -l -E '"${string1}".*"${string2}".*"${string3}"'
find dir -type f
xargs md5sum >> file.txt
find dir -type f -print0
xargs -0 md5sum >> file.txt
find ./lib/app -type f
sort
tee myFile
find ./lib/app -type f
sort
find ./lib/app -type f
sort
xargs awk 'ENDFILE {print ""} {print}' > myFile
find /home -user tecmint
find /home/feeds/data -type f -not -path "*def/incoming*" -not -path "*456/incoming*"
find /home/myfolder -type f -print0
xargs -0 grep -l -E 'abc.*def.*ghi'
find /home/mywebsite/public_html/sites/all/modules -type f -exec chmod 640 {} +
find /home/username/public_html/modules -type f -exec chmod 640 {} +
find /home/username/public_html/sites/all/modules -type f -exec chmod 640 {} +
find /home/username/public_html/sites/all/themes -type f -exec chmod 640 {} +
find /home/username/public_html/sites/default/files -type f -exec chmod 660 {} +
find /home/username/public_html/themes -type f -exec chmod 640 {} +
find /mnt/naspath -name .snapshot -prune -o \( -type f -mtime 0 -print0 \)
find /mnt/naspath \! \(-name .snapshot -prune\) -type f -mtime 0 -print0
find /mountpoint -type f -links +1
find /myfiles -type f -perm -647
find /myfiles -type f -perm -o+rw
find /path -perm /011
find /path -perm -022
find /path -perm -g+w,o+w
find /path -perm -go+w
find /path -perm /g+w,o+w
find /path -type f -print0
xargs -0 md5sum
sudo find /path/to/Dir -type f -print0
xargs -0 sudo chmod 644
chmod 644 $(find /path/to/base/dir -type f)
find /path/to/base/dir -type f -exec chmod 644 {} +
find /path/to/base/dir -type f -print0
xargs -0 chmod 644
find /path/to/dir -type f -exec chmod 644 {} +
find /path/to/dir -type f -mtime -7 -print0
xargs -0 ls -lt
head
find /path/to/dir -type f -mtime -7 -print0
find /path/to/file -type f -size +51200c 2>/dev/null
find /path/to/input/ -type f -exec grep -qiF spammer@spammy.com \{\} \; -print
find /path/you/need -type f -exec md5sum {} \; > checksums.md5
find /somefolder -type f
grep -i '\(.*error.*\)\
\(^second.*\log$\)\
\(.*FFPC\.log$\)'
find -E /somefolder -type f -iregex '\./(.*\.error.*
second.*log
.*FFPC\.log)$'
find -E /somefolder -type f -regex '\./(.*\.error.*
second.*log
.*FFPC\.log)$'
find /somefolder -type f -name $FILE_PATTERN
find /usr/tom
egrep '*.pl
*.pm'
xargs cat
grep <PATTERN>
sudo find /var/www -type f -print0
xargs -0 chmod 644
find Mainfolder -type f > outputfile
find /dir -amin -60
find /dir -cmin -60
find /dir -mmin -60
find . -type f -exec grep California {} \; -print
find . -type f -exec grep -i California {} \; -print
wc -l
find . -type f -exec grep -n California {} \; -print
wc -l
find . -type f -exec grep California {} \; -print
wc -l
find "`pwd`" -type f
find -type f
find . -type f
find . -type f -print
find -type f -print0
find . -type f -exec chmod 400 {} \;
find . -type f -exec chmod 600 {} \;
find . -type f -exec chmod 644 {} \;
find . -type f
wc -l
find . -type f -exec chmod u+r-wx,g+rw-x,o-rwx {} \;
find . -type f
xargs cat
wordfrequency
grep yourword
find . -type f -execdir echo '{}' ';'
find . -type f -printf "%f\n"
find . -type f -printf '%f ' -exec openssl dgst -md5 {} \;
find . -type f -print0
find . -type f -exec bash -c 'f="{}"; echo "${f:2}"' \;
find . -type f -print
sed 's
^.*/S
S
'
find . -type f -exec /tmp/clever.sh {} \;
find . -type f -exec fromdos {} \;
find . -exec grep something {} +
find . -print
xargs grep something
find . -type f -print0
xargs -0 chmod go+r
find . -type f -exec chmod ug=rw,o= {} \;
find . -type f -exec chmod u=rw,g=r,o= '{}' \;
find . -type f -exec chmod u=rw,g=r,o=r {} \; - that's 644
find -type f
xargs chmod 775
find . -type f -exec chmod 775 {} +
find . -type f -exec file {} \;
find . -type f -print0
xargs -0 file
find . -type f
xargs file
find . -type f -exec curl --user user:pass --ftp-create-dirs -T {} https://PATH_TO_NEXUS/{} \;
find . -type f -printf '%P\n' > outputfile
find -name '.?*' -prune -o \( -type f -print0 \)
find . -depth -path './.*' -prune -o -print
find . -type f ! -name "$OUTPUT" -exec md5sum $MD5SUM_OPTIONS {} + > $OUTPUT
find -type f -name 'error.[0-9]*' -o -name 'access.[0-9]*' -o -name 'error_log.[0-9]*' -o -name 'access_log.[0-9]*' -o -name 'mod_jk.log.[0-9]*'
find -name '[error,access,error_log,access_log,mod_jk.log]*.[0-9]*' -type f
find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
LC_ALL=C find . -regextype posix-egrep -regex '^.*/[a-z][^/]*$' -type f
find -type f -regex '.*\(\(error\
access\)\(_log\)?\
mod_jk\.log\)\.[0-9]+'
find . -type f -size +10k
find . -amin -1
find . -type f \! -iregex '.\
./.git' -exec perl -i'' -pe "s/$1/$upper2/gi" {} +
find . -type f \! -iregex '.\
./.git' -exec perl -i'' -pe "s/$lower1/$lower2/g" {} +
find . -type f \! -iregex '.\
./.git' -exec perl -i -pe 's/$1/$upper2/gi' {} \;
find . -type f \! -iregex '.\
./.git' -exec perl -i -pe 's/$lower1/$lower2/g' {} \;
find . -type f -print0
xargs -0 perl -nle 'print if /^.*666$/'
find -mtime 0
find -daystart -mtime +0
find -mtime +0
find -mtime -1
find -mtime +1
find . -type f -mtime +7 -print0
xargs    -0 rm
find . -name "filename_regex"
grep -v '.svn' -v '.pdv'
xargs grep -i 'your search string'
find . -type f -exec file {} \;
awk -F: '{ if ($2 ~/[Ii]mage
EPS/) print $1}'
find . -type f -exec file {} \;
awk -F: '{if ($2 ~/image/) print $1}'
find . -type f -exec file {} \;
grep -o -P '^.+: \w+ image'
find . -name '*' -exec file {} \;
grep -o -P '^.+: \w+ image'
find . -type f -ctime -3
tail -n 5
find . -type f -ctime -3 -printf "%C@ %p\n"
sort
tail -n 5
sed 's/[^ ]* \(.*\)/\1/'
find . -type f -perm 755 -exec chmod 644 {} \;
find -type f -printf "%s %p\n"
sort -nr
head -n 4
find -type f -printf "%s %p\n"
sort -nr
head -n 4
awk "{print $2}"
find -type f -printf "%s %p\n"
sort -nr
head -n 4
cut -d ' ' -f 2
find -type f -printf "%s %p\n"
sort -nr
head -n 4
sed -r 's/[0-9]+\s//g'
sort < <(find -printf "%T@ %p\n")
find . -name .git -prune -o -type f -exec perl -i -pe "s/\Q$1\E/\L$2\E/i" {} +
find . -name .snapshot -prune -o \( -type f -mtime 0 -print0 \)
find . -type f -print0
parallel -0 -X md5sum
find . -type f
while read f; do g=`md5sum $f
awk '{print $1}'`; echo "$g $f"> $f-$g.md5; done
find . -type f
while read f; do g=`md5sum $f` > $f.md5; done
find . -type f -exec md5sum {} \; > MD5SUMS
find dir -type f -exec md5sum {} + > dir.md5
find dir -type f -print0
xargs -0 md5sum > dir.md5
find /path/to/dir ! -perm 0644
find /path/to/dir ! -perm 644
sudo find foldername -type f -exec chmod 644 {} ";"
find images -type f
find ./subfolder ./subfolder/*/ -maxdepth 1 -type f
find media/ -type f -exec chmod 600 {} \;
find .  -mindepth 1 -type f
find path_to_dir -type f
find relative/path/to/dir -type f -exec md5sum {} + > sums.md5
find . -type f
xargs -I {} chmod --reference {} ../version1/{}
find . -maxdepth 1 -not -samefile /home/nez/file.txt
find . -maxdepth 1 -not -iname file.txt
find . -maxdepth 1 -not -iwholename '*Video'
find trunk -type f -exec curl --user user:pass --ftp-create-dirs -T {} https://PATH_TO_NEXUS/{} \;
find var/ -type f -exec chmod 600 {} \;
find ~/code -name '.*' -prune -o -type f -a -perm /u+x -print
sed 's@/[^/]\+$@:@'
sort
uniq
tr -d '\n'
sed 's/^/:/; s/:$//'
find -newer /etc/passwd
find . -name [ab]* -print
find / -user lal -exec chown ravi {} \;
find . -inum 211028 -exec mv {} newname.dir \;
find . -type f -not -name "*.html"
find . -exec file {} \;
grep text
cut -d: -f1
find /usr/ports/ -name Makefile\* -mindepth 3 -maxdepth 3 -exec egrep "NOPORTDOCS
NOPORTEXAMPLES" '{}' '+'
wc -l
find /usr/ports/ -name Makefile\* -exec grep -l QMAKESPEC '{}' '+'
wc -l
find /usr/ports/ -name Makefile\* -exec grep -l QTDIR '{}' '+'
wc -l
find /usr/ports/ -name Makefile\* -exec grep `printf '\15'` -l '{}' '+'
wc -l
find /usr/ports/ -name '*patch-*' -exec grep `printf '\15'` -l '{}' '+'
wc -l
find /usr/local/games -name "*xpilot*"
find / -fstype ext3 -name zsh -ls 2> /dev/null
find / -fstype ext3 -name zsh*
find -name '*macs'
find -L /home/peter -name *~ -exec rm '{}' +
find -L /home/peter -name *~ -exec rm '{}' \;
find -L /home/peter -name *~ -print0
xargs -0 -r -n1000 rm
find -L /home/peter -name *~ -print0
xargs -0 -r rm
find -L /home/peter -name *~
xargs rm
find / -user user1
find / -type f -perm 777
find /etc -maxdepth 2 -name "*.conf"
tail
find /etc -name "*.conf" -mmin -30
find /home -user exampleuser -mtime 7 -iname ".db"
find . -maxdepth 1 -iname "*.jpg"
xargs tar -czvf jpeg.tgz
find "$dir" -maxdepth 1 -type f -iname '*.txt'
sort -n
find /home/my_dir -name '*.txt'
xargs grep -c ^.*
find . -type f -perm 644 -exec chmod 664 {} \;
find /home -type f -name '*.aac'
find `pwd` -name file.ext
xargs -l1 dirname
find ./ -name "*.txt"
rev
cut -d '/' -f1
rev
find . -type f -name '* *'
find / -perm -u+s
find / -perm -u+s
find / -perm -u+s
find . -type f -iname '*.jpg' -print0
find -name "MyCProgram.c"
find -iname "MyCProgram.c"
find ~ -type f -mtime -2
find .
find . -name \*.php
find / -xdev -name "*.rpm"
find $dir -mtime +3
find ~ -name 'top*' -newer /etc/motd
find /usr/local -iname "*blast*"
find /usr/local -name "*blast*"
find /etc -print0
xargs -0 file
find /etc -print0
grep -azZ test
xargs -0 file
find /eserver6 -L
find . -maxdepth 1
sort > a
comm -12 <(find . -maxdepth 1
sed -e 's/^.\///' ) <(cat 1)
(cd ~/bin/FilesDvorak/; find . -maxdepth 1
sort > b)
find /etc -iregex '.*xt.*'
find . -iname '*blah*' -mtime -2
find /usr/share -name '*farm*'
find . -name '*foo*'
find . -iname '*something*'
find -print0
grep -vEzZ '(\.git
\.gitignore/)'
find . -follow -uid 0 -print
find -L /path/to/dir/* -printf "%TY%Tm%Td%TH%TM%TS
%p\n"
find \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)
find . -name .snapshot -prune -o \( \! -name *~ -print0 \)
find -mindepth 1 -maxdepth 1
find *
find . -exec cmd1 \; -exec cmd2 \;
find . -exec bash -c 'cmd1; cmd2' filedumper {} \;
find . -exec myscript {} \;
find . -exec myscript {} +
find . -exec $0 {} +
find -exec command {} +
find /folder/path/* -mmin +120 -delete
find /tmp/test/* -daystart -mtime +0
find /tmp/test/* -daystart -mtime -1
find / -perm /u+rw,g+r,o+r
find / -perm /711
find / -size -50c
find / -size +700M
find / -size 50c
find / -group shadow
find / -user syslog
find / -perm /222
find / -perm /a+w
find / -perm /u+w,g+w,o+w
find / -name '<name_pattern>'
perl -pe 's/(.*\/).*$/$1/'
sort
uniq
find / -perm 644
find -mindepth $i -maxdepth $i "$@"
echo "$queue"
xargs -I'{}' find {} -mindepth 1 -maxdepth 1 $*
find -mindepth 2 -maxdepth 2
find . -maxdepth 1 ! -perm  -o=r
find  /   -print > masterfilelist.out
find .*
find -regex .*sql.*
find . -regex ".*\\.rb$"
find -name "$something"
find "$STORAGEFOLDER" -name .todo  -exec dirname {} \;
find "$STORAGEFOLDER" -name .todo -printf '%h\n'
find "$STORAGEFOLDER" -name .todo -printf '%h\n'
find ./ -name Desktop
find / -user root -name FindCommandExamples.txt
find /root -name FindCommandExamples.txt
find ~/Books -name Waldo
find  / -name "apt"
find /home/username/public_html/images -name "articles.jpg"
find images -name "articles.jpg"
find . -name "articles.jpg"
find ~/Library/ -iname "com.apple.syncedpreferences.plist"
find /usr -name date
find /usr -maxdepth 4 -name document -print
find / -name document -print
find / -xdev -name document -print
find -name file -print0
find -name file -prune
find . -name file1 -print
find . -name file_name
find / -user username -group groupname -name filename
find  / -iname findcommandexamples.txt
find / -name foo
find . -name foo -type d -prune -o -name foo
find / -name foo.bar -print
find ./dir1 ./dir2 -name foo.bar -print
find . -name foo.rb
find /usr/src -name fprintf.c
find . -name game
find /usr -name java
find . -name 'javac'
find / -name "my.txt"
find ~ -name myfile
find . -name "openssl"
sed '/Permission denied/d;'
find . -name "pattern" -print
find . -iname "photo.jpg"
find -name photo.jpg
find . -name photo\?.jpg
find . -name photoA.jpg
find -iname "query"
find -iname "query"
find -name "query"
find -name "query"
find . -name test
find . -name testfile.txt
find -name "text"
find / -iname top
find / -name top
find / -name vimrc
find / -name "имя_файла"
find . -name Root
xargs cp newRoot
find -mindepth 2 -maxdepth 3 -name file
find -mindepth 4 -name file
find -maxdepth 2 -name file1
find -name file1
find . -name modules
find . -name modules \! -exec sh -c 'find -name modules' \;
sudo find / -name "orm.properties"
find /eserver6 -name "orm.properties"
find /eserver6/share/system/config/cluster -name "orm.properties"
find . -name "orm.properties"
find / \( -newer ttt -or -user wnj \) -print
find -not -name "query_to_avoid"
find \! -name "query_to_avoid"
find /home -user bob
find /some/directory -user joebob -print
find -user michel
find /var/log/crashes -name app-\*\.log -mmin -5
find . -mindepth 1 -name 'onlyme*'
find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
find . -maxdepth 1 -name 'onlyme*'
find /home/apache -size 100c -print
find . -newer  backup.tar.gz
find / \( -newer ttt -or -user wnj	\) -print
find /file/path ! -newermt "Jul 01"
find ~ -user dave -print
find -user eric -print
find -user takuya
find / -newer ttt -user wnj -print
find /apps -group accts -print
find /dev -group audio
find /usr -group staff
find . -iregex ".*packet.*" ! -type d -size +1500c
find -maxdepth 1 -iname "*target*"
find . -name '*$VERSION*'
find . -name '*`$VERSION`*'
find /home -nouser -print
find . ! -name "*photo*"
find . -user my_user -perm -u+rwx
find /home/spenx/src -name "a1a2*txt"
xargs -n 1 dirname
xargs -I list mv list /home/spenx/dst/
find . -maxdepth 2 -name 'onlyme*'
find /usr/share/doc -name '[Rr][Ee][Aa][Dd][Mm][Ee]*'
find ~ -iname "screen*"
find ~ -iname "screen*"
more
find . -name 'test*'
find /usr -newermt "Feb 1"
find . -mtime +2
perl -pe 's{^}{\"};s{$}{\"}' > ~/output.file
IFS=$'\n';for f in `find .`; do file=$(echo $f
tr [:blank:] '_'); [ -e $f ] && [ ! -e $file ] && mv "$f" $file;done;unset IFS
find "$1" -perm -u+x -print0
xargs chmod g+x
find $1 -perm -u+x -exec chmod g+x {} \;
find "$1" -perm -u+r -print0
xargs chmod g+r
find $1 -perm -u+r -exec chmod g+r {} \;
find "$1" -perm -u+w -print0
xargs chmod g+w
find $1 -perm -u+w -exec chmod g+w {} \;
find $TARGET_DIR -regextype posix-extended -regex \".*/$now.*\" -fprint $FILE_LIST
find "$dir"
find $dir -mtime -3
find $something
cd ${CURR_DIR}
find .
find /abs/path/to/directory -maxdepth 1 -name '.*invalidTemplateName.*'
find /directory_path -mtime -1 -print
find /etc -size +5M -exec ls -sh {} +
find /etc -newer /etc/motd
find /home/exampleuser/ -name "*conf" -mtime 3
find /home/user/ -cmin 10 -print
find /home/user/ -cmin 10 -print
find /usr -mmin 5
find /usr -mtime +356 -daystart
find /usr/local -iname "*blast*"
find /usr/local/games -name "*xpilot*"
find /usr/share/data -regextype posix-extended -regex ".*/20140624.*" -fprint /home/user/txt-files/data-as-of-20140624.txt
find /usr/share/doc -iname readme\*
find /usr/share/doc -name README\*
find /var/log -daystart -mtime 0
find /var/tmp -uid 1000
find A \! -path "A/a/*" -a \! -path "A/a"
find A \! -path "A/a/*"
find 'my key phrase'
find 'my key phrase' > mylist.txt
find .. -exec cp -t ~/foo/bar -- {} +
find ./var/log
ssh someone@somehost "cd /export/home/someone && find . -name '*' -print
parallel -j1 'sleep 10;curl -u someone:password ftp://somehost/tmp/ -vT'
ssh someone@somehost "cd /export/home/someone && find . -name '*' -print
xargs -n1 curl -u someone:password ftp://somehost/tmp/ -vT"
ssh someone@somehost 'cd /export/home/someone && find . -name "*" -print
(while read file; do curl -u someone:password ftp://somehost/tmp/ -vT "$file"; sleep 10; done)'
find /home/baumerf/public_html/ -mmin -60 -not -name \*.log
find /home/baumerf/public_html/ -mmin -60 -not -name error_log
find /home/bozo/projects -mtime 1
find /home/feeds/data
grep ! error_log
find /home/foo/public_html/ -mmin -60
find -L /myfiles
find /myfiles -size 5
find /myfiles -atime +30
find /myfiles -mtime 2
~/bin/find /non-existent/directory -name '*.plist' -print
find /path -mtime +30m
find /path/to/dir -type d -exec chmod 0755 '{}' \; -o -type f -exec chmod 0644 '{}' \;
find /path/to/dir/* -printf "%T@
%p
%l" -exec stat -Lc "
%Y.0000000000" {} \;
find /path/to/dir/* -printf "%TY%Tm%Td%TH%TM%TS
%p
%l\n"
find /path/to/files/* -printf "%TY%Tm%Td%TH%TM%TS
%p
%l" -exec stat -Lc "
%y" {} \;
sed -r "s/(.*\
)([0-9]{4})\-([0-9]{2})\-([0-9]{2}) ([0-9]{2})\:([0-9]{2})\:([0-9]{2}\.[0-9]{9}).*/\1\2\3\4\5\6\7/g"
find /proc -exec ls '{}' \;
find /usr/tom
egrep '*.pl
*.pm'
find /var/log
sudo find /var/www/some/subset -print0
xargs -0 chown www-data:www-data
find Mainfolder > outputfile
find _CACHE_*
find /export/home/someone -exec curl -u someone:password -vT {} ftp://somehost/tmp/
find -print
find -print0
xargs -0
find .
find ./
find
xargs
find -print0
find
wc -l
find .
awk -F"/" '{ print $2 }'
find . -exec echo {} ";"
find . -exec echo {} ';'
find . -exec echo {} +
find . -exec echo {} \+
find . -exec echo {} \;
find . -print0
xargs -I{} -0 echo {}
find
xargs -i sh -c "echo {} {}"
find -print
xargs -d'\n'
full_backup_dir="`find . -depth -print0`"
find -exec <script> {}\;
find -execdir ipython nbconvert {} \;
find . -type f -exec chmod 775 {} \;
find
sort
find -print0
find -s
find . -regex-type posix-extended -regex ".*def/incoming.*
.*456/incoming.*" -prune -o -print
find -L
find -maxdepth 3
find -iname pattern
find . -size 10M
find . -size +10M
find -E . -iregex '.*/(EA
FS)_.*'
find . -iname "{EA,FS}_*"
find . -iregex '.*/\(EA\
FS\)_.*'
find . -iregex './\(EA\
FS\)_.*'
find . -iregex './\(RT\
ED\).*'
head
find -amin 30
find . -atime -1 -print
find -amin +25 -amin -35
find . -mmin 30
find . -newer /reference/file
find
xargs
find -not -name "query_to_avoid"
find \! -name "query_to_avoid"
find . -not -path '*/\.*'
find . -newer  backup.tar.gz
find . -uid 0 -print
find -group compta
find ./ -user tom
find . -user john
find . -name "*[1k]*"
find -name "*pattern*"
find . -iname '*blah*' \( -type d -o -type f \) -mtime -2
find . -name "R*VER" -mtime +1
find . -name 'test*' -prune
find . -regex ".*/(test)[0-9][0-9]\.txt"
find . -name 'some_text_2014.08.19*'
find . -regextype sed -regex "./test[0-9]\{2\}.txt"
find . -iwholename "*ACK*1"
find . -regex filename-regex.\*\.html
find . -path './sr*sc'
find . -path './src/emacs' -prune -o -print
find . -name ”*.old” -print
find . -inum 211028 -exec mv {} newname.dir \;
find -perm -644
find .
grep "FooBar"
(mapfile -t; cp "${MAPFILE[@]}" ~/foobar)
find .
grep "FooBar"
tr \\n \\0
xargs -0 -I{} cp "{}" ~/foo/bar
find .
grep FooBar
xargs -I{} cp {} ~/foo/bar
find .
grep "FooBar"
xargs -I{} cp "{}" ~/foo/bar
find .
grep "FooBar"
yargs -l 203 cp --after ~/foo/bar
while read line ; do cp "$line" ~/bar ; done < <(find .
grep foo)
find . -iname "*foobar*" -exec cp "{}" ~/foo/bar \;
find dir -depth
find -print0
find . -print0
find -print0
tr "\0" ":"
find -print0
for i in `find .  -not \( -name "*\.jpg" \) -path './bookshop/mediaimg' -prune -o -path '*/CVS*' -prune -o  -path './files' -prune  -o -path './images/cms' -prune -o -path './internal' -prune -o -path './limesurvey171plus_build5638' -prune  -o -path './gallery2' -prune -o  -print  `; do cvs status  "$i"
grep Status ; done &>~/output.txt
find .cache/chromium/Default/Cache/ -mindepth 1 -size +100M -delete
find . -maxdepth 1 -print0
xargs -0 stat -c '%i %n'
find "$FOLDER" -mindepth 1
sort
find . -mindepth 2
xargs chmod 700
find /mnt/naspath -mtime 0 -print0
du --files0-from=- -hc
tail -n1 >> /tmp/size.log
find /mnt/naspath -mtime 0  -name .snapshot -prune -o \( \! -name *~ -print0 \)
du --files0-from=- -hc
tail -n1 >> /tmp/size.log
find test
find whatever ...
xargs -d "\n" cp -t /var/tmp
find /tmp/test/* -daystart -mtime -0
find /tmp/test/* -mtime -1
find /usr/share/doc -iname readme\*
find . -name *.bar -maxdepth 2 -print
find . -name '*.[ch]' -exec grep $i {}
less
find . -name '*.[ch]'
xargs grep $1
less
find /home/username/ -name "*.err"
du -a $directory
awk '{print $2}'
grep '\.in$'
find -name "*.js" -not -path "./directory/*"
find . -not \( -path ./directory -prune \) -name \*.js
find . -path ./directory -prune -o -name '*.js' -print
find /var/log -group adm -name "*.log"
find /var/log/crashes -name app-\*\.log -mmin -5 -print
head -n 1
find /storage -name "*.mp4" -o -name "*.flv" -type f
sort
head -n500
find /lib/modules -name '*.o'
find . -name "*.pdf" -print
grep -v "^\./pdfs/"
find $DIR/tmp/daily/ -name '*.tar.gz'
sort -n
tail -3
find /home -name "*.txt" -size -100k
find /home -name "*.txt" -size 100k
find /home -name "*.txt" -size +100k
find . -name '*.what_to_find'
grep -v exludeddir1
grep -v excludeddir2
find "/cygdrive/e/MyDocs/Downloads/work/OATS Domain related/" -iname "log4j*.xml"
xargs -I % grep -ilr "CONSOLE" "%"
xargs -I % grep -H "ASYNC" %
find . -name '*my key phrase*'
find -name '*my key phrase*' > mylist.txt
{ find . -name '*my key phrase*'; grep -rl 'my key phrase' *; }
sed "s/^\.\///"
sort -u
{ find . -name '*my key phrase*'; grep -rl 'my key phrase' .; }
sort -u
find / -perm 644
find -perm 664
find ./ -perm 755
find /apps/audit -perm -7 -print
xargs chmod o‑w
find . -perm 777 -print
find -mindepth 10 -iname $TARGET
find /path -perm /011
find -inum 16187430 -exec mv {} new-test-file-name \
find "$DIR_TEMPORAL" "$DIR_DESCARGA" -maxdepth 2 -name "$nombre" -printf '%f.torrent\n'
find "$directory" -perm "$permissions"
find /tmp/ -depth -name "* *" -execdir rename " " "_" "{}" ";"
find /tmp/ -depth -name "* *" -execdir rename 's/ /_/g' "{}" \;
find $1 -name '* *'
find . -name '* *'
find . -depth -name "* *" -execdir rename "s/ /_/g" "{}" \;
find . -depth -name '* *'
while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"
tr ' ' _)" ; done
find ~/Library -name '* *'
find . -uid 120 -print
find /u/bill -amin +2 -amin -6
find /path/to/look/in/ -type d -name '.texturedata' -prune
find . -not -name '*.png' -o -type f -print
xargs grep -icl "foo="
find /usr/local/fonts -user warwick
find ./ -name "foo.mp4" -exec echo {} \;
find . -name foo.mp4 -exec dirname {} \;
find . -name foo.mp4 -printf '%h\n'
find . -name foo.mp4
sed 's
/[^/]*$
'
find ./ -name "foo.mp4" -printf "%h\n"
find . -samefile /path/to/file
find /home -xdev -samefile file1
find /tmp -type f -name ".*"
find . -type d -name ".*"
find /tmp -type f -name ".*"
find . -type f -name ".*"
find $FOLDER -name ".*"
find /tmp -type f -name ".*"
find . -iname ".*" -exec bash -c "fgrep {} /tmp/list_files >/dev/null
rm -i {}" \;
find . -type f -name ".*"
find /tmp -type f -name ".*"
find / -name httpd.conf
find /usr -type f
samefile -g 10000 >usr.dups
find $HOME -type f
samefile -r
find ./polkadots -type f -name "image.pdf"
find ./polkadots -name 'image.pdf'
find ./polkadots -name "image.pdf" -print0
find -name 'index.*'
sort file
uniq
cut -f1 -d' '
uniq -c
rev
find foo -type f ! -name '*Music*' -exec cp {} bar \;
find -regex '.*/modules\(/.*\
$\)' \! -regex '.*/modules/.*/modules\(/.*\
$\)' -type d -links 2
find . -maxdepth 1 -type d
grep  $USER file
nl
find . -lname /path/to/foo.txt
find -L -samefile path/to/file
find . -name 'm?' -type d -exec ./fixmbox {} +
find $HOME -name 'mysong.ogg'
find -user jzb
find / -type c
find . -type f
perl -ne 'print $1 if m/\.([^.\/]+)$/'
sort -u;
find . -type f -name ".*
find / -user root -name FindCommandExamples.txt
find / -user root -name tecmint.txt
find . -name 'orm*'
find . -name "orm.*"
find /some/dir -name "*.pdf" ! -name "*_signed.pdf" -print0
find /path -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep --with-filename --label="{}" --color "your pattern"' \;
find . -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep --with-filename --label="{}" --color "$1"' -- "$1" \;
find /dir/containing/unsigned -name '*.pdf' -print0
find . -type f -name "*.php"
find . \( -name "*.php" \) -exec grep -Hn "<\?php /\*\*/eval(base64_decode(.*));.*\?>" {} \; -exec sed -i '/<\?php \/\*\*\/eval(base64_decode(.*));.*\?>/d' {} \;
find ./ -name "*.php" -type f
xargs sed -i 's#<?php /\*\*/ eval(base64_decode("aWY.*?>##g'  2>&1
find . -type f -name "*.php"
find -user takuya -name '*.php' -daystart -mtime -1
find . -type f -name "*.php"
find ./ -name "*.php" -type f
xargs sed -i '/./,$!d' 2>&1
find . -type f -name tecmint.php
find . -type f -name tecmint.php
find "$topdir" -name '*.py' -printf '%h\0'
xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\n'
sort -u
find . -name '*.py'
tee output.txt
xargs grep 'something'
find /home -type f -perm /u=r
find / -perm /u=r
find ~ -name readme.txt
find . -type f -name "*.css"
find /the/path -type f -name '*.abc' -execdir rename 's/\.\/(.+)\.abc$/version1_$1.abc/' {} \;
find /var/www -type f -name "*.html"
find / -type f -name *.mp3 -size +10M -exec rm {} \;
find $dir -maxdepth 1 -type f
find .git -type f -print0
xargs -0 sed -i 's/subdomainB\.example\.com/subdomainA.example.com/g'
find /usr/bin -type f -atime +20
find /usr/bin -type f -mtime -10
find <path> -type f -exec sh -c 'for f; do echo process $f;  done' sh {} +
find ~ -type f -mmin -90
find * /home/www -type f
find "$dir" -mindepth 1 -type f
find $dir -maxdepth 1 -type f
find aaa/ -maxdepth 1 -type f
find /path/to/base/dir -type f
find ./ -type f -exec chmod 644 {} \;
find . -type f
find -maxdepth 1 -type f
xargs grep -F 'example'
find -type f -printf '.'
wc -c
find -type f
wc -l
find . -type f -exec echo mv -t . {} +
find -type f -print0
xargs -r0 grep -F 'example'
find . \( -type d -regex '^.*/\.\(git\
svn\)$' -prune -false \) -o -type f -print0
find . -path ./source/script -prune -o -type f -print;
find ./ -daystart -mtime -3 -type f  ! -mtime -1 -exec ls -ld {} \;
find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%TY %p\n'
find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tc %p\n'
find ./ -daystart -mtime -3 -type f  ! -mtime -1  -printf '%Tm %p\n'
find -type f ! -perm -444
find . -type f ! -perm -444
find . -type f \( -exec grep -q '[[:space:]]' {} \; -o -print \)
find . –type f -mmin -10
find . -type f -name 'btree*.c'
find . -type f -name YourProgramName -execdir ./YourProgramName YourParameterFile \;
find . -type f -name '*.DS_Store' -ls -delete
find .  -name .git -prune -o -type f -print
find /  -type f -group users
find ~ -type f -mtime 0
find ~/mail -type f
xargs grep "Linux"
find /srv/www /var/html -name "*.?htm*" -type f
find . -name Chapter1 -type f -print
find ~/Books -type f -name Waldo
find ~/Books -type f -name Waldo
find . \( ! -regex '.*/\..*' \) -type f -name "whatever"
find . -type f -name "postgis-2.0.0"
find ~/ -type f -name "postgis-2.0.0"
find /tmefndr/oravl01 -type f -newer /tmp/$$
find / -name myfile -type f -print
find / -type f -size +20000k
find / -type f -size +20000k -exec ls -lh {} \;
awk '{ print $8 ": " $5 }'
find / -mount -depth \( -type f -o -type l \) -print
find . -type f
find . -type f -print
xargs grep -i 'bin/ksh'
find / -type f -perm 0777
find ~/container  -mindepth 3 -type f  -execdir mv "{}" $(dirname "{}")/.. \;
find ~/container  -mindepth 3 -type f
while read file; do mv "$file" "$(dirname "$file")/.."; done
find ~/container  -mindepth 3 -type f
xargs -i bash -c 'mv "{}" $(dirname "{}")/..'
find ~/container -mindepth 3 -type f -execdir mv "{}" ./.. \;
find ~/container  -mindepth 3 -type f -exec mv {} . \;
find ~/container  -mindepth 3 -type f -exec mv {} .. \;
find . -type f
find  /root -type f -iname "*linux*"
find . -type f -mtime 0
find . -type f -mtime +0
find . -type f -mtime +1
find . -type f -mtime +2
find . -type f -mtime +3
find . -type f -mtime +4
find . -type f -mtime +5
find . -type f -mtime +7
find . -type f –iname stat*
find . -type f -mtime $FTIME
find /path-to-directory -type f -mtime +60 -printf "%T@ %p\n"
sort
find /usr/bin -type f -size -50c
find "$somedir" -type f -exec echo Found unexpected file {} \;
find ${DIR} -type f -regex ".*\.${TYPES_RE}"
find $DIR -type f -iname "*.$TYPE"
find $DIR/tmp/daily/ -type f -printf "%p\n"
sort -rn
head -n 2
xargs -I{} cp {} $DIR/tmp/weekly/
find "$DIRECTORY_TO_PROCESS" -type f -iregex ".*\.$FILES_TO_PROCES" ! -name "$find_excludes" -print0
FILES=$(find $FILES_PATH -type f -name "*")
find ${FOLDER} -type f ! -name \".*\" -mtime -${RETENTION}
egrep -vf ${SKIP_FILE}
find $SOURCE -type f -mtime +$KEEP
sed ‘s#.*/##'
find "$d/" -type f -print0
xargs -0 chmod 777
find $dir -type f
find $dir -type f -size +"$size"M -printf '%s %p\n'
sort -rn
find $dir -type f -name $1 -exec sed $num'q;d' {} \;
find "${S}" -type f
find ${path} -P -type f
find /directory_path -type f -mtime -1 -print
find /home/john -name "landof*" -type f -print
find /home/john/scripts -type f -not -name "*.ksh" -print
find /usr/bin -type f -size -50c
find ./Desktop -type f
sed -i '' -e 's/subdomainA/subdomainB/g' $(find /home/www/ -type f)
cd /home/www && find . -type f -print0
xargs -0 perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g'
find /home/www -type f -print0
xargs -0 sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g'
find /home/www/ -type f
xargs perl -pi -e 's/subdomainA\.example\.com/subdomainB.example.com/g'
find /home/www/ -type f -exec perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g' {} +
find /home/www/ -type f -exec sed -i 's/subdomainA\.example\.com/subdomainB.example.com/g' {} +
find . /home/admin/public_html/ -type f -exec chmod 644 {} \;
find /home/user/demo -type f -print
find /root -type f -iname "*linux*"
find /somepath -type f -iregex ".*\.(pdf\
tif\
tiff\
png\
jpg\
jpeg\
bmp\
pcx\
dcx)" ! -name "*_ocr.pdf" -print0
find dir/ -type f -exec mv {} $(echo {}.fix
iconv -f UTF8 -t ASCII//TRANSLIT ) \;
find . -depth -type f -print
find . -type f
find . \( ! -regex '.*/\..*' \) -type f -print0
xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find . -maxdepth 1 -type f -print0
xargs -0 sed -i 's/toreplace/replaced/g'
find . -maxdepth 1 -type f -perm -uga=x
find . -type f -exec sed -i "s/1\.2\.3\.4/5.6.7.8/g" {} \
find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
find . \( -not -path './dir1/*' -and -not -path './dir2/*' -or -path './dir1/subdir1/*' \) -type f
find . -not -path '*/\.*' -type f -name '*some text*'
find . -type f -name \*
grep "tgt/etc/*"
find . -type f -atime $FTIME
find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
find . \( -path './dir1/*' -and -not -path './dir1/subdir1*' -or -path './dir2' \) -prune -or -type f -print
find . -type f -exec sed -i ‘s/.*abc.*/#&/’ {} \;
find test -type f
find ~/$folder -name "*@*" -type f
find ~/$folder -name "*@*" -type f -print0
find . -type f -iname '*'"$*"'*' -ls
find . -type f -not -name "*.html"
find . -type f
grep -i "\.jpg$"
sort
tee file_list.txt
find ./ -type f \( -name '*.r*' -o -name '*.c*' \) -print
find . -type f -name "*.txt" ! -name README.txt -print
find / -iname "*.what_to_find" -type f -exec mv {} /new_directory \;
find /data -type f -perm 400 -print
find . -type f -perm 755 -exec chmod 644 {} \;
find . -type f -iname '*'"${1:-}"'*' -exec ${2:-file} {} \;
find "$fileloc" -type f -prune -name "$filename" -print
find /home/user/demo -type f -perm 777 -print
find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
find -name "* *" -type f
rename 's/ /_/g'
find . -perm -g=r -type f -exec ls -l {} \;
find . -not -path '*/\.*' -type f \( ! -iname ".*" \)
find . -name "sample*"
parallel --dry-run program {}-out {}
find . -name "sample*"
xargs -i echo program {}-out {}
find . -name "sample*_1.txt"
find . -name "sample*_1.txt"
sed -n 's/_1\..*$//;h;s/$/_out/p;g;s/$/_1.txt/p;g;s/$/_2.txt/p'
xargs -L 3 echo program
find . -name "sample*_1.txt"
perl -pe 's/_1\.txt$//'
parallel program {}-out {}_1.txt {}_2.txt
find . -type s
find . -name status.c -exec stat --format "%A %s %x %n" {} \;
cat "$FILE"
grep "^${KEY}${DELIMITER}"
cut -f2- -d"$DELIMITER"
find -maxdepth 1 -type d
while read dir; do echo $dir; echo cmd2; done
find -maxdepth 1 -type d ! -name ".*"
find /usr/bin -name '*vim*' -type l
find /usr/ -lname *javaplugin*
find /usr/bin -name '*vim*' -type l
find -type l
find . -type l -exec sh -c 'echo $(readlink -f "{}") "<-- {}"' \;
grep -v "^$(readlink -f ${PWD})"
find . -type l -ls
find "/proc/$pid/fd" -ignore_readdir_race -lname "$save_path/sess_\*" -exec touch -c {}
find /some/directory -type l -print
find /some/directory -type l -print
find . -type f -links 1 -print
find –L –xtype l
find /myfiles -type l
find /myfiles -type l
find /path/to/dir -type l -exec sh -c 'cp --remove-destination "$(readlink "{}")" "{}"' \;
find . -type l
find ./ -type l
find /var/log -name "syslog" -type d
find . -type l -exec readlink -f '{}' \;
grep -v "^`readlink -f ${PWD}`"
find . -name test.txt
sudo find . -name test1.h
sudo find . -name test2.h
find ~/ -name '*.txt'
find ~/Programming -path '*/src/*.c'
find . -name "*.pl"
find . -maxdepth 1 -name '*.txt' -mtime +2
find . -name '*.c'
xargs grep 'stdlib.h'
find . -name ‘*.c’
xargs egrep stdlib.h
find ./music -name "*.mp3" -print0
xargs -0 ls
find ./music -name "*.mp3" -print0
xargs -0 ls
find . -perm 0644
head
find / -perm 2644
find / -perm 2644
find . -perm /g+s
find . -perm /u=s
find / -perm 0551
find / -perm 0551
find / -perm 1551
find / -perm 1551
find / -user root -name FindCommandExamples.txt
find / -atime 50
find / -mtime 50
find / -mtime +50 -mtime -100
head
find / -size +50M -size -100M
find / \( -name '*.txt' -o -name '*.doc' -o -size +5M \)
find / -atime 50
find / -amin -60
find / -cmin -60
find / -size +50M -size -100M
find / -mtime 50
find / -mmin -60
find / -mtime +50 –mtime -100
find * -type f -print -o -type d -prune
find . -perm 0644
head
find . -type f -perm 0777 -print
find . -type f ! -perm 777
head
find . -maxdepth 1 -iname "*linkin park*"
find / -name vimrc
find / -amin -60
find / -cmin -60
find / -mmin -60
find /tmp/test/* -mtime -0
find -maxdepth 1 -not -iname "MyCProgram.c"
find . -name "*.java"
find . -mtime 1
find . -mtime +1
find . -mtime -1
find /etc -size +100k
find /home -name tecmint.txt
find /tmp
head
find / -atime 50
find / -amin -60
find / -amin -60
find / -cmin -60
find / -cmin -60
head
find / -size +50M -size -100M
find / -size +50M -size -100M
find / -mtime 50
find / -mmin -60
find / -mmin -60
find / -mtime +50 –mtime -100
find / -atime 50
find / -mtime 50
find / -mtime +50 -mtime -100
find  / -iname findcommandexamples.txt
find /root -name FindCommandExamples.txt
find . -name tecmint.txt
find /home -iname tecmint.txt
find . -name tecmint.txt
find . -type f -perm 0777 -print
find . -type f -perm 0777 -print
find . -type f -perm 0777 -print
find / -type f ! -perm 777
find / -type f ! -perm 777
find . -type f ! -perm 777
head
find "/path/to/files" -mmin +120
find ./ -newermt 2014-08-25 ! -newermt 2014-08-26 -print
find / \! \( -newer ttt -user wnj \) -print
find /usr/local -mtime -1
find /var/adm -mtime +3 -print
find ~ ! -user ${USER}
find /etc -maxdepth 1 -name "*.conf"
tail
find "$DIR" -type f -mtime +15 -exec rm {} \;
find $DIR -type f -mtime +450 -exec rm {} \;
find "$DIR" -type f \! -newer "$a" \! -samefile "$a" -delete
find "$DIR" -type f \! -newer "$a" \! -samefile "$a" -exec rm {} +
find /your/dir -type f -size +5M -exec du -h '{}' +
sort -hr
find . -type f -mtime +31 -print0
xargs -0 -r rm -f
find dir1 -mindepth N -type f
find /home/backups -type f \( -name \*.tgz -o -name \*.gz \) -print0
xargs -0 ls -t
tail -1
xargs rm
find temps/ -name "thumb.png"
for d in /home/*/; do find "$d" -type d -name bin
grep -q .
echo "$d"; done
comm -3 <(printf '%s\n' */
sed 's
/.*
'
sort) <(find */ -type d -name bin
cut -d/ -f1
uniq)
find . -maxdepth 1 -name '*Music*' -prune -o -print0
xargs -0 -i cp {} dest/
find / -size  +5000000c 2> /dev/null
find . -name '*.xml'
find -name \*.xml -print0
xargs -0 -n 1 -P 3 bzip2
find .
grep ".xml$"
parallel bzip2
for i in `find .
grep ".xml$"`; do bzip2 $i&; done
for i in `find .
grep ".xml$"`; do bzip2 $i; done
find ~ -name 'xx*' -and -not -name 'xxx'
find -name \*.jsp
sed 's/^/http:\/\/127.0.0.1/server/g'
xargs -n 1 wget
find . -name "*.txt" -print
find . -name "*.txt" -print
less
find . -inum 968746 -exec rm -i {} \;
find . -type f -exec sed '1s/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
find . -name "*.pl"
xargs tar -zcf pl.tar.gz
find . -name \*.log -print0
xargs -I{} -0 cp -v {} /tmp/log-files
find . -depth -name '*.zip' -exec rm {} \;
find ~/ -name 'core*' -exec rm {} \
rm `du *
awk '$1 == "0" {print $2}'`
find /home -xdev -samefile file1 -exec rm {} +
find /home -xdev -samefile file1 -print0
xargs -0 rm
find /home -xdev -samefile file1
xargs rm
find ./ -inum 1316256 -delete
find $(/usr/ucb/ps auwwx
grep weblogic
tr ' ' '\n'
grep security.policy
grep domain
awk -F'=' '{print $2}'
sed -e 's/weblogic.policy//' -e 's/security\///' -e 's/dep\///'
awk -F'/' '{print "/"$2"/"$3"/"$4"/somefile.cf"}'
sort
uniq) 2> /dev/null -exec ls {} \; -exec cat {} \;
kill $(ps aux
grep '[p]ython csp_build.py'
awk '{print $2}')
find
head
find . -type f -ls
find . -name "*.pdf" -print
grep -v "^\./pdfs/"
find . -perm g=r -type f -exec ls -l {} \;
find . -name "*.pdf" -print
find . -print
find .
find . -print
find / -name "*.core" -print -exec rm {} \;
find / -name "*.core"
xargs rm
find . -type f -name "*.mp3" -exec rm -f {} \;
find . -type f -name "*.txt" -exec rm -f {} \;
find . -type f -name "*.mp3" -exec rm -f {} \;
find . -type f -name "*.txt" -exec rm -f {} \;
find . -type f -name "*.mp3" -exec rm -f {} \;
find . -type f -name "*.mp3" -exec rm -f {} \;
find . -type f -name "*.txt" -exec rm -f {} \;
find /home -name .rhosts -print0
xargs -0 rm
find . -inum 782263 -exec rm -i {} \;
find /usr/* -size 0c -exec rm {} \;
find . -type f -exec perl -pi -e 's
xxx
yyy
g' {} ;
find . -size 2000k
find . -size -500k
find / -size +900M
find /home/tecmint/Downloads/ -type f -printf "%s %p\n"
sort -rn
head -n 5
find . -name '*.csv.gz' -exec gzip -d {} \;
find . -name '*.csv.gz' -print0
xargs -0 -n1 gzip -d
find . -name *disc*
find . -atime +7 -size +20480 -print
find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
echo find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
find . -atime +7 -o -size +20480 -print
find . -type f -name ".*" -newer .cshrc -print
du -hs /path/to/directory
find . -depth -name "blabla*" -type f
xargs rm -f
find / -type l -print0
xargs -0 file
grep broken
find / -type l -print0
xargs -0 file
grep broken
find ./ -follow -lname "*"
find -L -type l
find . -type l -xtype l
find -type l
while read f; do if [ ! -e "$f" ]; then ls -l "$f"; fi; done
find . -type f -exec ls -s {} \;
sort -n -r
head
find . -type f -exec ls -s {} \; sort -n
head -5
find . -exec echo ' List of files & Direcoty'   {} \;
find . -type f -and -iname "*.deb"
find . -type f -and -iname "*.deb"
xargs -n 1 dpkg -I
find . -iname '*blah*' \( -type d -o -type f \) -mtime -2
find /home/vmail/ -type d -path "*/*/Maildir/.LearnAsHam/cur" -exec sh -c '(cd {}
mv ./* ../../.Inbox/cur)' ';'
find /home/vmail/ -type d -path "*/*/Maildir/.LearnAsHam/new" -exec sh -c '(cd {}
mv ./* ../../.Inbox/new)' ';'
find /home/vmail/ -type d -path "*/*/Maildir/.LearnAsSpam/cur" -exec sh -c '(cd {}
mv ./* ../../.Junk/cur)' ';'
find /home/vmail/ -type d -path "*/*/Maildir/.LearnAsSpam/new" -exec sh -c '(cd {}
mv ./* ../../.Junk/new)' ';'
find /proc -type d
egrep -v '/proc/[0-9]*($
/)'
less
find /path -type d -printf "%f\n"
awk 'length==33'
find . -maxdepth 1 -type d -print
xargs  -I "^" echo Directory: "^"
find -type d ! -perm -111
find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -print0
xargs -0 mv -t /path/to/target-dir
find . -type d -mtime 0 -exec mv {} /path/to/target-dir \;
find . -type d -name "?????????????????????????????????"
find . -mtime -7 -type d
find . -mtime -7 -type d
find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
find . -type d -name build
find /usr -name doc -type d
find /usr \( -name doc -and -type d \)
find / -user news -type d -perm 775 -print
find /TBD -mtime +1 -type d
find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime -30
find $workspace_ts -mindepth 1 -maxdepth 1 -type d -mtime +30 -print
find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -execdir echo "It seems that {} wasn't modified during last 30 days" ';'
find /home/user/workspace -mindepth 1 -maxdepth 1 -type d -mtime +30 -printf "\t- It seems that %p wasn't modified during last 30 day\n"
find . -type d -perm 755 -exec chmod 700 {} \;
find $dir -maxdepth 1 -type d -user $username -perm -100
find /home -type d -perm 777 -print -exec chmod 755 {} \;
find /some/dir/ -maxdepth 0 -empty
find your/dir -prune -empty
find your/dir -prune -empty -type d
du -a
du --max-depth=0 ./directory
find . -empty
find test -empty
find test -empty
find test -empty
find /dir -type f -size 0 -print
find wordpress -maxdepth 1 -name '*js'
find wordpress -name '*js'
find 0001 -type d
sed 's/^0001/0002/g'
xargs mkdir
find /home -user joe
find /usr -name *stat
find /var/spool -mtime +60
find /var/spool -mtime +60
find /home -user joe
find -type f -iname '*.un~'
find -type f -iname '*.un~'
find . -perm -100 -print
find . -type f -exec test -x {} \; -print
find / -name Chapter1 -type f -print
find . -type f -name filename.txt -exec vi {} +
find /home -name foo.bar -type f -exec rm -f "{}" ';'
find /etc -name hosts
find /usr/local -name "*blast*"
find /usr/local -iname "*blast*"
du -s <file>
du -b FILE
find -maxdepth 2 -name file1
find . -atime -1 -print
find /tmp/ -depth -name "* *" -execdir rename 's/ /_/g' "{}" \;
find . -mtime 1
find . -mtime -7
find . -mtime -7
find . -newer CompareFile -print
find . -user xuser1 -exec chown -R user2 {} \;
find /usr/src -name CVS -prune -o -mindepth 7 -print
find /usr/src -name CVS -prune -o -depth +6 -print
find . -user daniel
find . -gid 1003
find . -name RAID -prune -o -print
find . -inum 968746 -exec ls -l {} \;
find . -inum 968746 -print
find /path/to/search -user owner
find ~ -size +20M
find -type type_descriptor
find . -mtime -1 -type f
find . -iname '*blah*' -mtime -2
find . -type f -execdir /usr/bin/grep -iH '#!/bin/ksh' {} \;
tee /tmp/allfiles
find . -type f -print
xargs /usr/bin/grep -il 'bin/ksh'
tee /tmp/allfiles
find / -newerct '1 minute ago' -print
find -name '*macs'
find .  -path '*/*config'
find .  -path '*f'
find "${DIR_TO_CLEAN?}" -type f -mtime +${DAYS_TO_SAVE?} -print0
find /var/tmp/stuff -mtime +90 -print
find . -name not\*
tail -1
xargs rm
find / -perm /g+w,o+w
find / -perm /g=w,o=w
find / -perm -u+rw,g+r,o+r
find dir -name '?????????????????????????????????'
find /home/user/ -cmin 10 -print
find /travelphotos -type f -size +200k -not -iname "*2015*"
find /var/log/ -mmin +60
find /var/log/ -mmin -60 -mmin +10
find /var/log/ -mtime +7 -mtime -8
find . -size 2000k -print
find . -size -500k -print
find . -newer /bin/sh
find . -name f* -print
find . -not \( -name .svn -prune -o -name .git -prune -o -name CVS -prune \) -type f -print0
xargs -0 file -n
grep -v binary
cut -d ":" -f1
find -type f ! -perm -444
find . \( -size +700k -and -size -1000k \)
find . -name some_pattern -print0
xargs -0 -i mv {} target_location
find . -links 1
find . -name "pattern"
xargs git diff --
find ./ -name "*sub*"
find . -amin -60
find . -size +5000k -type f
find . -perm 766
find . -mmin -60
find . -regextype posix-egrep -regex '.\*c([3-6][0-9]
70).\*'
find . -regextype posix-egrep -regex "./c(([4-6][0-9])
70)_data.txt"
find -name 'file*' -size 0 -delete
find . -name 'file*' -size 0 -print0
xargs -0 rm
find -regex "^.*~$\
^.*#$"
find ./
grep "sub"
find .  -perm 775
find . -size 24000c
find . -size +24000c
find . -size -24000c
find . -cmin -60
find . -name file* -maxdepth 1 -exec rm {} \;
find esofthub esoft -name "*test*" -type f -ls
find /var/www/ -type f -name "*" -size +100M -exec du -h '{}' \;
grep -v /download/
find . -size +50k
find / -name .ssh* -print
tee -a ssh-stuff
find / -perm 644
find $1 -name "$2" -exec grep -Hn "$3" {} \;
find $1 -name "$2"
grep -v '/proc'
xargs grep -Hn "$3" {} \;
find $1 -path /proc -prune -o -name "$2" -print -exec grep -Hn "$3" {} \;
find .
xargs grep regexp
find . -path "./sr*sc"
find . -exec grep -l -e 'myregex' {} \; >> outfile.txt
find . -newermt "5 days"
find . -mmin +5 -mmin -10
find . -mtime -7 -type f
find . -mmin -5
find . -newer poop
find . -mtime 0
find . -name AssemblyInfo.cs
xargs git diff --name-status --
find . -name "AssemblyInfo.cs" -print0
xargs -0 git diff --
find . -name AssemblyInfo.cs
xargs git diff --
find ./ -name "blabla" -exec wc -l {} ;
find . -iname "needle"
find /etc -name ppp.conf
find . -name xxx -exec command {} +
find /tmp -depth -name core -type f -delete
find /tmp -name core -type f -print0
xargs -0 /bin/rm -f
find /path/to/folder -name fileName.txt -not -path "*/ignored_directory/*"
find /tmp -name core -type f -print0
xargs -0 /bin/rm -f
find /tmp -name core -type f -print
xargs /bin/rm -f
find / -user root -name tecmint.txt
find . -newer tmpfile
find ~/src -newer main.css
find ./ -newer start.txt -and ! -newer end.txt
find . -not -wholename '*/vendor/*
find Folder1 \( ! -name 'Image*-70x70*' -a ! -name 'Image*-100x100*' \)
xargs -i% cp -p % Folder2
find Folder1 -type f -regextype posix-extended \( ! -regex '.+\-[0-9]{2,4}x[0-9]{2,4}\.jpg' \) -print0
xargs -0 cp -p --target-directory=Folder2
find / -atime -1 -amin +60
find / -type f -size +50M -size -100M
find / -ctime -50
find / -mmin +90
find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
find / -type f -size +20M -exec ls -lh {} \;
awk '{ print $NF ": " $5 }'
find / -type f -size +20000k -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
sort -nrk 2,2
find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
sort -nk 2,2
find / -name "[Xx]*"
find / -nogroup
find / -nouser
find / -nogroup -print
find / -nouser -print
find / -group shadow
find . -name "pattern" -print
find . -perm g=r -type f -exec ls -l {} \;
find . -name "*.ext"
find . -size -40 -xdev -print
find . -name "file*"
find . -iname "file*"
find . -maxdepth 1 -size 0c -exec rm {} \;
find . -size 0 -exec rm {} \;
find -size 100k
find -empty -type -f
find -nouser
find plsql -type f  -perm -220 -exec ls -l {} \; 2>/dev/null
find plsql -type f  -perm -ug=rw -exec ls -l {} \; 2>/dev/null
find plsql -type f  -perm -220 -exec ls -l {} \; 2>/dev/null
find plsql -type f  -perm -ug=rw -exec ls -l {} \; 2>/dev/null
find . -perm +220  -exec ls -l {} \; 2> /dev/null
find plsql -type f  -perm /220 -exec ls -l {} \; 2>/dev/null
find plsql -type f  -perm /ug=rw -exec ls -l {} \; 2>/dev/null
find . -perm +220  -exec ls -l {} \; 2> /dev/null
find plsql -type f  -perm /220 -exec ls -l {} \; 2>/dev/null
find plsql -type f  -perm /ug=rw -exec ls -l {} \; 2>/dev/null
find / -nouser -o  -nogroup
find / -type f ! -perm 644
find . -maxdepth 1 -name \*.gz -print0
xargs -0 zcat
awk -F, '$1 ~ /F$/'
find / -mtime 1
find /etc/ -mtime -30
xargs -0 cp /a/path
find -type f -perm /110
find / -atime -1
find . -type f -mtime 7
xargs tar -cvf `date '+%d%m%Y'_archive.tar`
find / -mmin -1
find . -type f -mtime -7
xargs tar -cvf `date '+%d%m%Y'_archive.tar`
find . -type f -mtime +7
xargs tar -cvf `date '+%d%m%Y'_archive.tar`
find . -type f -mtime +7 -mtime -14
xargs tar -cvf `date '+%d%m%Y'_archive.tar`
find . -type f -mtime +7 -mtime -14
xargs tar -cvf `date ‘+%d%m%Y’_archive.tar`
find /travelphotos -type f -size +200k -not -iname "*2015*"
find /etc/apache-perl -newer /etc/apache-perl/httpd.conf
find /some/path -type f ! -perm -111 -ls
find /some/path -type f ! -perm -100 -ls
find /tmp -size +10k -size -20k
find /usr -newer /usr/FirstFile -print
find /usr ! -newer /FirstFile -print
find [directory] -name "pattern_to_exclude" -prune -o -name "another_pattern_to_exclude" -prune -o -name "pattern_to_INCLUDE" -print0
xargs -0 -I FILENAME grep -IR "pattern" FILENAME
find . -type f -newermt "$date_time"
find . -type f -not -newermt "$date_time"
find . -type f -exec grep -iH '/bin/ksh' {} \;
find . -type f -print
xargs    grep -il 'bin/ksh'
find . -name "$1" > /tmp/safe_del.lst
find -x . -type f -print0
find -iname "MyCProgram.c"
find ${userdir}/${i}/incoming -mtime +2 -type f -ls
find ${userdir}/${i}/incoming -mtime +2 -type f -exec rm {} \;
find . -cmin -60
find ./ -mmin +1
find ./ -daystart -mtime -10 -and -mtime +1
find . -iname 'MyFile*'
find ./ -type f -name "$2" -exec sed -i "s/$3/$4/g" {} \;
find .
xargs grep search string
sed 's/search string/new string/g'
find .  -path '*/*config'
find .  -path '*f'
find / -type f -perm -002
find / -type f -perm -002 -printf '%p has world write permissions\n'
echo $(find / -type f -perm -002) has world write permissions
find / -type f -perm -002 -print0
find /tmp -type f -perm -002
sed '1s/^/Found world write permissions:\n/'
find /tmp -type f -perm -002
awk -- '1{print "Found world write permissions:";print};END{if(NR==0)print "No world writable found."}'
find / -type f -perm 0777 -print -exec chmod 755 {} \;
find /  \( -perm -2000 -o -perm -4000 \) -ls
find . -name \*\\?\*
find . -name \*\\?\* > output.txt
find /etc -name "*.conf"
find . -perm -20 -exec chmod g-w {} ;
find . -perm -20 -print
xargs chmod g-w
find / -inum 199053
find . -name aaa.txt
sudo find -name "*[!0-9][1-9].txt" -exec chmod 744 '*' {} \; -a -exec ls -l {} \;
sort
parallel ls -l
find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -ls
find ${userdir}/${i}/incoming -mtime +2 -type f -size +200557600c -exec rm {} \;
find /etc -name '*.conf'
find -name "*test*" -depth
find ~ -size +10M
find / -newer myfile
find / -ctime +3
find / -mmin -1
find / -atime -1
find / -mtime 1
find / -perm -644
find /etc -type f -ctime -1
find . -mtime -1
find -name TEST_3
find . -name aaa.txt
find . -name "articles.jpg" -exec chmod 644 {} \;
find / -fstype ext2 -name document -print
find / /usr -xdev -name document -print
find / -path /usr/lib/important/*/file.txt
find / -user tutonics -name "file.txt"
find / -name filename -print
find -x / -name foo
find . -name foo -type d -prune -o -name foo -print
find / -name foo.bar -print -xdev
find ./dir1 ./dir2 -name foo.bar -print
find / -name photo.jpg
find /usr /bin /sbin /opt -name sar
find `ls -d /[ubso]*` -name sar
find ./ -name "somename.txt"
find ./ -iname blah
find ./ -name blah
find -name "<filetype>" -atime -5
find /dev/shm /tmp -type f -ctime +14
find /usr/local -size +10000k
find -newer foo.txt
find / -user syslog
find /tmp -user ian
find /path ! -perm /020
find /path ! -perm /g+w
find /path ! -perm /022
find /path ! -perm -022
find /path -nouser -or -nogroup
find /tmp/test/* -daystart -mtime +1
find /var/www -group root -o -nogroup -print0
xargs -0 chown :apache
find /var/www ! -user apache -print0
xargs -0
find /dir -newer yesterday.ref -a \! -newer today.ref -print
find /usr -newer /tmp/stamp$$
find /tmp -size -100c
find /users/tom -name "*.pl" -name "*.pm"
find .
xargs -n 1 echo
find . -print0
xargs    -0 echo
find -print0
find -fprint0
find . -path ./src/emacs -prune -o -print
find . -regextype posix-egrep -regex ".+\.(c
cpp
h)$"
find . -mtime 1
find -ipath './projects/insanewebproject'
find -ipath './projects/insanewebproject'
head -n1
find -ipath 'projects/insanewebproject'
find . -exec sh -c 'echo {}
grep -qi /path/to/something' \; -print
find . -exec sh -c 'echo {}
grep -qi /path/to/something[^/]*$' \; -print
find .
grep -qi /path/to/something[^/]*$
find . -exec sh -c 'echo {}
grep -qi /projects/insanewebproject[^/]*$' \; -print
find -maxdepth 0
find -prune
find /path -perm 777
find /path -perm ugo+rwx
find -x /var -inum 212042
find /path -perm -022
find /path -perm -g+w,o+w
find /path -perm -go+w
find /path -perm /g+w,o+w
find / -type l -lname '/mnt/oldname*'
find / -name  "*.txt" -fstype vfat 2> /dev/null
find / -name grub.conf
find / -name grub.conf 2>/dev/null
find / -name grub.conf >& /dev/null
find lpi104-6 -samefile lpi104-6/file1
find . -type d -exec basename {} \;
wc -l
find . -type f -exec basename {} \;
wc -l
find ~/Desktop -name “*.jpg” -o -name “*.gif” -o -name “*.png” -print0
xargs -0 mv –target-directory ~/Pictures
find .  -maxdepth 2 -name '*.tmp'
find . -type f -printf "%s\t%p\n"
sort -n
tail -1
find / -type l -print
perl -nle '-e
print';
find / -type l -print
perl -nle '-e
print';
find . -lname \*foo.txt
find / -lname foo.txt
find -L / -samefile path/to/foo.txt
find ~/Movies/ -size +1024M
find $HOME -name 'mysong.ogg'
find /home/www/ ! -executable
diff --suppress-common-lines --speed-large-files -y File1 File2
wc -l
find . -maxdepth 1 -name "$a" -print -quit
find . -type d
find /etc -size +100k -size -150k
find -type f -iname "*.txt" -exec ls -lrt {} \;
awk -F' ' '{print $1 $2  $9}'
find -type f -iname "*.txt" -exec ls -lrt {} \;
awk -F' ' '{print $1  $9}'
find / -user vivek -name "*.sh"
find / -user vivek
find /home -xdev -samefile file1
find / -path /proc -prune -o -user account -ls
ps aux
grep '[t]erminal'
find . -name '*~'
xargs rm
find . -name '*.py'
xargs grep 'import'
find . -name '*.py'
xargs wc -l
find -type d -empty
find . -type d -empty
find b -cmin -5
find /path -type f -name "*txt" -printf "cp '%p' '/tmp/test_%f'\n"
bash
find . -type f -name "*.class" -exec rm -vf {} \;
find xargstest/ -name 'file??'
sort
find dir -name "pattern" 2>/dev/null
find . -name \*\:\*
find . -name "foo*"
find . -name "*foo"
find . -type f -name "*.txt" ! -name README.txt -print
find b -type f -cmin -5
find b -type f -cmin -5 -exec cp '{}' c \;
find -name '.?*' -prune -o \( -type f -print0 \)
find . -type f
grep -P "\.dll$
\.exe$"
find . -type f
grep -vP "\.dll$
\.exe$"
find . -type f -a -name '*.*'
find -type f -print0
find . -type f -print
find "$1" -path "*/.*" -prune -o \( -type f -print0 \)
find . -name .git  -prune -o -name file  -print
find . -path ./.git  -prune -o -name file  -print
find . -name "*zip" -type f
xargs ls -ltr
tail -1
find . -type f -print0
xargs -0 ls -ltr
tail -n 1
find . -type f -print0
xargs -0 stat -f "%m %N"
sort -n
tail -1
cut -f2- -d" "
find . -type f -print0
xargs -0 stat -f "%m %N"
sort -rn
head -1
cut -f2- -d" "
find . -type f -print0
xargs -0 ls -drt
tail -n 1
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
sed 's/.*/"&"/'
xargs ls -l
find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n1
find . -type f
sed 's/.*/"&"/'
xargs ls -E
awk '{ print $6," ",$7 }'
sort
tail -1
find . -type f
sed 's/.*/"&"/'
xargs ls -E
awk '{ print $6," ",$7," ",$9 }'
sort
tail -1
find . -type f
xargs ls -ltr
tail -n 1
find -maxdepth 1 -type f -perm /222
find -maxdepth 1 -type f -perm /200
find . -type f -name "FindCommandExamples.txt" -exec rm -f {} \;
find -L . -type f -perm -a=x
find -L . -type f \( -perm -u=x -o -perm -g=x -o -perm -o=x \)
find -L . -type f -perm -u=x,g=x  \! -perm -o=x
find . -type f -perm -u=x
find . -type f -size +500M
find . -name "*oraenv*" -type f -exec file {} \;
find . -type f -mtime -14
cut -b 3- > deploy.txt
find . -mtime -7 -type f
find /etc -type f -mmin -10
find /dir/to/search/ -type f -name 'expression -and expression' -print
find /dir/to/search/ -type f -name 'expression -or expression' -print
find /dir/to/search/ -type f -name 'regex' -print
find /usr /home -name findme.txt -type f -print
find /tmp -name core -type f -print
xargs /bin/rm -f
find . -perm -g=r -type f -exec ls -l {} \;
find . -type f -size +500M
find . -type f -size +2G
find / -perm +6000 -type f
find /somefolder -type f '(' "${ARGS[@]}" ')'
find / -maxdepth 1 -xdev -type f
xargs grep -l 'string'
xargs perl -pi -e 's/.//g'
find / -maxdepth 1 -xdev -type f
xargs grep -l 'string'
xargs perl -pi -e 's/.*\n//g'
find / -maxdepth 1 -xdev -type f  -exec grep -li stringtofind '{}' \;
find / -maxdepth 1 -xdev -type f -exec grep -Zli "stringtofind" {} +
while IFS= read -r -d $'\0' file; do sed '/./d' "$file"; done
find / -maxdepth 1 -xdev -type f -exec grep -Zli "stringtofind" {} +
parallel -0 sed "'/./d'" '{}'
find / -maxdepth 1 -xdev -type f -exec grep -i "stringtofind" -l {} \; -exec sed -i '/./d' {} \;
find / -maxdepth 1 -xdev -type f -exec grep -i "stringtofind" -q "{}" \; -print0
xargs -0 sed '/./d
find / -maxdepth 1 -xdev -type f -exec grep -li "stringtofind" {} +
parallel sed "'/./d'" '{}'
find /path -type f -name "???-???_[a-zA-Z]*_[0-9]*_*.???"
find . -perm 644 -type f -exec ls -l {} \;
find . -type f -name "*.JPG"
find -perm -111 -type f
find . -not -path '*/\.*' -type f -name '*some text*'
find . -type d -path '*/\.*' -prune -o -not -name '.*' -type f -name '*some text*' -print
find /apps/ -user root -type f -amin -2 -name *.rb
find ./ -user root
find . -type f -printf "%s\t%p\n"
sort -n
head -1
find . -name 'sqlite.db' -exec sqlite3 "{}" 'SELECT * FROM table WHERE column1="value"' \;
find . -name "*.db" -type f
while read file ; do sqlite3 $file "SELECT * FROM table WHERE column1='value'"
grep value ; if [ $? -eq 0 ] ; then echo $file ; fi done
find . -type f -print
xargs grep -ni "STRING"
cat /var/run/dmesg.boot
grep Features
find . -type f -name "*.php" -exec grep --with-filename "eval(\
exec(\
base64_decode(" {} \;
find  /usr/lib/ /usr/lib64/ -lname "*libstdc++*"
find /usr/sbin /usr/bin -lname "*/systemctl"
find /etc -type l
find lpi104-6 research/lpi104-6 -lname "*file1"
find /etc -type l
find . -type l
xargs ls -ld
find test -type l -exec cp {} {}.tmp$$ \; -exec mv {}.tmp$$ {} \;
find /starting/path -name target.out
xargs /path/to/simpleGrepScript.sh
find /base/path/of/proj/d‌​ata -name target.txt
xargs simpleGrepScript.sh > overallenergy.out
find . –name "*.txt" –mtime 5
find . -type f
xargs grep "text"
find . -name .snapshot -prune -o -name '*.foo' -print
awk -F, 'NR==1 {gsub(/"/,"",$3);print $3}' "$(dirname $(readlink -f $(which erl)))/../releases/RELEASES"
find /var  -type f -exec grep "param1" {} \; -print
find /var -type f
xargs grep "param1"
find .  -name "*.groovy" -not -path "./target/*" -print
find /home/tecmint/Downloads/ -type f -exec du -Sh {} +
sort -rh
head -n 5
find -type f -exec du -Sh {} +
sort -rh
head -n 5
find . -name “core” -exec rm -f {} \;
find . -type d
find -mindepth 3 -maxdepth 3 -type d -name "*New Parts*" -exec ln -s -t /cygdrive/c/Views {} \;
find -mindepth 3 -maxdepth 3 -type d
grep "New Parts"
tr '\012' '\000'
xargs -0 ln -s -t /cygdrive/c/Views
{ read -r -d' ' time && IFS= read -r -d '' filename; } < <(find . -type d -printf '%A@ %p\0'
sort -z -r -n)
find -type d -printf '%T+ %p\n'
sort
head -1
find -empty
find . -inum $inum -exec rm {} \;
find . -inum 1316256
find . -inum 211028 -exec mv {} newname.dir \;
find . -name '*.ISOLATE.*.txt' -maxdepth 1 -print0
xargs -0 -IFILE mv FILE ./ISOLATE
find -name '*.ISOLATE.quantifier.txt' -maxdepth 1 -exec mv {} ISOLATE/ +
find . -name '*.JUKEBOX.*.txt' -maxdepth 1 -print0
xargs -0 -IFILE mv FILE ./JUKEBOX
find . -type f -perm 644 -exec chmod 664 {} \;
find ... -print -quit
find . -name something -print -quit
/usr/bin/find $DIR -maxdepth 1 -ipath $TMP_DIR -print -quit
find . ... -exec sh -c 'printf "%s\n" "$1"; kill "$PPID"' sh {} \;
find . ... -print -quit
find . -name modules -exec sh -c 'exit 0' \;
find . -type d -print0
xargs -0 du
sort -n
tail -10
cut -f2
xargs -I{} du -sh {}
find . -type f -print0
xargs -0 du
sort -n
tail -10
cut -f2
xargs -I{} du -sh {}
find /home/tecmint/Downloads/ -type f -exec du -Sh {} +
sort -rh
head -n 5
find /home/tecmint/Downloads/ -type f -printf "%s %p\n"
sort -rn
head -n 5
find . -name '*.gz' -print
xargs gzip -l
awk '{ print $2, $4 ;}'
grep -v '(totals)$'
sort -n
tail -1
find . -name '*.gz'
xargs gzip -l
tail -n +2
head -n -1
sort -k 2
tail -n 1
awk '{print $NF}'
find . -type f -printf '%TY-%Tm-%Td %TT   %p\n'
sort
find /path/to/dir -type f
perl -ne 'chomp(@files = <>); my $p = 9; foreach my $f (sort { (stat($a))[$p] <=> (stat($b))[$p] } @files) { print scalar localtime((stat($f))[$p]), "\t", $f, "\n" }'
tail
find /path/to/dir -type f -exec printf %.sX {} +
wc -c
find . -name \*.sql
xargs \ls -1rc
tail -7
head -1
find -maxdepth 2 -name passwd
find -maxdepth 2 -name passwd
find / -maxdepth 3 -name passwd
find / -maxdepth 3 -name passwd
find -mindepth 3 -maxdepth 5 -name passwd
find -mindepth 3 -maxdepth 5 -name passw
ps -A
grep mysql
ps aux
grep mysql
grep -v grep
find . -type d -print0
xargs -0 -n1 du -sk
sort -rn > dir-sizes.txt&
find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n'
sort
uniq
tr -d '\n' > ~/.codepath
find . \( -name "*.php" -o -name "*.html" \) -print0
xargs -0 grep -Hin "joomla"
find . -type f -exec ls -al {} \;
sort -nr -k5
head -n 25
find . -type f -exec ls -s {} \;
sort -n -r
head -5
find . -type f -exec ls -s {} \;
sort -n -r
head -5
find . -type f -exec ls -s {} \;
sort -n
head -5
find . -type d -name bin
cut -d/ -f1,2
sort > b
find . -iname "*.jpg" -ls
perl -lane '$t += $F[6]; print $t/1024/1024/1024 . " GB"'
find . -iname '*.jpg' -type f -printf '%b\t%D:%i\n'
sort -u
cut -f1
paste -sd+ -
bc
find . -type f -iname '*.jpg' -print0
du -c --files0-from=-
find . -type f -iname '*.jpg' -print0
xargs -r0 du -a
awk '{sum+=$1} END {print sum}'
find ./photos/john_doe -type f -name '*.jpg' -exec du -ch {} +
grep total$
find /mnt/iso -name *.avi -printf "%s\n"
paste -sd+ -
bc
find -iname 'file*' -exec du -cb {} +
grep total$
cut -f1
paste -sd+ -
bc
find /bin -type f -follow
xargs    ls -al
awk ' NF==9 { print $3 }'
sort -u
find /path/to/search -daystart -ctime -1
find . -user daniel -type f -name *.jpg
find . -user daniel -type f -name *.jpg ! -name autumn*
who
cut -d ' ' -f 1
grep -e '^ab' -e '1$'
who
grep -e '^ab' -e '1$'
find . -name '*.rb' -exec grep -H jump {} \;
find . -type f -name 'abc*' ! -name '*.py'
find . -writable
find -type f -maxdepth 1 -writable
find .  -maxdepth 1 -type f -writable
find . -type f -writable
grep -v sites/default/files
find /tmp/ -ctime -1 -name x*
find /tmp/ -ctime -1 -name "x*" -exec mv '{}' ~/play/
find /tmp/ -ctime -1 -name "x*"
xargs -I '{}' mv '{}' ~/play/
find /tmp/ -ctime -1 -name 'x*' -exec sh -c '   exec mv "$@" ~/play/' sh {} +
find /tmp/ -ctime -1 -name 'x*' -print0
xargs -r0 mv -t ~/play/
find . -name "x*" -print0
strace xargs -0 -I '{}' mv '{}' /tmp/other
echo $b
grep -q $a
ifconfig en0
grep inet
grep -v inet6
awk '{print $2}'
ifconfig eth0
grep 'inet addr:'
awk '{print $2}'
awk -F ':' '{print $2}'
netstat -rn
gawk '/UG/ {print $NF}'
xargs ifconfig
gawk 'match($0,/inet addr:(.*) B/,a) {print a[1]}'
ifconfig
grep 192.168.111
awk '{print $2}'
ifconfig
grep -v '127.0.0.1'
sed -n 's/.*inet addr:\([0-9.]\+\)\s.*/\1/p'
ifconfig
sed -n 's/.*inet addr:\([0-9.]\+\)\s.*/\1/p'
ps -A -o pid
xargs -I pid readlink "/proc/pid/exe"
xargs -I file dirname "file"
pgrep -u w
grep ssh
awk '{print $1}' ssh
find -type f -exec grep -Hn "texthere" {} +
find $LOCATION -print -exec shred $TIMES -u '{}' \;
find /path -type f -exec ls -l \{\} \;
find . -type f -ctime -$2 -name "mylog*.log"
xargs bzip2
find /home/me/download/ -type f -name "*.rm" -exec ffmpeg -i \{} -sameq \{}.mp3 \; -exec rm \{} \;
find . -type f -name "*.rm" -exec ffmpeg -i {} -sameq {}.mp3 \; -exec rm {} \;
dirname `find / -name ssh
grep bin`
find / -name ssh
grep bin
xargs dirname
w
awk '{print $1}'
pstree
grep php
x=$(grep "$(dirname "$path")" file)
find /myDir -name 'log*' -and -not -name '*.bz2' -ctime +7 -exec bzip2 -zv {} \;
find /myDir -name "log*" -ctime +7 -exec bzip2 -zv {} \;
w
sed '1,2d'
cut -f1 -d' '
sort
uniq -c
w
grep ssh
find ./ -type d -exec rmdir --ignore-fail-on-non-empty {} 2>/dev/null \;
ps aux
awk '{print $11}'
grep -x -e "/.*"
xargs -I file dirname "file"
ps aux
awk '{print $11}'
grep -x -e "/.*"
xargs dirname
ps aux
awk '{print $11}'
grep -x -e "/.*"
xargs dirname
head
find -type f -name 'header.php'
xargs -n 1 dirname
xargs -n 1 cp -f topscripts.php
cd $(find . -name Subscription.java
xargs dirname)
cd `find . -name Subscription.java
xargs dirname`
diff -qr directory directory.original
cut -d' ' -f2
xargs dirname
uniq
directories=$(diff -qr directory directory.original
cut -d' ' -f2
xargs dirname
uniq)
yum list
grep subversion
env
grep DUALCASE
grep -r "string to be searched"  /path/to/dir
find /home/folder1 /home/folder2 -type f -mtime +5 -exec compress {} \;
month=$(cal
head -1
grep -oP "[A-Za-z]+")
brew outdated
wc -l
match=$(echo "${line}"
egrep -o 'run-parts (-{1,2}\S+ )*\S+')
groups
groups user
find . -name '*.js' -exec grep -i 'string to search for' {} \; -print
{ time sleep 1; } 2>&1
grep real
grep --help
grep recursive
grep --include=\*.{c,h} -rnw '/path/to/somewhere/' -e "pattern"
grep --exclude-dir={dir1,dir2,*.dst} -rnw '/path/to/somewhere/' -e "pattern"
grep -rnw '/path/' -e 'pattern'
grep --exclude=*.o -rnw '/path/to/somewhere/' -e "pattern"
find . -type 'd'
grep -v "NameToExclude"
xargs rmdir
find -type d -name a -exec rmdir {} \;
find . -name "a" -type d
xargs rmdir
grep -Ril "text-to-find-here" /
shopt -p
grep checkjobs
shopt
grep login
set
grep ^IFS=
find ./ -type f -iname "*.cs" -print0
xargs -0 grep "content pattern"
find .
xargs grep "searched-string"
grep -R "texthere" *
set
grep ^fields=\\\
^var=
grep -e TEXT *.log
cut -d' ' --complement -s -f1
echo "$f"
grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?'
cut -d. -f1
echo "$f"
grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?'
cut -d. -f3
echo "$f"
grep -Eo '[0-9]+[.]+[0-9]+[.]?[0-9]?'
cut -d. -f2
grep -r -l "foo" .
grep -r "searched-string" .
find . -name "string to be searched" -exec grep "text" "{}" \;
TMPDIR=`dirname $(mktemp -u -t tmp.XXXXXXXXXX)`
dirname $(mktemp -u -t tmp.XXXXXXXXXX)
( find ./ -name '*.php' -print0
xargs -0 cat )
wc -l
( find . \( -name '*.h' -o -name '*.cpp' \) -print0
xargs -0 cat )
wc -l
USERS=$(w
awk '/\/X/ {print $1}')
USERS=$(awk '/\/X/ {print $1}' <(w))
find -type f -exec grep -l "texthere" {} +
find / -name  "*.txt" -mount 2> /dev/null
find / -name  "*.txt" -xdev 2> /dev/null
find /mnt/msdos  -name "*.txt" 2> /dev/null
find . -type f -exec chmod 644 {} \;
find . -type d -exec chmod 755 {} \;
find /usr/local -name "*.html" -type f -exec chmod 644 {} \;
readlink -f $(which lshw)
$(dirname $(readlink -f $BASH_SOURCE))
getent passwd
cut -d: -f1
perl -e'while(<>){chomp;$l = `crontab -u $_ -l 2>/dev/null`;print "$_\n$l\n" if $l}'
find . -name '*.def'
sed 's/\(.*\)/\1.out/'
xargs touch
basename -a "${alpha[@]}"
awk '{print "result =",$0}' <(rev file)
rev file
awk '{print "result =",$0}'
join -11 -21 -o1.1,1.2,1.3,2.3 file1 file2
sed 's/$/ FAIL/' fail.txt
join -a 1 -e PASS -j 1 -o 1.1,2.2 list.txt -
join -j 1 -t : -o 2.1,2.2,2.4,1.3 <(sort empsal) <(sort empname)
join -v1 <(sort file1) <(sort file2)
join -o 1.1,1.2,1.3,1.4 -t, <(sort file1.csv) <(sort file2.txt)
join -o 1.1,1.2,1.3,1.4 -t, file1.csv file2.txt
join -j1 -o 2.1,2.2,1.2,1.3  <(sort test.1) <(sort test.2)
join -j1 file2 file1
$ join -j 2 -o 1.1 1.2 2.1 <(sort 1) <(sort -k2 2)
join -j 2  -o 1.1 1.2 2.1 <(sort -k2 1) <(sort -k2 2)
crontab -l
sed -re '/# *change-enabled *$/s/^([^ ]+) [^ ]+/\1 7/'
crontab -
sudo ln -f "findpdftext" /usr/local/bin
ln -f secret_file.txt non_secret_file.txt
ln -f '/home/user/Musik/mix-2012-13/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3' '/home/user/Musik/youtube converted/aesthesys~ I Am Free, That Is Why I'"'"'m Lost..mp3'
sudo ln -s -f "/usr/local/bin/findpdftext" "/usr/local/bin/fpdf"
sudo ln -s -f "/usr/local/bin/findpdftext" "/usr/local/bin/fpt"
ln -sfn /other/dir new_dir
ln -sfn source_file_or_directory_name softlink_name
sudo ln -sTfv "$default_java_dir" "/usr/lib/jvm/default-java"
sudo ln -f -s $javaUsrLib/jdk1*/bin/* /usr/bin/
ln -sf "$(readlink -f "$1")" "$*"
ln -sfn "$c" "$lines"
sudo ln --symbolic --verbose --force "$pluginpath" "$pdir"
ln -sfn newDir currentDir
ln -sf $keyname     id_rsa
ln -f -s /apps/myapps/new/link/target mylink
ln -sf "$f" "~/my-existing-links/$(basename $f)"
ln -nsf $lastModified $SYMLINK_PATH
ln -nsf alpha_2 alpha
ln -nsf dir2 mylink
gzip -d --force * /etc
find .
xargs -i rm -f "{}"
find /tmp/* -atime +10 -exec rm -f {} \;
find . -maxdepth 1 -name "*.jpg" -size -50k -exec rm {} \;
find . -maxdepth 1 -name "*.jpg" -size -50k
xargs rm -f
find . -maxdepth 1 -type f -exec rm -f {} \;
find . -maxdepth 1 -type f -print0
xargs rm -f
ssh -t somehost ~/bashplay/f
ssh -t remotehost "sudo <cmd>"
rm -rf "$(pwd -P)"/*
find /var/www -type d -print0
xargs -0 chmod g+s
ssh -tt foo ./script.py
find . -name '*'
xargs rm
find . -name 'spam-*'
xargs rm
rm -rf *~important-file
ln --force --target-directory=~/staging ~/mirror/*
ln -sf '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/' '/cygdrive/c/Users/Mic/mypics'
rm --force "${temp}"
rm -f *.bak *~
rm -f /tmp/stored_exception /tmp/stored_exception_line /tmp/stored_exception_source
echo "$line"
column -t
cat file.txt
column -c 28 -s "\ "
( awk 'NR % 2' input; awk 'NR % 2 == 0' input )
paste - - -
column -s'   ' -t
date --date @120024000
echo " ${arr[@]/%/$'\n'}"
column
echo " ${arr[@]/%/$'\n'}"
sed 's/^ //'
column
paste -d" " - - < file
column -t
awk '{for(i=3;i<=NF;i++){print $1,$2,$i}}' file
column -t
fold -s "$2"
mailx -s "$SUBJECT" -b "abc@abc.com" "$EMAIL" -r "$MAILBCC"
column -t -s $'\n' list-of-entries.txt
column -t -s '' list-of-entries.txt
mount
column -t
cat file
column -c 80
column -t -s' ' filename
column -t -s $'\t' list-of-entries.txt
column -t -s $'\t' FILE
...
awk '{print $5"\t\t" $3"\t"$4}'
column -t
cat file
column -t
column -t [file]
date -ud @1267619929
stat -c 'File: %n Modified: %y' t*
column -t
stat -f 'File: %N Modified: %t%Sm' t*
column -t
...
column -s$'\t' -t
printf ...
fold -w 80
ruby-script.rb
column -s $'\t' -t
CDATE=$( date -d @"$timestamp" +"%Y-%m-%d %H:%M:%S" )
VARIABLENAME=$(date -d @133986838)
date -d @$TIMESTAMP
date -d @1267619929
ssh -f user@gateway -L 3307:1.2.3.4:3306 -N
ssh -f mysql_access_server -L 3309:sqlmaster.example.com:3306 -N
ssh -f -N -L localhost:12345:otherHost:12345   otherUser@otherHost
ssh -N -i <(echo "privatekeystuffdis88s8dsf8h8hsd8fh8d") -R 16186:localhost:8888 hello.com
ssh -f user@gateway -p 24222 -L 3307:1.2.3.4:3306 -N
ssh -L localhost:8000:clusternode:22 user@bridge
basename -- $0
basename $0
kill -20 $PID; kill -18 $PID
grep -Ff list1.txt list2.txt
sort
uniq -c
sort -n
find /public/html/cosi -name "wiki.phtml -exec echo "<a href=\"{}\">{}</a>" \;
find -printf "%P\0" -exec uuid -v 4 \;
sort
awk -F'\0' '{ print $2 " " $1}'
find -printf "%P\n"
sort
xargs -I '{}' bash -c 'echo $(uuid) {}'
find . -exec printf '%s\t' {} \; -exec uuidgen \;
awk -F '\t' '{ sub(/.+\//,"", $1); print $2, $1 }'
sort -k2
find . -printf "%P\0"
sort -z
while IFS= read -d '' -r f; do echo "$(uuid) $f"; done
find . -printf "%P\n"
sort
while IFS= read -r f; do echo "$(uuid) $f"; done
pass=$(LC_CTYPE=C < /dev/urandom tr -cd [:graph:]
tr -d '\n'
fold -w 32
head -n 1)
echo -e {{a..n},ñ,{o..z}}"\n"
nl
echo -e {{a..c},ch,{d..l},ll,{m,n},ñ,{o..z}}"\n"
nl
seq 1 10
sort -R
tee /tmp/lst
cat <(cat /tmp/lst) <(echo '-------') \ <(tac)
MAPPER=$(mktemp -up /dev/mapper)
fn=$(mktemp -u -t 'XXXXXX')
tFile=$(mktemp --tmpdir=/dev/shm)
fifo_name=$(mktemp -u -t fifo.XXXXXX)
dig $domain
dig -t A $domain
who am i --ips
awk '{print $5}' #ubuntu 14
find / -size +10M -printf “%12s %t %h/%fn”
find /usr/bin  -type l  -name "z*" -exec ls  -l {} \;
find /home -type f -printf "%i@%p\n"
find . -type f -name '.*'
find . -type f -name '.*' -print0
while IFS= read -r -d '' f; do basename "$f"; done
find / -type d -gid  100
find . -print0
xargs -0 echo
ps -p 24297 -o comm --no-heading
find "$dir" -type f
find $dir -type f
find . -iname '*.page' -exec awk '{if(length($0) > L) { LINE=NR;L = length($0)}} END {print L"
"FILENAME":"LINE}' {} \;
sort
find . -name "*.rb" -type f -print0
xargs -0 -n 2 echo
basename "$(pwd)"
pwd
awk -F / '{print $NF}'
host $(uname -n)
grep "IPv6 address"
head -n 1
awk '{print $5}'
host $(uname -n)
grep "address"
grep -v "IPv6"
head -n 1
awk '{print $4}'
header="$(curl -sI "$1"
tr -d '\r')"
dig +short "$domain"
$dig -x 8.8.8.8
grep  PTR
grep -o google.*
reverse=$(dig -x $ip +short)
dig -x "$1"
grep PTR
cut -d ' ' -f 2
grep google
cut -f 5
dig -x $IP
grep PTR
cut -d ' ' -f 2
grep google
cut -f 5
dig -x 8.8.8.8
awk '/PTR[[:space:]]/ && /google/ {print $NF}'
cat 1.txt
xargs dig TXT
find / -ctime +3
grep ^Q File1.txt
cut -d= -f2-
sort
comm -23 - <(sort File2.txt)
find . -name custlist\*
perl -ne '$path = $_; s?.*/??; $name = $_; $map{$name} = $path; ++$c; END { print $map{(sort(keys(%map)))[$c-1]} }'
find . -name 'filename'
xargs -r ls -tc
head -n1
echo "$data"
cut -f2 -d$'\n'
pstree $(pgrep CID$client_id) -ap
sed -n 's/.*rsync,\([0-9]*\).*/\1/p'
which find
echo "$path"
rev
cut -d"/" -f1
rev
ps -fp <pid>
ps -p $$
awk '$1 == PP {print $4}' PP=$$
ps
grep `echo $$`
awk '{ print $4 }'
find . -type d -printf "%A@ %p\n"
sort -n
tail -n 1
cut -d " " -f 2-
find /home/d -type f -name "*.txt" -printf "%s\n"
awk '{s+=$0}END{print "total: "s" bytes"}'
find /path -iname '*.txt'
perl -lane '$sum += -s $_; END {print $sum}'
find . -iname "*.txt" -exec du -b {} +
awk '{total += $1} END {print total}'
find . -name "*.txt" -print0
xargs -0 du -ch
tail -n1
find folder1 folder2 -iname '*.txt' -print0
du --files0-from - -c -s
tail -1
find "$SEARCH_PATH" -name 'pattern'
rev
cut -d'/' -f3-
rev
find . -user <userid>
find . -mindepth 1 -maxdepth 1 -type f -print0
xargs -0 -I {} echo "{}"
find . -type f -name "*.php" -exec grep --with-filename -c "^use " {} \;
sort -t ":" -k 2 -n -r
find $1 -type f
wc -l
ps -ef
grep apache
lshw -class cpu
grep "^       width"
uniq
awk '{print $2}'
find dir1 ! -type d
xargs wc -c
find dir2 ! -type d
xargs wc -c
find . -type f -printf "%s + "
dc -e0 -f- -ep
find . -type f
xargs stat --format=%s
awk '{s+=$1} END {print s}'
find dir1 ! -type d -printf "%s\n"
awk '{sum += $1} END{print sum}'
find dir1 ! -type d -printf "%s\n"
awk '{sum += $1} END{printf "%f\n", sum}'
find dir1 ! -type d
xargs wc -c
tail -1
find . -type f -printf '%p %s\n'
awk '{sum+=$NF}END{print sum}'
find . -type f -printf '%p %s\n'
awk '{ sum+=$2}; END { print sum}'
find . -type f -printf '%p %s\n'
perl -ane '$sum+=$F[1];END{print "$sum\n"}'
find . -type f -printf '%p %s\n'
perl -n -a -e '$sum+=$F[1]; print "$sum\n"'
tail -n 1
find path -type f -printf '%s\n'
awk '{sum += $1} END {print sum}'
top -l 1 -s 0 -i 1 -stats vprvt -pid PID
top -l 1 -s 0 -stats mem -pid PID
top -l 1 -s 0 -stats vprvt -pid 8631
NET_IP=`ifconfig ${NET_IF}
grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'
grep -Eo '([0-9]*\.){3}[0-9]*'
grep -v '127.0.0.1'`
ifconfig en0
awk '$1 == "inet" {print $2}'
ifconfig en0
awk '/inet addr/{print substr($2,6)}'
ip addr show en0
awk '$1 == "inet" {gsub(/\/.*$/, "", $2); print $2}'
ifconfig en0
awk '/inet addr/ {gsub("addr:", "", $2); print $2}'
ifconfig en1
awk '{ print $2}'
grep -E -o "([0-9]{1,3}[\.]){3}[0-9]{1,3}"
ifconfig en1
sed -n '/inet addr/s/.*addr.\([^ ]*\) .*/\1/p'
my_ip=$(ifconfig en1
grep 'inet addr'
awk '{print $2}'
cut -d: -f 2)
ifconfig eth0
awk '/inet /{sub(/[^0-9]*/,""); print $1}'
ifconfig eth0
awk '/inet addr/{sub("addr:",""); print $2}'
ifconfig eth0
awk '/inet addr/{sub(/[^0-9]*/,""); print $1}'
ifconfig eth0
grep 'inet addr:'
cut -d: -f2
awk '{print $1}'
ifconfig eth0
grep -oP '(?<= inet addr:)[^ ]+'
ifconfig eth0
grep inet
cut -d: -f2
cut -d' ' -f1
/sbin/ifconfig $(netstat -nr
tail -1
awk '{print $NF}')
awk -F: '/inet /{print $2}'
cut -f1 -d ' '
ifconfig eth0
grep addr:
awk '{ print $2 }'
cut -d: -f2
ifconfig
grep 'inet addr:'
grep -v '127.0.0.1'
awk -F: '{print $2}'
awk '{print $1}'
head -1
ifconfig
grep 'inet addr:'
grep -v 127.0.0.1
head -n1
cut -f2 -d:
cut -f1 -d ' '
ifconfig
grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}"
grep -v 127.0.0.1
awk '{ print $2 }'
cut -f2 -d:
ifconfig
grep -A2 "venet0:0\
eth0"
grep 'inet addr:'
sed -r 's/.*inet addr:([^ ]+).*/\1/'
head -1
ifconfig $(netstat -rn
grep -E "^default
^0.0.0.0"
head -1
awk '{print $NF}')
grep 'inet '
awk '{print $2}'
grep -Eo '([0-9]*\.){3}[0-9]*'
ifconfig `ip route
grep default
head -1
sed 's/\(.*dev \)\([a-z0-9]*\)\(.*\)/\2/g'`
grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"
head -1
ip=$(ifconfig
grep -oP "(?<=inet addr:).*?(?=Bcast)")
ifconfig
awk -F':' '/inet addr/&&!/127.0.0.1/{split($2,_," ");print _[1]}'
ifconfig
grep 'inet'
grep -v '127.0.0.1'
awk '{print $2}'
sed 's/addr://'
ifconfig
grep 'inet addr:'
grep -v '127.0.0.1'
cut -d: -f2
awk '{ print $1}'
ifconfig
grep -oP "(?<=inet addr:).*?(?=  Bcast)"
ifconfig
grep -oP "(?<=inet addr:).*?(?=Bcast)"
ifconfig
grep -E "([0-9]{1,3}\.){3}[0-9]{1,3}"
grep -v 127.0.0.1
awk '{ print $2 }'
cut -f2 -d:
ifconfig
grep ad.*Bc
cut -d: -f2
awk '{ print $1}'
ifconfig eth0
grep -Eo ..\(\:..\){5}
ifconfig eth0
grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'
ifconfig eth0
head -n1
tr -s ' '
cut -d' ' -f5
x=$(ifconfig eth0)
x=${x#*HWaddr }
echo ${x%% *}
ifconfig en0
grep -Eo ..\(\:..\){5}
ifconfig en0
grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'
ifconfig eth0
awk '/HWaddr/ {print $5}'
ifconfig eth0
grep -Eoi [:0-9A-F:]{2}\(\:[:0-9A-F:]{2}\){5}
ifconfig eth0
grep HWaddr
cut -d ' ' -f 9
ifconfig
grep -i hwaddr
cut -d ' ' -f9
ifconfig p2p0
grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'
ifconfig -a
awk '/^[a-z]/ { iface=$1; mac=$NF; next } /inet addr:/ { print mac }'
grep -o -E '([[:xdigit:]]{1,2}:){5}[[:xdigit:]]{1,2}'
ifconfig
awk '$0 ~ /HWaddr/ { print $5 }'
fg
fg 1
ifconfig
grep "inet addr:"
grep -v "127.0.0.1"
grep -Eo '[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}'
head -1
apropos -r '^std'
vi -
fg 2
go=$(dig -x 8.8.8.8
awk '/PTR[[:space:]]/{print $NF}')
$dig -x 8.8.8.8
grep  PTR
grep -o google.*
dig -x 8.8.8.8
awk '/PTR[[:space:]]/{print $NF}'
dig -x 8.8.8.8
grep PTR
cut -d ' ' -f 2
grep google
cut -f 5
/sbin/ifconfig
sed -ne $'/127.0.0.1/ ! { s/^[ \t]*inet[ \t]\\{1,99\\}\\(addr:\\)\\{0,1\\}\\([0-9.]*\\)[ \t\/].*$/\\2/p; }'
ifconfig
awk -F"[ :]+" '/inet addr/ && !/127.0/ {print $4}'
ifconfig
grep -Eo 'inet (addr:)?([0-9]*\.){3}[0-9]*'
grep -Eo '([0-9]*\.){3}[0-9]*'
grep -v '127.0.0.1'
ifconfig
sed -En 's/127.0.0.1//;s/.*inet (addr:)?(([0-9]*\.){3}[0-9]*).*/\2/p'
git diff --name-only
xargs dirname
uniq
rest_cmd=$(shopt -p dotglob)
ifconfig en0
grep inet
grep -v inet6
ifconfig eth0
grep HWaddr
ifconfig eth0
grep HWaddr
groups a b c d
find  / -name "apt" -ls
find . -name "*.pl" -exec ls -ld {} \;
find /path/to/base/dir -type d -exec chmod 755 {} +
find /path/to/base/dir -type d -print0
xargs -0 chmod 755
find /path/to/base/dir -type f -exec chmod 644 {} +
find /path/to/base/dir -type f -print0
xargs -0 chmod 644
find . -type d -name files -exec chmod ug=rwx,o= '{}' \;
find /home -xdev -samefile file1
xargs ls -l
find . -name '*.php'
xargs wc -l
sort -nr
egrep -v "libs
tmp
tests
vendor"
less
groups $USERNAME
cut -d\  -f 1
tmux set -g history-limit 10000
tmux set-option -g history-limit 10000
cd -
cd "$(xsel)"
cd "`xsel`"
cd $(ls -d */
grep 1670)
cd `find . -maxdepth 1 -type d
grep 1670`
cd `ls -d */
grep 1670`
cd /the/project/root//data
cd /tmp
cd /cygdrive/c/Program\ Files\ \(x86\)
cd "/cygdrive/c/Program Files (x86)"
cd '/cygdrive/c/Program Files (x86)/$dollarsign'
cd /some/where/long
cd "~"
cd `echo -n "~"`
cd "${dirs[-1]}"
cd $(echo $somedir
sed "s#^~#$HOME#")
cd $(dirname $(which ls))
cd $(which oracle
xargs dirname)
cd "$(ls -rd [0-9]*/
tail --lines 1)"
cd -
cd $(git rev-parse --show-cdup)
source <(grep = file.ini
sed 's/ *= */=/g')
curl -s 'http://archive.ubuntu.com/ubuntu/pool/universe/s/splint/splint_3.1.2.dfsg1-2.diff.gz'
gunzip -dc
less
echo $(basename /foo/bar/stuff)
echo `basename "$filename"`
VAR=`dig axfr @dc1.localdomain.com localdomain.com
grep -i Lawler
awk '{ getline ; $1=substr($1,1,length($1)-1); print $1 ; exit }'`
dig $domain
grep $domain
grep -v ';'
awk '{ print $5 }'
yes n
gunzip file*.gz
shopt "$NGV" nullglob
ssh-keygen -Hf ~/.ssh/known_hosts
cal -h
sed "s/ $(date +%d) /"$'\033\[94m&\033\[0m/g; '"s/ $(date +%d)$/"$'\033\[94m&\033\[0m/g'
cal -h
sed "s/$(date +%d)/"$'\033\[94m&\033\[0m/g'
cal -h
sed "s/\<$(date +%d)\>/"$'\033\[94m&\033\[0m/g'
find . -type f -print0
xargs -0 grep -c banana
grep -v ":0$"
find /home/*/public_html/ -type f -iwholename "*/modules/system/system.info" -exec grep -H "version = \"" {} \;
find /var/www/vhosts/*/httpdocs/ -type f -iwholename "*/modules/system/system.info" -exec grep -H "version = \"" {} \;
find /home/*/public_html/ -type f -wholename *includes/constants.php -exec grep -H "PHPBB_VERSION" {} \;
find /var/www/vhosts/*/httpdocs/ -type f -wholename *includes/constants.php -exec grep -H "PHPBB_VERSION" {} \;
find /home/*/public_html/ -type f -iwholename "*/wp-includes/version.php" -exec grep -H "\$wp_version =" {} \;
find /var/www/vhosts/*/httpdocs/ -type f -iwholename "*/wp-includes/version.php" -exec grep -H "\$wp_version =" {} \;
find / -nouser -o  -nogroup
( cd ~/mydir
mycommand )
echo $[4/0]
exit $?
make
exit $?
echo $c
crontab
tail -f access.log
stdbuf -oL cut -d ' ' -f1
uniq
set -e
ps -o pid= --ppid $PPID
xargs kill -9
lsof -n -i:3000
grep LISTEN
awk '{ print $2 }'
uniq
xargs kill -9
kill -9 $(lsof -i:3000 -t)
ps aux
grep -ie amarok
awk '{print $2}'
xargs kill -9
ps -ef
grep myProcessName
grep -v grep
awk '{print $2}'
xargs kill -9
ls -Art *.sql.gz
tail -n 1
xargs gunzip -c
mysql --user=user --password=password database
export user=`env
grep -i SSH_CLIENT
cut -d' ' -f1
cut -d'.' -f4`
source "$DIR/incl.sh"
cat file-of-ips
xargs -n 1 -I ^ -P 50 ping ^
yes 0
sed '1~2s/0/1/'
yes no
yes 1
nl
tee /tmp/to
seq 1 10
sed $': loop; n; n; a insert\nn; b loop'
fold -w30 longline
pr -20ts'
'
fold -w30 longline
tr '\n' '
'
sed 's/
$/\n/'
sed -i "15i `hostname`" test.html
tac file
awk '/ScriptAlias/ && ! seen {print "new line"; seen=1} {print}'
tac
yum -y install mono-devel
yum install packagename
yum --disablerepo=sublime2 install firefox
yum install firefox
sudo yum install glibc
yum --enablerepo=remi install php-mbstring
yum --enablerepo=remi php-mssql
cat /home/pkglist.txt
xargs yum -y install
yum install --exclude='*glob*' *.rpm
brew install git bash-completion
yum install ffmpeg-2.6.4-1.fc22.x86_64.rpm
yum --nogpgcheck localinstall packagename.arch.rpm
yum install -y devtoolset-3
yum install -y nodejs
yum install mysql
yum -y groupinstall "Development Tools"
yum -y groupinstall "MYSQL Database Client"
yum install mysql mysql-server
kill -9 \`pgrep myprocess\`
ln --symbolic --interactive $SCRIPT_DIR/$FILE
grep -R 'word' *.properties
more
ps aux
less -S
ls --color
less -r
source <(grep -v "mesg" /etc/bashrc)
grep "=" myfile
source /dev/stdin
FOO_NO_WHITESPACE="$(echo -e "${FOO}"
tr -d '[[:space:]]')"
set -o allexport; source conf-file; set +o allexport
source <( grep "marker" config.sh )
ssh -v -Y phil@192.168.0.14 -p 222
ssh -Y $ssh_user@$ssh_server
cut -d, -f1 file
uniq
xargs -I{} grep -m 1 "{}" file
join -t':' <(sort LN.txt) <(sort PH.txt)
join -t':'  - <(sort AD.txt)
awk 'NR==FNR{m[$1]=$2" "$3; next} {print $0, m[$1]}' file2 file1
column -t
join file1 file2
column -t
join -t, -a1 -a2 <(sort file1) <(sort file2)
join -t, <(sort test.1) <(sort test.2)
join -t, - <(sort test.3)
join -t, - <(sort test.4)
join -t, test.1 test.2
join -t, - test.3
join -t, - test.4
join -1 2 -2 1 <(sort +1 -2 file1) <(sort +0 -1 file2)
join -1 2 -2 1 -a1 <(cat -n file1.txt
sort -k2,2) <(sort file2.txt)
sort -k2
cut --complement -d" " -f2
join <(sort -n A) <(sort -n B)
join <(sort aa) <(sort bb)
join <(sort aa) <(sort bb)
sort -k1,1n
paste <(uniq -f3 file
cut -f1,2) <(tac file
uniq -f3
tac
cut -f3-)
join -o 1.2,1.3,2.4,2.5,1.4 <(cat -n file1) <(cat -n file2)
find  / -type d -name "apt" -ls
echo "abc-def-ghi-jkl"
rev
cut -d- -f-2
rev
echo $path
rev
cut -d'/' -f-3
rev
echo "0a.00.1 usb controller some text device 4dc9"
rev
cut -b1-4
rev
screen -X -S SCREENID kill
killall -u "$(whoami)" dropbox
ps -ef
grep myProcessName
grep -v grep
awk '{print $2}'
xargs kill -9
jobs -p
xargs kill -9
ps aux
grep 'python csp_build.py'
head -1
tr -s ' '
cut -d " " -f2
xargs kill
lsof -n -i:3000
grep LISTEN
awk '{ print $2 }'
uniq
xargs kill -9
screen -S 23536 -X quit
find /proc -user myuser -maxdepth 1 -type d -mtime +7 -exec basename {} \;
xargs kill -9
kill `pstree -p 24901
sed 's/(/\n(/g'
grep '('
sed 's/(\(.*\)).*/\1/'
tr "\n" " "`
nl -n ln log.txt
sed ...
csvtopretty filename.csv
less -S
fold -80 your_file
more
grep -o '1.' yourfile
head -n2
md5sum *.java
sort
uniq -d -w32
md5sum *.java
sort
uniq -d
find . -type f -ls
sort +7
head -1
find . -name "*.pl" -exec ls -ld {} \;
find . -name *.txt -exec ls {} ;\
find . -name *.txt
egrep mystring
find . \( ! -name . -prune \) -name "*.c" -print
find /etc/nginx -name '*.conf' -exec echo {} ;
find . -name "*.html" -exec grep -lR 'base\-maps' {} \;
xargs grep -L 'base\-maps\-bot'
find . -name "*.log" -exec echo {} \;
find . \( -size 100 -o -size -100 \)  -name '*.html' -exec  ls -l {} \;  2> /dev/null
ps -o pid --no-headers --ppid $PARENT_PID
ls -1
xargs readlink -f
md5sum *.txt
sort
perl -ne '($y,$f)=split; print "$f\n" unless $y eq $x; $x=$y'
find  . -name '*.bak' -ls
find / \! -name "*.c" -print
find . -type f \( -name '*.c' -or -name '*.h' -or -name '*.cpp' \) -exec ls {} \;
find . -name *.gif -exec ls {} \;
find /usr /home  /tmp -name "*.jar"
find /usr /home  /tmp -name "*.jar" 2>/dev/null
find /home/bluher -name \*.java
find / -name "*.jpg" -print
find $HOME -name '*.ogg' -type f -exec du -h '{}' \;
find /home/kibab -name '*.png' -exec echo '{}' ';'
find <path> -xdev -type f -name *.txt -exec ls -l {} \;
find . -type f -name '*.txt' -exec egrep -l pattern {} \;
find . -name "*.txt" -type f -print
xargs file
grep "foo="
cut -d: -f1
find /etc -name "*.txt" -exec ls -l {} \;
find /etc -name "*.txt" -ls
find /etc -name "*.txt"
xargs -I {} ls -l {}
find /etc -name "*.txt"
xargs ls -l
ls -l $(find /etc -name "*.txt" )
find . -name "*.txt" -exec $SHELL -c 'echo "$0"' {} \;
find . -name "*.txt" -print
find . -name '*.txt' -exec echo "{}" \;
find . -name *.txt -exec ls {} \;
find . -name '*.txt' -print0
xargs -0 -n 1 echo
find / \( -type f -or -type d \) -name \*fink\* -ls
find . -name "*fink*"
xargs ls -l
find . \( -name '*jsp' -o -name '*java' \) -type f -ls
find . -name '*.[ch]' -print0
xargs -r -0 grep -l thing
find . -name '*.[ch]'
xargs grep -l thing
find . -name *.gif -exec ls {} \;
find . -name "*.jpg" -exec ls {} \;
find . -name "*.jpg" -print0
xargs -0 ls
find . -name "*.jpg" -exec ls {} +
find . -name .svn -exec echo {} \;
find . -name .svn -exec ls {} \;
more /etc/hosts
grep '[[:space:]]*'`hostname`'[[:space:]]*'
awk '{print $1}'
more /etc/hosts
grep `hostname`
awk '{print $1}'
find /etc -type f -exec cat '{}' \;
tr -c '.[:digit:]' '\n'
grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
find / -type f \( -perm -4000 -o -perm -2000 \) -ls
find . -name 'VPN_CALLRECORD_20140409*' -type f
xargs ls -lhrt
awk '{print $9}' > log.txt
crontab -l
grep -v "^#"
awk '{print $6}'
find /home/jassi/ -name "aliencoders.[0-9]+" -exec ls -lrt {} +
awk '{print $9}'
find /home/jassi/ -name "aliencoders.[0-9]+" 2>&1
xargs ls -lrt
awk '{print $9}'
find /home/jassi/ -name "aliencoders.[0-9]+"
xargs -r ls -lrt
awk '{print $9}'
find /home/jassi/ -name "aliencoders.[0-9]+"
xargs ls -lrt
awk print '$9'
find /home/jassi/ -name "aliencoders.[0-9]+"
& xargs ls -lrt
awk '{print $9}'
echo $PATH
tr ':' '\n'
xargs -I {} find {} -maxdepth 1 -type f -perm '++x'
find . -type l -printf "%Y %p\n"
grep -w '^N'
find . -type l -exec test ! -e {} \; -printf '%Y %p\n'
find -L . -type l
xargs symlinks
crontab -l
crontab -l
awk '$1 == "*"
$1 ~ /^[0-9]+$/ && $1 < 15 {print}'
crontab -l
egrep "word"
crontab -l
grep 'word'
cat /etc/passwd
sed 's/^\([^:]*\):.*$/crontab -u \1 -l 2>\&1/'
grep -v "no crontab for"
sh
set
egrep '^[^[:space:]]+ [(][)][[:space:]]*$'
sed -r -e 's/ [(][)][[:space:]]*$//'
find . -type d
find . -type d
find -maxdepth 1 -type d
awk -F"./" '{print $2}'
find . -maxdepth 1 -type d -exec ls -dlrt {} \;
find . -type d -maxdepth 1 -exec ls -dlrt {} \;
find "$topdir" -name '*.py' -printf '%h\0'
xargs -0 -I {} find {} -mindepth 1 -maxdepth 1 -name Makefile -printf '%h\n'
sort -u
find / -type d  -perm -1000  -exec ls -ld {} \; 2> /dev/null
find . -type d -exec ls -dlrt {} \;
find . -empty -exec ls {} \;
find . -type f -empty
find . -maxdepth 1 -empty
find ./in_save/ -type f -maxdepth 1
more
set
env
grep '^\(GO\
HOME=\
PATH=\)'
env
grep '^\(GOBIN\
PATH=\)'
env
grep '^GOROOT'
sudo env
grep USER
env
grep ipo
awk 'BEGIN {FS="="} ; { print $1 } '
env
sed -n /"$USERNAME"/p
env
grep ^PATH
env
awk -F= '/[a-zA-Z_][a-zA-Z_0-9]*=/ { if (!system("[ -n \"${" $1 "+y}\" ]")) print $1 }'
sort
uniq
rsync --list-only --include "*2012*.xml" -exclude "*.xml" serveripaddress::pt/dir/files/ --port=111 > output.txt
find . -iname '.note'
sort -r
tree -L 2 -fi
ls -alrt `pwd`/*
find . -print
xargs ls
tree -ivL 1 /data/
perl -nlE 'say if /\Acommand-[0-9][0-9a-z.]*-setup\z/'
ls -l --time-style=long-iso
sort -k6
find /home -name Trash -exec ls -al {} \;
find -print0
xargs -0 ls
find
xargs ls
ls `pwd`/*
tree -af
find . -type f -size +10000 -exec ls -al {} \;
find . -print -o -name SCCS -prune
find . -mmin -60 -ls
find . -mmin -60
xargs -r ls -l
find . -mmin -60
xargs -r ls -ld
find . -mindepth 1 -mmin -60
xargs -r ls -ld
find /home/bozo/projects -mtime 1
find /home/bozo/projects -mtime 1
find /home/bozo/projects -mtime -1
find /home/bozo/projects -mtime -1
find /var/www -cmin -10 -printf "%c %pn"
ls -1
tr '\n' ','
ls -1b
tr '\n' ';'
ls -m
tr -d ' '
tr ',' ';'
file *
grep ASCII
find / -newer ttt -user wnj -print
find / -type f -name "*" -newermt "$newerthan" ! -newermt "$olderthan"  -printf '%T@ %p\n'
sort -k 1 -n
sed 's/^[^ ]* //'
find / -type f -name "*" -newermt "$newerthan" ! -newermt "$olderthan" -printf "%T+\t%p\n"
sort
awk '{print $2}'
find / -type f -name "*" -newermt "$newerthan" ! -newermt "$olderthan" -ls
find / \! \( -newer ttt -user wnj \) -print
find / \( -newer ttt -or -user wnj \) -print
find . -maxdepth 2  -type f -exec ls -l {} \;
find . -maxdepth 2  -type f -print0
xargs -0 -n1 ls -l
find test -print
grep -v '/invalid_dir/'
find /hometest -name Trash -exec ls -s {} \;
find /myfiles -exec ls -l {} ;
find /var/ -size +10M -exec ls -lh {} \;
find /var/ -size +10M -ls
find . -path './src/emacs' -prune -o -print
find . -print0
xargs -0 -l -i echo "{}";
find . -type f -print
xargs ls -l
find . -size +1000k
find -newermt "mar 03, 2010 09:00" -not -newermt "mar 11, 2010" -ls
find ! -newermt "apr 01 2007" -newermt "mar 01 2007" -ls
find -mmin +60
find -newermt "mar 03, 2010" -ls
find -newermt yesterday -ls
find -mmin 60
find . -mmin 60 -print0
xargs -0r ls -l
find . -mmin 60
xargs '-rd\n' ls -l
find . -mmin -60
xargs ls -l
find . -name '*foo*' -exec ls -lah {} \;
find . -name FOLDER1 -prune -o -name filename -print
find . -size +10000c -size -32000c -print
find . -type f -atime +30 -print
find /home/musicuser/Music/ -type f  -iname "*$1*" -iname "*$2*" -exec echo {} \;
find $ARCH1 -ls
find $FULFILLMENT -ls
find . -type f
xargs ls
find -E . -type f -regex '.*(c
h
cpp)$' -exec ls {} \;
find . -type f -regex '.*\(c\
h\
cpp\)' -exec ls {} \;
find . -type f -regex '.*\.\(c\
h\
cpp\)' -exec ls {} \;
find . -type f -size +10000000 -print
xargs ls -ld
more
find . -size +10M -exec ls -ld {} \;
find . -type f
xargs ls -lS
head -20
awk '{print $9, $5}'
find . -type f -printf '%s %p\n'
find . -type f -print0
xargs -0 ls
find `pwd` -mtime -1 -type f -print
find $(pwd)/ -type f
find `pwd` -name .htaccess
find . -name "someFile" -printf "%p:%T@\n"
sort -t : -k2
find / -type f -name "*" -newermt "$newerthan" ! -newermt "$olderthan" -printf "%T+\t%p\n"
sort
find * -type f
xargs md5sum
sort
uniq -Dw32
find * -type f -print -o -type d -prune
find / -print
find $dir_name -size $sizeFile -printf '%M %n %u %g %s %Tb %Td %Tk:%TM %p\n'
find /data1/Marcel -size +1024 \( -mtime +365 -o -atime +365 \) -ls
find /data1/Marcel -size +1024  \( -mtime +365 -o -atime +365 \) -ls -exec file {} \;
find /myfiles -exec ls -l {} ;
find -ls
find .
find . -ls
find . -print
find
perl -lne 'print quotemeta'
xargs ls -d
find . -ls > /tmp/files.txt
find . -ls
tr -s ' ' ,
find -print0
xargs --null
find . -regextype posix-egrep -regex ".+\.(c
cpp
h)$" -print0
xargs -0 -n 1 ls
find . -regextype posix-egrep -regex ".+\.(c
cpp
h)$"
xargs -n 1 ls
find . -regextype posix-egrep -regex '.+\.(c
cpp
h)$' -print0
grep -vzZ generated
grep -vzZ deploy
xargs -0 ls -1Ld
find . -regextype posix-egrep -regex '.+\.(c
cpp
h)$' -not -path '*/generated/*' -not -path '*/deploy/*' -print0
xargs -0 ls -L1d
find . -ls
awk '{printf( "%s,%s,%s,%s,%s,%s,%s,%s %s %s,%s\n", $1, $2, $3, $4, $5, $6, $7, $8, $9, $10, $11 )}'
find . -ls
awk 'BEGIN{OFS=","}$1=$1'
find . -name 'FooBar' -print0
xargs -0
find . -print0
grep --null 'FooBar'
xargs -0
find . -type f -fprintf /tmp/files.txt "%i,%b,%M,%n,%u,%g,%s,%CY-%Cm-%Cd %CT,%p\n"
find ~/Library -name '* *' -exec ls {} \;
ls
tr  "\n" " "
set
grep " () $"
cut -d' ' -f1
set
grep " ()"
find `pwd` -iname ".*" -type f > all-hidden-files.txt
find . -maxdepth 1 -type f -name '.*' -printf '%f\0'
find -depth -type d
while read dir;  do [[ ! $prev =~ $dir ]] && echo "${dir}" ; prev="$dir"; done
find -depth -type d
sed 'h; :b; $b; N; /^\(.*\)\/.*\n\1$/ { g; bb }; $ {x; b}; P; D'
find . -type d -execdir sh -c 'test -z "$(find "{}" -mindepth 1 -type d)"
echo $PWD/{}' \;
find . -type d -links 2
for dir in $(find -depth -type d); do [[ ! $prev =~ $dir ]]
echo "$dir" ; prev="$dir"; done
saveIFS=$IFS; IFS=$'\n'; for dir in $(find -depth -type d ); do [[ ! $prev =~ $dir ]]
echo "${dir}" ; prev="$dir"; done; IFS=$saveIFS
find -depth -type d
while read dir;  do [[ ! $prev =~ $dir ]] && echo "${dir}" ; prev="$dir"; done
find -depth -type d
sed 'h; :b; $b; N; /^\(.*\)\/.*\n\1$/ { g; bb }; $ {x; b}; P; D'
find . -type d -execdir sh -c 'test -z "$(find "{}" -mindepth 1 -type d)"
echo $PWD/{}' \;
find . -type d -links 2
find . -type d
sort
awk '$0 !~ last "/" {print last} {last=$0} END {print last}'
find -maxdepth 1 -type d
while read dir; do echo $dir; echo cmd2; done
mount
mount -l
grep 'type nfs'
sed 's/.* on \([^ ]*\) .*/\1/'
mount -l -t nfs4
find . -type f ! -size 0
find ~/junk   -name "*" -exec ls -l {} \;
ls -d */
cut -f1 -d'/'
find /data/ -name 'command-*-setup'
sort -t - -V -k 2,2
find . -name '*.php' -print0
xargs -0 wc -l
sort -nr
egrep -v "libs
tmp
tests
vendor"
less
ps -ef
find / -type f -user root -perm -4000 -exec ls -l {} \;
find -type f -mtime -60
find . -mmin -60 -type f -exec ls -l {} \;
find . -mmin -60 -type f -ls
find . -mmin -60 -type f
xargs ls -l
find . -type f -mmin -60 -print0
xargs -r0 ls -l
find . -type f -mmin -60
xargs -r ls -l
find /var/www -cmin -10 -type f -printf "%c %pn"
find ~ -type f -mmin -90
xargs ls -l
find ~ -type f -mtime +1825
xargs -r ls -l
find ~ -type f -mtime +1825
xargs ls -l
find / -type f -exec echo {} \;
find . -type f -exec ls -l '{}' \;
find . -type f -print0
xargs -0 ls -l
find . -type f
xargs ls -l
find . -mtime 0 -type f -ls
find . -mmin -60 -type f -exec ls -l {} +
find /usr /bin /sbin /opt -name "$1*" -type f -ls
find -type f -mtime 61 -exec ls -ltr {} \;
find . -type f -exec grep -li '/bin/ksh' {} \;
find . -type f -print
xargs grep -li 'bin/ksh'
find . -type f -print
xargs -n 1
find . -type f -print0
xargs -0 -n 1
find . -type f -print0
xargs -0 ls -l
find . -type f
xargs ls -l
screen -ls
find . -type l
xargs -I % ls -l %
grep targetfile.txt
find . -name "*.c"
xargs -n3
find . -name "*.c"
xargs -n3 echo
find . -maxdepth 1 -empty
find . -type l
find -name '*.class' -printf '%h\n'
sort -u
who
grep "$(tty
sed 's:/dev/::')"
env
grep ".*X.*"
env
awk -F "=" '{print $1}'
grep ".*X.*"
env
awk -F= '{if($1 ~ /X/) print $1}'
find ~
find . -empty -exec ls {} \;
comm -12 <(find ~/bin/FilesDvorak/.* -maxdepth 0) <(find ~/.PAST_RC_files/.*)
env -i
find /prog -type f -size +1000 -print -name core -exec rm {} \;
find /prog -type f -size +1000 -print -name core -exec rm {} \;
find /ghi /jkl -type f -name abc.def 2> /dev/null -exec ls {} \; -exec cat {} \;
find . -type d
sort
awk '$0 !~ last "/" {print last} {last=$0} END {print last}'
comm -3 <(sort -un f1) <(sort -un f2)
tr -d '\t'
od -cvAnone -w1
cat <(ls 1
sort -u) <(ls 2
sort -u)
uniq -d
$(cat myfile)
ls
more
crontab -l
find . -iname "*.jar"
xargs -n1 zipinfo
find . -iname "*.jar"
xargs zipinfo
find . -name "*.jar" -exec zipinfo {} \;
ls -1p
grep '/$'
sed 's/\/$//'
ls -d */
sed 's
[/]
g'
find . -type d
du -sh */
sort -n
du -a --max-depth=1
sort -n
du -h --max-depth=0 *
sort -hr
du -smc *
sort -n
du -s *
sort -n
pwd
cut -b2-
tr '/' '\n'
pwd
cut -f 1- -d\/ --output-delimiter=$'\n'
grep -o . file
sort -f
uniq -ic
grep -o . filename
tr '[:upper:]' '[:lower:]'
sort
uniq -c
sort -nr
grep -o . file
sort
uniq -c
grep -o . filename
sort
uniq -c
sort -nr
find . -depth -empty -type d
set
grep -P '^\w*X\w*(?==)'
grep -oP '(?<==).*'
set
grep -P '^\w*X\w*(?==)'
env
sed 's/;/\\;/g'
set
cut -d= -f1
grep X
set
grep -oP '^\w*(?==)'
grep X
set
awk -F "=" '{print $1}'
grep ".*X.*"
set
grep -oP '^\w*X\w*(?==)'
find . -type d -print -exec bash -c 'find {} -type f -depth 1 -perm +0111
sort -r' \;
find . -type d
sort
xargs -n1 -I{} bash -c "find {} -type f -maxdepth 1 -executable
sort -r"
find `pwd` -perm 111 -type f
sort -r
xargs -n1 -I{} sh -c "dirname {};basename {}"
awk '/^\// {dir=$0 ; if (dir != lastdir) {print;lastdir=dir}} !/^\// {print}'
find `pwd` -group staff -exec find {} -type l -print ;
find . -perm /111 -type f
sed 's#^./##'
sort
diff -u .gitignore -
screen -ls
gzip -l $i
gzip -l compressed.tar.gz
ls -ald `which c++`
tree -L 2
find . -print
xargs ls -gilds
find ~/junk  -name 'cart[1-6]' -exec ls -l {} \; 2> /dev/null
find . -name "*.html"
find /path/to/directory -type f -size +1024k -exec ls -lh {} \;
awk '{ print $8 ": " $5 }'
comm -23 <(ls dir1
sort) <(ls dir2
sort)
sort <(ls one) <(ls two)
uniq -u
sort <(ls one) <(ls two)
uniq -d
find . \( ! -name . -prune \)
find . \( -path './*' -prune \)
find -ls
find . -not -iwholename '*/.git/*'
find . -size 1234c
md5sum *
sort
uniq -w32 --all-repeat=separate
awk '{print $2}'
find . -exec echo {} ;
find . -perm 766 -exec ls -l {} \;
find /var/ -size +10M -exec ls -lh {} \;
find /var/ -size +10M -ls
find /var/log -size +10M -ls
find /tmp /var/tmp -size +30M -mtime 31 -ls
find /tmp /var/tmp -size +30M -mtime 31 -print0
xargs -0 ls -l
find . -size +9M
find `pwd` -name "accepted_hits.bam"
xargs -i echo somecommand {}
find . -size -9k
find -name .git -prune -o -exec git log --pretty=tformat:'' --numstat --follow --find-copies-harder --reverse {} ';'
cut -f3-
grep '.* => .*'
sort <(cd $CURR_DIR && find . -type f -ctime $FTIME) <(cd $CURR_DIR && find . -type f -atime $FTIME) <(cd $CURR_DIR && find . -type f -mtime $FTIME)
uniq
find ${CURR_DIR} -type f \( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \) -printf "./%P\n"
find . -type f -exec ls -s {} \;
sort -n -r
(find . -type f -ctime $FTIME && find . -type f -atime $FTIME && find . -type f -mtime $FTIME)
sort
uniq
ls -b
find / -mindepth 3  -name "*log"
find . -type f
xargs ls -lS
head -20
find . -name something -print
head -n 5
find . -type f -name "*.txt" ! -path "./Movies/*" ! -path "./Downloads/*" ! -path "./Music/*" -ls
find -type f
grep -P '\w+-\d+x\d+\.\w+$'
sed -re 's/(\s)/\\\1/g'
xargs ls -l
find /somelocation/log_output -type f -ctime +40 -exec ls -l {} \;
joblist=$(jobs -l
tr "\n" "^")
find /usr/pcapps/ -mount -type f -size +1000000c
perl -lpe ' s{ }{\\ }g '
xargs ls -l
sort +4nr
head -200
find . -mindepth 2 -maxdepth 2 -type d -ls
find . -mindepth 2 -maxdepth 2 -type d -printf '%M %u %g %p\n'
find . -type f -not -name '.*' -mtime +500 -exec ls {} \;
find . -maxdepth 1 -type d
while read -r dir; do printf "%s:\t" "$dir"; find "$dir" -type f
wc -l; done
sync --list-only --include "*2012*.xml" -exclude "*.xml" serveripaddress::pt/dir/files/ --port=111
awk '{ $1=$2=$3=$4=""; print substr($0,5); }' >output.txt
find . -maxdepth 1 -empty -not -name ".*"
find . -type f -iname "*.php"  -exec file "{}" +
grep CRLF
find /var/www
find /var/www
more
find . -type f  -perm 777 -exec ls -l {} \;
find . -type f  -perm a=rwx -exec ls -l {} \;
find / -type f -user root -perm -4000 -exec ls -l {} \;
screen -ls
screen -ls
screen -r
screen -list
find . -maxdepth 1 -type d -exec ls -ld "{}" \;
find . -maxdepth 1 -type d -print0
xargs -0 ls -d
find . -name '*.py' -exec bash -c 'test -f $(dirname "$1")/Makefile' -- {} \; -print
du -a /var
sort -n -r
head -n 10
find teste1 teste2 -type f -exec md5 -r {} \;
sort
find /ghi /jkl -type f -name abc.def 2> /dev/null -exec grep -H ^# {} \;
ls "`pwd`/file.txt"
ls /usr/bin
more
more <( ls /usr/bin )
find . -path ./src/emacs -prune -o -print
find . -path ./dir1  -prune -o -print
find . -path ./dir1\*  -o -print
find . -path ./dir1\*  -prune -o -print
find . -print -name dir -prune
echo $(ls $(pwd))
find /path -type f -iname "*.ext" -printf "%h\n"
find $PWD -name "file.ext" -exec sh -c 'echo $(dirname {})' ';'
find . -name "file.ext" -execdir pwd ';'
find `pwd` -name "file.ext" -exec dirname {} \;
find `pwd` -name file.ext
xargs -l1 dirname
mount
grep '^/dev/'
sed -E 's/([^ ]*) on ([^ ]*) .*/"\2" is located on "\1"/'
crontab -u apache -l
find . -type f -print
xargs agrep -2 -il '^Subject:.*unique subject'
find . -type f -print
xargs grep -il '^Subject:.*unique subject'
find . -type f -print0
xargs -0 grep -il '^Subject:.*unique subject'
find . -name bin -prune -o -name src -prune -o -type f -print
xargs egrep -il '^From:.*unique sender'
gzip -l archive.tar.gz
find /etc -type f -print
xargs grep -il old1\.old2\.co\.com
find /etc -type f -print
xargs grep -il '128\.200\.34\.'
find
xargs -I {} bash -c '(([[ -f "{}" ]] && grep -l "my key phrase" "{}")
([[ "{}" =~ "my key phrase" ]] && echo {}))'
find /PATH_to_SEARCH -ls
sort -n
awk '!seen[$1]++'
tree -dfi -L 1 "$(pwd)"
tree -dfi "$(pwd)"
find . -type f -ls
sort -nrk7
head -1 #unformatted
find . -type f -name '*.gz' -printf '%s %p\n'
sort -nr
head -n 1
find /foldername
sort -n
tail -1
find $DIR -type f -printf "%T@ %p\n"
sort -n
cut -d' ' -f 2
tail -n 1
find `pwd` -name "file.ext" -printf "%f\n"
find . -type f -exec basename {} \;
find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n'
find . -mindepth 1 -maxdepth 1 -type d -printf "%P\n"
echo "The quick brown fox jumps over the lazy dog"
grep -o .
sort
uniq -c
sort -nr
find -type f -exec grep -l "texthere" {} +
find . -type f
grep -o -E '\.[^\.]+$'
sort -u
find / -name *.class -printf '%h\n'
sort --unique
find /root_path -type f -iname "*.class" -printf "%h\n"
sort -u
cut -d/ -f1-2
cut -d/ -f2-
sort
uniq -c
cut -f $FIELD *
sort
uniq -c
sort -nr
getent group <groupname>
cut -d: -f4
tr ',' '\n'
find /usr/bin  -type l  -name "z*" -exec ls  -l {} \;
find /usr/bin -type  l  -name "z*" -ls
md5sum *.txt
cut -d ' ' -f 1
sort -u
fold -w3 "$1"
sort
uniq -c
sort -k1,1nr -k2
ssh -fNR 1234:localhost:22 root@123.123.123.123
ls -1 /tmp/hashmap.$1
ls -d !(*.[ch])
ls -d !(*@(.c
.h))
ls -d /home/alice/Documents/*/
ls -d */
ls -d ./*/
ls !(*foo)
ls !(b*)
ls /home/dreftymac/*
ls -1
perl -pe 's/\n$/some_delimiter/'
ls -1
paste -sd "," -
ls -1
tr '\n' ','
sed 's/,$/\n/'
ls -m
ls
perl -F'\n' -0777 -anE 'say join ",", @F'
ls
sed '$!s/$/,/'
tr -d '\n'
ls
xargs -I {} echo {},
xargs echo
ls -1
awk 'ORS=" "'
ls -1
perl -l40pe0
ls -l /lib*/ld-linux*.so.2
apropos -r '.*'
ls -mR *
sed -n 's/://p'
tmux ls
ls -d */
cut -f1 -d'/'
ls -d */
sed 's
[/]
g'
ls -d ./*/                     ### more reliable BSD ls
ls -d -- */                    ### more reliable GNU ls
ls -d1 */
tr -d "/"
ls /home/dreftymac/
yum check-update
awk 'p; /Updated packages/ {p=1}'
yum check-update
awk '{if($5 ~ /updates/){print $1}}'
tr '\n' ','
ls -d -1 $PWD/**/*
zless MyFile
$ ls
yum -v repolist enabled
ls -l /proc/self/fd/
yum list installed  --disablerepo="*" --enablerepo="fedora*"
ls -l /bin/echo
pstree -p 1782
sed 's/-/\n/g'
sed -n -e 's/.*(\([0-9]\+\)).*/\1/p'
tmux list-sessions
bind -f ~/.inputrc
find $HOME -iname '*.ogg' -size +100M
find $HOME -iname '*.ogg' -type f -size -100M
find /usr/share/doc -name "copyright"
find . -name "*.csv"
find . -name "*.csv" -print
find . -name "*.csv" -print0
find . -type f -name "*.csv"
find . -name '*.mov'
find . -name "*.txt"
find . -name '*.txt
find . -name "*.txt"
find $HOME -iname '*.ogg' -atime +30
find ~ -name readme.txt
find . -name "needle.txt"
find -not -name "*testfileasdf*"
find -name "*testfile*"
find -iname "*TESTFILE*"
find . -maxdepth 4 -name 'restore.php'
find / -name passwd
find / -samefile passwd
find . -inum 211028 -exec mv {} newname.dir \;
find -name file1
find / -path /proc -prune -o -nouser -o -nogroup
find /u/bill -amin +2 -amin -6
find $HOME -atime +30
find . -ctime -1 -print
find . -user my_user -perm -u+rwx
find /var/www -name logo.gif
file -L $(python -c 'import sys; print(sys.executable)')
find /usr -type l
find lpi104-6 research/lpi104-6 -type l
find / -name httpd.conf
find / -path /proc -prune -o -perm -2 ! -type l -ls
libdir=$(dirname $(dirname $(which gcc)))/lib
awk -F, 'NR==1 {gsub(/"/,"",$3);print $3}' "$(dirname $(readlink -f $(which erl)))/../releases/RELEASES"
which bzip2
find /home -type f -size +100M -delete
ssh -i ./middle_id.pem -R 22:localhost:2222 middleuser@middle.example.org
ssh -i ./device_id.pem -p 2222 deviceuser@middle.example.org
ssh -i ~/path/mykeypair.pem ubuntu@ec2-XX-XXX-XXX-XXX.us-west-2.compute.amazonaws.com
screen -d -m -L python test.py
ssh -X whoever@whatever.com
ssh -q $HOST "[[ ! -f $FILE_PATH ]]
touch $FILE_PATH"
ssh -i id_rsa host
ssh -i keyFile user@host bash -c "\"nohup ./script arg1 arg2 > output.txt 2>&1 &\""
echo 'echo "Bash version: ${BASH_VERSION}"'
ssh -q localhost bash
ssh -At gw ssh -A app1
find -name filename
find / -maxdepth 2 -name testfile.txt
find . -name “*.jpg”
find / -name “*.jpg”
find / -mindepth 3  -name "*log"
find / -maxdepth 3  -name "*log"
find / -perm /g=s
find / -perm +4000
find .  -type f -print
xargs file
grep -i text
cut -fl -d:
xargs grep regexp
git ls-files
xargs file
grep "ASCII"
cut -d : -f 1
xargs wc -l
find / -name 'my*'
find -mtime +2
find -mtime +2 -mtime -5
find -name Cookbook -type d
find /usr /home -name Chapter1 -type f
find . -perm -070 -print
find / -perm +6000 -type f
find  / -name "[a-j]*" -print
find . -name "search"
find . -type f  -perm 777 -exec ls -l {} \;
find . -type f  -perm a=rwx -exec ls -l {} \;
find /var/spool/postfix/{deferred,active,maildrop,incoming}/ -type f
find /home/dm -name "*uniform*"
find . \( -name "my*" -o -name "qu*" \) -print
/usr/sbin/host `hostname`
IP=$(dig +short myip.opendns.com @resolver1.opendns.com)
finger vivek
finger `whoami`
chmod +x bar
chmod +x file.sh
mkdir -p $(seq -f "weekly.%.0f" 0 $WEEKS_TO_SAVE)
mkdir $(seq -f "$HOME/Labs/lab4a/folder%03g" 3)
mkdir $(printf "$HOME/Labs/lab4a/folder%03g " {0..3})
mkdir ~/Labs/lab4a/folder{1,2,3}
mkdir ~/Labs/lab4a/folder{1..3}
mkdir -p folder$( seq -s "/folder" 999 )1000
dig stackoverflow.com
dig -f /path/to/host-list.txt
find dir/ -name '*.txt'
tar -c --files-from=-
bzip2 > dir_txt.tar.bz2
wget --post-data="PiIP=$(hostname -I)" http://dweet.io/dweet/for/cycy42
ls -d */
xargs -iA cp file.txt A
echo dir1 dir2 dir3
xargs -n 1 cp file1
cp -R SRCFOLDER DESTFOLDER/
cp -r dir1/ ~/Pictures/
cat /dev/urandom
tr -dc 'a-zA-Z0-9'
fold -w 32
head -n 1
xargs mkdir
mkdir $(cat /dev/urandom
tr -dc 'a-zA-Z0-9'
fold -w 32
head -n 1)
for i in `find . -type d`; do mkdir -p /tmp/tar_root/`echo $i
sed 's/\.\///'`; done
find .
grep -E -v '\.png$
\.class$'
vim -
find .
grep -v "\.png$"
grep -v "\.class$"
vim -
find . -type f -noleaf -links +1 -printf "%n %i %f\t%h\n"
sort
less
find . -type d
xargs -I "{x}" mkdir "{x}"/new-dir
find . -maxdepth 1 -type d
xargs -I "{x}" mkdir "{x}"/new-dir
find ~ -type f \( -iname '*.mp3' -o -iname '*.ogg' \) > mynewplaylist.m3u
find . -type d -print0
xargs -0 chmod go+rx
find . -type f -print0
xargs -0 chmod go+r
find bugzilla -type d -exec chmod 775 {} \;
find dir/ -name '*.txt'
tar -c --files-from=-
bzip2 > dir_txt.tar.bz2
mkdir -p es/LC_MESSAGES
mkdir --parents ./es_MX.utf8/LC_MESSAGES
mkdir "$@"
sed -e"s/mkdir: created directory /$USER created folder /"
mkdir -v "$@"
sed 's/mkdir: created directory /jar-jar: yea, weesa gotta /'
mkdir --parents ./es_MX.utf8/LC_MESSAGES
mkdir /tmp/A /tmp/B /tmp/C "/tmp/ dir with spaces"
mkdir 3/foo 3/bar 3/baz
mkdir Labs/lab4a/{folder1,myfolder,foofolder}
mkdir a b c d e
mkdir -p a/b/c
mkdir bravo_dir alpha_dir
mkdir -p es/LC_MESSAGES
mkdir foo bar
mkdir -p foo/bar/baz
mkdir mnt point
mkdir -p project/{lib/ext,bin,src,doc/{html,info,pdf},demo/stat/a}
mkdir -p tmp/real_dir1 tmp/real_dir2
mkdir -p ~/foo/bar/baz ~/foo/bar/bif ~/foo/boo/bang
mkdir -p path2/{a..z}
mkdir -p $(echo -e $1
sed $'s/\r//')
cat a.txt
grep /
sed 's
/[^/]*$
'
sort -u
xargs -d $'\n' mkdir -p
mkdir -p `cut -f2 -d"&" filetypes.txt
sed 's/[ ,:]//g'
sort -u`
mkdir -p ${raw_folder} ${split_folder}
xargs -n 1 dirname <somefile.txt
xargs mkdir -p
while read line; do mkdir -p "${line%/*}"; done < infile
find src/ -type d -exec mkdir -p dest/{} \;
cat folder_list.txt
xargs mkdir
cat file1
xargs -I {} dirname "{}"
sort -u
xargs -I{} mkdir -p "{}"
find . -type f -iname \*.mov -printf '%h\n'
sort
uniq
xargs -n 1 -d '\n' -I '{}' mkdir -vp "/TARGET_FOLDER_ROOT/{}"
mkdir -p $2
mkdir -p "$TARGET_PATH"
mkdir -p /my/other/path/here
mkdir -p /my/other/path/here/
mkdir -p ./some/path
mkdir -pv /tmp/boostinst
mkdir -p /tmp/test/blah/oops/something
mkdir -p directory{1..3}/subdirectory{1..3}/subsubdirectory{1..2}
mkdir -p x/p/q
mkdir -p `dirname /full/path/to/file.txt`
mkdir /cpuset
sudo mkdir /data/db
mkdir /etc/cron.15sec
mkdir /etc/cron.5minute
mkdir /etc/cron.minute
mkdir /path/to/destination
mkdir /tmp/foo
mkdir /tmp/googleTestMock
rsync -aq --rsync-path='mkdir -p /tmp/imaginary/
rsync' file user@remote:/tmp/imaginary/
mkdir /tmp/new
sudo mkdir /var/svn
mkdir TestProject
mkdir aaa
mkdir aaa/bbb
mkdir alpha_real
mkdir backup
mkdir certs/
mkdir destdir
mkdir -p dir
mkdir dir1
mkdir -m 777 dirname
mkdir foo
mkdir -p foo
mkdir mybuild
mkdir new_dir
mkdir saxon_docs
mkdir subdirectory
mkdir tata
mkdir temp
mkdir testExpress
mkdir ~/log
mkdir ~/practice
mkdir ~/public_html
mkdir ~/temp
mkdir -p `file -b --mime-type *
uniq`
mkdir -p -- "$(dirname -- "$f")"
mkdir -p "$FINALPATH"
mkdir -p ~/temp/bluecove/target/
mkdir $dir
mkdir ${archive%.tar*}
mkdir .hiddendir
find debian/fglrx-amdcccle/usr/lib/fglrx/bin/ -type f
xargs chmod a+x
touch .bash_profile
TIMEFORMAT=%R
time ls -l
set -a
paste -sd+ filename
bc
cat FileWithColumnOfNumbers.txt
xargs ruby -e "puts ARGV.map(&:to_i).inject(&:+)"
cat filename
python -c"from fileinput import input; print sum(map(int, input()))"
cat filname
lua -e "sum = 0;for i in io.lines() do sum=sum+i end print(sum)"
sed 's/^/.+/' infile
bc
tail -1
cat file.txt
xargs
sed -e 's/\ /+/g'
bc
cat numbers.txt
php -r "echo array_sum(explode(PHP_EOL, stream_get_contents(STDIN)));"
paste -s -d+ infile
bc
paste -sd+ infile
bc
...
paste -sd+ -
bc
echo $(( $(...
paste -sd+ -) ))
find /directory1/directory2/ -maxdepth 1 -type f
sort
tail -n 5
xargs md5sum
find /home/d -type f -name "*.txt" -printf "%s\n"
awk '{s+=$0}END{print "total: "s" bytes"}'
find folder1 folder2 -iname '*.txt' -print0
du --files0-from - -c -s
tail -1
find /path -iname '*.txt'
perl -lane '$sum += -s $_; END {print $sum}'
find . -name "*.txt" -print0
xargs -0 du -ch
find . -name "*.txt" -print0
xargs -0 du -ch
tail -n1
find . -iname "*.txt" -exec du -b {} +
awk '{total += $1} END {print total}'
time find /usr/src -name "*.html" -exec grep -H "foo" {} ';'
wc -l
time find /usr/src -name "*.html"
xargs grep -l "foo"
wc -l
sort -m a b c d e f g h i j
more
sort -m *.txt
split -d -l 1000000 - output
sort --merge file*.txt
split -l 100000 - sorted_file
sort -m *.$suffix
sort -m _tmp* -o data.tsv.sorted
join -t: <(sort file1) <(sort file2)
join -o 1.1,1.2,1.3,2.1,2.2,2.3 -j2 <(sort -k2 file1) <(sort -k2 file2)
join -t, -o 1.2,2.2,2.3 -a 1 -a 2 -e 'no-match' - <(sort file1.txt)
join -t, -o 1.2,2.2,2.3 -a 1 -e 'no-match' - <(sort file1.txt)
sort -m <(zcat $part0
sort) <(zcat $part1
sort) ...
join -j2 <(sort -k2 file1) <(sort -k2 file2)
paste -d, -s file
paste -s -d","
grep -v '^$'
paste -s -d"," -
join -t, <(sort file1) <(sort file2)
join -1 2 -2 1 text.txt codes.txt
paste file_1 file_2
column -s $'\t' -t
paste file{1,2,3,4}
sed -e 's/\t/ \t/g'
column -t -s$'\t'
join -t, -o 1.1,1.2,2.3 in1 in2
join -t, in1 in2
join -t, -o 1.1,1.2,2.3 -a1 in1 in2
paste <(head -"$lc" current.txt) <(tail -"$lc" current.txt)
column -t -o,
sed -i 's/foo/bar/g' file
sed -i 's/foo/bar/' file
watch -n 0.1
top -p 18884 -p 18892 -p 18919
mount /dev/shm
mount /path/to/device /path/to/mount/location -o loop
mount /path/to/device /path/to/mount/location -o loop -t vfat
mount /tmp/loop.img /mnt/image -o loop
mount /windows
mount -t cpuset none /cpuset/
sudo mount device_name mount_point
sudo mount /dev/xvdf /vol -t ext4
sudo mount /dev/xvdf1 /vol -t ext4
mount -t ntfs -o ro /dev/mapper/myldm /mnt
mount -t ntfs-3g /dev/mapper/myvolume /media/volume
mount -t proc none /var/snmp3/proc
mount --bind /absolute/path/to/some/where/else project1/link1
mount none -t tmpfs /path/to/dir
sudo mount -t vfat -o rw,auto,user,fmask=0000,dmask=0000 /dev/sda7 /mnt/my_partition
mount -o ro,loop,offset=$OFFSET -t auto $IMAGE /media/$DEST
mount -t ntfs
sudo mount -a
sudo mount -o loop /dev/loop0 test
mount -L WHITE /mnt/WHITE
mount -L WHITE /mnt/WHITE -o rw
mount -L WHITE /mnt/WHITE -o rw,uid=test,gid=test
sudo mount -t cifs -o username=me,password=mine //192.168.0.111/serv_share /mnt/my_share
mount -t cifs //server/source/ /mnt/source-tmp -o username=Username,password=password
mount -t smbfs -o soft //username@server/share /users/username/smb/share
mount -t linprocfs none /proc
sudo mount -t vboxsf D:\share_folder_vm \share_folder
sudo mount -t vboxsf myFileName ~/destination
mount -obind /etc /tmp/sarnold/mount_point/
sudo mv $PHANTOM_JS /usr/local/share
mv /usr/bin/openssl /root/
mv -nv caniwrite /usr/local/bin
mv -f file.txt /var/lib/docker/devicemapper/mnt/$CONTAINER_ID/rootfs/root/file.txt
mv -f file.txt /var/lib/docker/aufs/mnt/$CONTAINER_ID/rootfs/root/file.txt
mv -t target file1 file2 ...
sudo mv phantomjs-1.8.1-linux-x86_64.tar.bz2 /usr/local/share/.
mv tobecopied/tobeexclude tobeexclude;
mv tobecopied/tobeexcluded .
find /var/www/ -path '*wp-admin/index.php'
xargs -i sh -c 'mv {} $(dirname {})/index_disabled'
find /var/www/ -path '*wp-admin/index.php' -exec mv {} $(dirname {})/index_disabled
find . -name "*$lower1*" -exec bash -c 'mv "$1" "${1/$2/$3}"' -- {} $lower1 $lower2 \;
find "${S}" -name '*.data' -exec mv '{}' "${S}/data/" \;
find /path/to/folders/ -name \*.emlx -print0
xargs -0 -I {} mv {} ./Messages/
find $sourcePath -type f -mtime +10 -name "*.log"
xargs zip -mT $zipFile -@
find $sourcePath -type f -mtime +10 -name "*.log"
xargs zip -jmT $zipFile -@
find /foo/bar -name '*.mp4' -exec mv -t /some/path {} +
find /foo/bar -name '*.mp4' -print0
xargs -0 mv -t /some/path {}
find "${INPUT_LOCATION}" -name '*.pdf.marker'
xargs -i bash -cx 'pdf=`dirname {}`/`basename {} .marker`;[ -e "$pdf" ]&&{ mv {} "$pdf" "$0";}' "${OUTPUT_LOCATION}"
find $INPUT_LOCATION -name '*.pdf.marker' -exec bash -c 'mv ${0%.marker} $0 $1' {} $OUTPUT_LOCATION \;
find $INPUT_LOCATION -name '*.pdf.marker'
xargs -i bash -c 'mv ${0%.marker} $0 $1' {} $OUTPUT_LOCATION
find ${INPUT_LOCATION} -name '*.pdf.marker' -exec sh -c 'mv $0 `dirname $0`/`basename $0 .marker` $1' {} ${OUTPUT_LOCATION} \;
find ${INPUT}/ -name "*.pdf" -exec mv '{}' '{}'.marker ${OUTPUT} \;
find ${INPUT}/ -name "*.pdf" -exec test -e '{}'.marker \; -exec mv '{}' '{}'.marker ${OUTPUT} \;
find . -iname "*.php~" -exec mv "{}" /mydir +;
find . -iname "*.php~" -exec mv {} /mydir \;
for D in `find . -iname "*.php~"`; do mv ${D} /mydir; done
find . -type d -iname '*foo*' -depth -exec bash -c '     echo mv "$1" "${1//[Ff][Oo][Oo]/BAr}" ' -- {} \;
find . -type d -iname '*foo*' -exec bash -O nocasematch -c '[[ $1 =~ (foo) ]]
mv "$1" "${1//${BASH_REMATCH[1]}/Bar}"' -- {} \;
find /path -type f -name "10*jpg"
sed 's/.*/mv &/'
sed 's/mv \(.*\/\)\(.[^/]*\)/& \120\2/'
sh
find . -name '*~' -print 0
xargs -0 -I % cp % ~/backups
find sourceDir -mindepth 1 -type d  -exec mv -t destDir "{}"  \+
find sourceDir -mindepth 1 -type d  -print0
xargs -0 mv --target-directory=destDir
find ./ -maxdepth 1 -name "some-dir" -type d -print0
xargs -0r mv -t x/
find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -print0
xargs -0 mv -t /path/to/target-dir
find . -type d -exec bash -c 'mv "$1" "${1//foo/Bar}"' -- {} \;
ls -1
grep -v ^$EXCLUDE
xargs -I{} mv {} $TARGET
mv * /foo
mv `ls` /foo
find . -depth=1 -exec mv {} /tmp/blah/ \;
mv * /tmp/blah/
mv `ls` somewhere/
mv `ls *.boo` subdir
mv /mnt/usbdisk/[^l]* /home/user/stuff/.
mv /path/subfolder/* /path/
rsync -a --progress --remove-source-files src/test/ dest
find sourceDir -mindepth 1 -maxdepth 1 -exec mv --target-directory=destDir '{}' +
find sourceDir -mindepth 1 -maxdepth 1 -print0
xargs -0 mv --target-directory=destDir
find sourceDir -mindepth 1 -exec mv "{}" --target-directory=destDir \;
find sourceDir -mindepth 1 -print0
xargs -0 mv --target-directory=destDir
find . ! -name . -prune -exec sh -c 'mv "$@" targetdirectory/' sh  {} +
find . ! -name . -prune -exec sh -c 'shift $1; mv "$@" targetdirectory/' 2 1 {} +
find /path/subfolder -maxdepth 1 -type f -name '*' -exec mv -n {} /path \;
find . -name some_pattern -print0
xargs -0 -I % mv % target_location
find . -name some_pattern -print0
xargs -0 -J % mv % target_location
mv /source/path/{.[!.],}* /destination/path
mv /path/subfolder/{.,}* /path/
cat $i
xargs mv -t dir.$count
find . -type f -iname '*.cpp' -exec mv -t ./test/ {} \+
find . ! -name . -prune -name '*.old' -exec mv {} ../old/ \;
find . ! -name . -prune -name '*.old' -exec sh -c 'mv "$@" ../old/' sh {} +
mv ~/Linux/Old/^Tux.png ~/Linux/New/
grep -L -Z -r 'Subject: \[SPAM\]' .
xargs -0 -I{} mv {} DIR
grep -l 'Subject: \[SPAM\]'
xargs -I '{}' mv '{}' DIR
grep -L -r 'Subject: \[SPAM\]' .
while read f; do mv "$f" out; done
mv $(grep -l 'Subject: \[SPAM\]'
awk -F ':' '{print $1}') your_file
find sourceDir -print0
xargs -0 mv -t destDir
find . -exec mv '{}' ~/play/ \;
find .
xargs -I'{}' mv '{}' ~/play/
mv /path/subfolder/.* /path/
mv wordpress/.* .
nl -n rz ca
awk -vOFS="\t" '/Ca/{$1="#"$2} {$1=$1}1'
sort -k1,1
cut -f2-
find ./ -type f -print
xargs    -i mv -f {} ./newdir
find ./ -type f -print
xargs    -l56 -I {} mv -f {} ./newdir
find . -name "*.c" -print0
xargs -0 -n1  -I '{}' mv '{}' temp
find "$path_to_folders" -name 'm?' -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \; -exec sh -c "mv {}.mbox/*.emlx {}.mbox/Messages" \;
find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'
find /path/to/folders/* -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \;
find /path/to/folders/* -type d  -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \; -exec sh -c "mv {}.mbox/*.emlx {}.mbox/Messages" \;
find $sourcePath -type f -mtime +10 -name "*.log" -exec mv {} $destPath \;
find . -atime +1 -type f -exec mv {} TMP \;
mv server.log logs/$(date -d "today" +"%Y%m%d%H%M").log
find ./ -maxdepth 1 -name "some-dir" -type d -print0
xargs -0r mv -t x/
tmux movew -s 4 -t 3
mv "$2" "`dirname $1`"
mv "/tmp/`basename $1`" "`dirname $2`"
find -maxdepth 1 -name '*.pdf' -exec rm "{}" \;
find . -maxdepth 1 -name "*.pdf" -print0
xargs -0 rm
file $(readlink -f $(type -p rename))
nl -nrz -w9  /etc/passwd
nl -nrz -w9 foobar
nl
nl -s- -ba -nrz
cat files
sort -t- -k2,2 -n
tr '.' ' '
sort -nu -t ' ' -k 1 -k 2 -k 3 -k 4
tr ' ' '.'
sort -nr bb
sort -n out
sort -n
sort -nk 2,2 file.dat
tac
sort -nrk 2,2 file.dat
tac files
sort -t- -k2,2 -n
sort -b -n -k2.4 table
tac temp.txt
sort -k2,2 -r -u
sort -n -k 2
sort -nrk 2,2
scp -3 user@server_b:/my_folder/my_file.xml user@server_b:/my_new_folder/
scp user@server_b:/my_folder/my_file.xml user@server_b:/my_new_folder/
sudo vim `which charm`
ssh -D1080 root@localhost -g
ssh user@host -M -S /tmp/%r@%h:%p -N
ssh user@host -S /tmp/%r@%h:%p
ssh user@host -X
find . -name "*.c" -print
vim -
find . -name '*.java' -exec vim {} +
find . -name '*.java'
xargs vim
find / -name filename -exec nano '{}' \;
mate `which rails`
vi `which yum`
info gcc "option index"
info -O gawk
info gcc --index-search=funroll-loops
info gcc "option index"
info bash 'Basic Shell Features' 'Shell Expansions' 'Filename Expansion' 'Pattern Matching'
tmux
basename "some/unknown/amount/of/sub/folder/file.txt"
basename /foo/bar/stuff
basename testFile.txt.1 .1
sed 's/^,/ ,/' test2.csv
tr -d \"
column -s, -t
diff --new-line-format="" --unchanged-line-format=""  file1 file2
diff file2 file1
grep '^>'
sed 's/^>\ //'
diff --new-line-format="" --unchanged-line-format="" <(sort file1) <(sort file2)
uniq -w12 -c file
awk -F"\t" 'NF>1' file
join -1 2 -2 1 -t, BigFile.csv LittleFile.csv
join -t: selection2.txt selection1.txt
yes
sed -n '200000000,${=;p};200000005q'
awk 'NR==16224, NR==16482-1; NR==16482 {print; exit}' file
awk 'NR==16224, NR==16482' file
echo "foo.tar.gz"
rev
cut -d"." -f1
rev
join -v1 success.txt fail.txt
echo $(basename "$1")
basename "some/unknown/amount/of/sub/folder/file.txt"
basename /EBF/DirectiveFiles/data_report_PD_import_script_ABF1_6
basename /path/to/dir/filename.txt .txt
nl -ba
sed 786q
grep .
awk '{print $2$1}'
yes
echo Hostname=$(hostname) LastChecked=$(date)
echo ${filename%.*}
yes -- "-tcp"
head -n 2
yes -- -tcp
head -n 2
shred -v -n 1 /path/to/your/file #overwriting with random data
shred -v -n 1 -z -u /path/to/your/file
shred -v -n 0 -z -u /path/to/your/file #overwriting with zeroes and remove the file
shred my-existing-file
shred -u $FILE
shred -uzn 35 filename
command
less
ps -eo pcpu,pid,user,args
sort -r -k1
less
make 2>&1
less
lspci -v -v
less
less -S file
od -xcb input_file_name
less
cat BIG_FILE.txt
less
less -p regex file_name
cat -vet file
less
cat -e yourFile
less
objdump --disassemble my-crashing-program
less
less -f <(php -i)
some_command
less -p regex
less -f <(php whatevz.php)
paste -d ' ' file <(rev file)
cat file.json
python -c "import sys, json, jsonpath; print '\n'.join(jsonpath.jsonpath(json.load(sys.stdin), 'store.book[?(@.price < 10)].title'))"
xmllint example.xml --xpath "/config/*/@*"
sed "s
key
\nkey
g"
nl
source <(./script.sh
sed -rn '/volume/{s#/dev/([^[:space:]]+)[[:space:]]+#\1=#;p}')
yes
execute_command
/bin/true "$(seq 1 100000)"
scp -vp me@server:/location/files\*
find . -exec echo {} +
/bin/true $(seq 1 100000)
find /ftp/dir/ -size +500k -iname "*.jpg"
find . -iname "*filename*"
find /var/www/vhosts/*/httpdocs -type f -iwholename “*/wp-includes/version.php” -exec grep -H “\$wp_version =” {} \;
find /home/*/public_html/ -type f -iwholename “*/wp-includes/version.php” -exec grep -H “\$wp_version =” {} \;
rename -n 's/special/regular/' **
rsync -nvraL test/a test/dest --exclude=a/b/c/d
find . -print0
xargs -0
find downloads  -iname "*.gif"
find / -iname TeSt123.txt
find . -name \*.php -type f -exec php -l {} \;
find . -name \*.php -type f -print0
xargs -0 -n1 php -l
find /tmp -name core -type f -print0
xargs -0 /bin/rm -f
source <( sed 's/:\(.*\)/="\1"/' msgs.config )
cat ips
xargs -i% ping -c 2 %
cat ips
xargs -n1 ping -c 2
echo $(seq 254)
xargs -P255 -I% -d" " ping -W 1 -c 1 192.168.0.%
grep -E "[0-1].*?:"
ping -c 1 hostname
grep 192.168.11
grep 'bytes from'
awk '{print $4}'
sed 's/://g'
ping -b 10.10.0.255
echo -e "\n\n\n"
ssh-keygen -t rsa
printf ""
ssh-keygen -b 1024 -f ball -t dsa
cat somedata.txt
"$outfile"
yes
awk 'FNR<4 {print >>"file"; close("file")}  1'
more
program1
tee >(program2) >(program3)
ls
read var
bg %  so it wont die when you logoff
popd
ls
xargs -I {} mv {} Unix_{}
for FILENAME in *; do mv $FILENAME Unix_$FILENAME; done
ls
xargs -i mv {} unix_{}
find * -maxdepth 0 ! -path . -exec mv {} PRE_{} \;
ls
xargs -I {} mv {} PRE_{}
for f in *; do [[ -f "$f" ]]
mv "$f" "unix_$f"; done
nl filename
{ echo foo; cat bar; }
tee bar > /dev/null
ping google.com
xargs -L 1 -I '{}' date '+%+: {}'
history "$@"
tac
nl
tac
sed 's/^\( *\)\([0-9]\)/\1-\2/'
history "$@"
tac
nl
tac
tail -f /path/to/log
perl -pne 'print scalar(localtime()), " ";' > /path/to/log-with-timestamps
ping www.google.com
while read endlooop; do echo "$(date): $endlooop"; done
ping www.google.fr
while read pong; do echo "$(date): $pong"; done
g++ omnitest.cpp -E
less
ssh -n $R_USER@$R_HOST 'touch /home/user/file_name.txt'
echo "Cannot acquire lock - already locked by $(cat "$lockfile")"
comm -13 <(grep '#include' file1
sort) <(grep '#include' file2
sort)
nl
sort -R
cut -f2
head -"${1:-10}"
echo $PATH
awk -F: -f rem_dup.awk
paste -sd:
echo -n $line
od -x
find "$somedir" -maxdepth 0 -empty -exec echo {} is empty. \;
echo -n *Checking Partition Permission* Hostname=$(hostname) LastChecked=$(date)
tail -n +11 /tmp/myfile
echo I am $(whoami) and the program named ls is in $(which ls).
df /mnt/myUSBdisk
grep -q /mnt/myUSBdisk && echo "Mounted"
echo "Not mounted"
echo " RDBMS exit code : $RC  "
tee -a ${LOG_FILE}
df /tmp
grep -q tmpfs && echo "Shared Memory"
echo "Not Shared Memory"
echo "This is   a sentence."
tr -s " " "\012"
echo "Total generated: $(echo "$generated_ports"
sort
uniq
wc -l)."
echo -e "a\nb\ncccccccccccc\nd"
paste - -
column -t
echo "deb http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"
tee -a /etc/apt/sources.list
echo "deb-src http://ppa.launchpad.net/webupd8team/java/ubuntu precise main"
tee -a /etc/apt/sources.list
cat ips
xargs -n1 echo ping -c 2
cat ips
xargs echo ping -c 2
tail -n +1 file1.txt file2.txt file3.txt
cat blah
perl -en '/\xCA\xFE\xBA\xBE/ && print "found"'
echo hello `whoami`
tail -n +1000001 huge-file.log
find /some/dir/ -maxdepth 0 -empty -exec echo "huzzah" \;
cat new.txt
nl
cat new.txt
nl
sed  "/2/d"
cat new.txt
nl
sed  "3d;4d"
echo "on"
tee /sys/bus/usb/devices/usb*/power/level
printf "operator: `finger ${USER}
grep Name:
cut -f3 -d:` \n"
echo "hello world"
echo test=$(cat)
comm -2 file1.txt file2.txt
awk -F'\t' '{print (NF==2?"y":"")}'
yes yes
sed -e 5s/yes/no/ -e 5q
find "$1" -name "?*"
dd bs=$((${#1}+3)) count=1 2>/dev/null
find "$d" -prune -empty -type d
find "$d" -prune -empty
echo -e "HTTP/1.1 200 OK\n\n $(date)"
find -name file -exec echo '-exec is an action so an implicit -print is not applied' \;
find -name file -ok echo '-ok is an action so an implicit -print is not applied' \;
find -name file -okdir echo '-okdir is an action so an implicit -print is not applied' \;
echo -en '111 22 3\n4 555 66\n'
tr ' ' '\t'
if find "`echo "$some_dir"`" -maxdepth 0 -empty
read v; then echo "Empty dir"; fi
if find /some/dir/ -maxdepth 0 -empty
read v; then echo "Empty dir"; fi
if find "`echo "$some_dir"`" -maxdepth 0 -empty
read v; then echo "Empty dir"; else "Dir is NOT empty" fi
find -name file -printf 'Since -printf is an action the implicit -print is not applied\n'
find -name file -exec echo 'This should print the filename twice if an implicit -print is applied: ' {} +
ls -alFt `find . -name "bla.txt"`
rev
cut -d" " -f1
rev
head -1
find ./C -name "*.c"
xargs -n1  echo cp xyz.c
echo 'hello, world'
cat
find "$some_dir" -prune -empty -type d
read && echo empty
echo "not empty"
[ -z "$(find aaa/ -maxdepth 1 -type f)" ]
echo "empty"
cat file
fold -w29
cat file
fold -s -w29
cat file
xargs -n3
find /some/dir/ -maxdepth 0 -empty -exec echo "huzzah" \;
cat -n infile
find /some/dir/ -maxdepth 0 -empty
od -A n -t d -N 1 /dev/urandom
echo {1..9}: 10
tr -d ' '
yes '#'
head -n 10
tr -d '\n'
yes x
head -n 10
printf '%-10s%-10s%-10s%s\n' $(yes x
head -n 10)
yes x
head -10
awk 'BEGIN { RS = "%%%%%%%" } { split($0,a,"\n"); for (i=1; i<length(a); i+=4) print a[i], a[i+1], a[i+2], a[i+3] }'
head -c 1000 /dev/zero
tr '\0' '*'
yes 123456789
head -2
yes
head -3
echo $(yes %
head -n3)
tr -s ' ' < file
cut -d' ' -f4
yes ' '
head -7
tr -d '\n'
dig @ns1.newnameserver domain. a
dig @ns2.newnameserver domain. a
dig @some.other.ip.address domain. a
dig @8.8.8.8 domain. a
ps aux
awk '{print $4"\t"$11}'
sort
uniq -c
awk '{print $2" "$1" "$3}'
sort -nr
ps aux
awk '{print $4"\t"$11}'
sort
uniq -c
awk '{print $2" "$1" "$3}'
sort -nr
grep mysql
who
awk -F '[()]' '/orschiro/{print $(NF-1)}'
grep -v orschiro
uniq
who
sed -e '/orschiro/! d; /pts/! d; s/^.*\(:[0-9.]\+\).*$/\1/p;d'
head -n1
echo $(/usr/sbin/arp $(hostname)
awk -F'[()]' '{print $2}')
hostname -I
cut -d" " -f 1
hostname  -i
hostname --all-ip-address
cut -d ' ' -f1
hostname --ip-address
hostname -I
hostname -I
awk '{print $1}'
hostname -I
cut -d' ' -f1
dig @some.other.ip.address domain. ns
dig @8.8.8.8 domain. ns
ps h -o pid,user -C ssh,sshd
tr -s " "
dig @server hostname.bind ch txt
yes 'http://www.blabla.bla/forum-detail/?ft=72260&fid=34&&pgr='
nl -ba
sed 786q
grep .
awk '{print $2$1}'
od -An -N2 -i /dev/random
echo "$1"
od -xcb
find . -type d -print0
find $HOME -maxdepth 1 -type f -name '.*' -print0
find $root -type d -printf '%p:'
find $root -type d
tr '\n' ':'
find "$root" -name ".[a-z]*" -prune -o -type d -printf '%p:'
find ~/code -type d
tr '\n' ':'
sed 's/:$//'
find ~/code -type d -name '[^\.]*'
tr '\n' ':'
sed 's/:$//'
find ~/code -name '.*' -prune -o -type d -printf ':%p'
find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n'
sort
uniq
tr -d '\n'
find ~/code -type d
sed '/\/\\./d'
tr '\n' ':'
sed 's/:$//'
ps aux
tr -s '[:blank:]'
cut -d' ' -f3
sort ips.txt
uniq -c
sort -bgr
sort ports.txt
uniq -c
sort -r
ls -1
tr '[A-Z]' '[a-z]'
sort
uniq -c
grep -v " 1 "
sort filename
uniq -c
sort filename
uniq -c
sort -nr
sort
uniq -c
sort
uniq -c
sort -n
sort ip_addresses
uniq -c
sort -n ip_addresses.txt
uniq -c
tree
tail -1
find $FULFILLMENT $ARCH1 -exec stat -c '%i,%b,%A,%h,%U,%G,%y,%n' {} \;
find . -type f -ls
echo -ne "$VAR1"
xxd -r -p
od -c
awk -F '\t' '{print $2}' *
sort
uniq -c
sort -nr
echo Aa
od -t x1
printf Aa
od -t x1
echo "$DIREC"
od -c
printf '%0.s-' $(seq 1 $variable)
seq  -f "#" -s '' 10
head -c 100 < /dev/zero
tr '\0' '='
printf %100s
tr " " "="
cat /dev/urandom
tr -dc '. '
fold -w 100
head -1
seq -s % 4
tr -d '[:digit:]'
seq -s= 100
tr -d '[:digit:]'
find . -name “*.jpg”
find . -name *.code
find .
sort -f
uniq -i -d
find . -type f
awk -F/ '{print $NF}'
sort -f
uniq -i -d
find .
sed 's,\(.*\)/\(.*\)$,\1/\2\t\1/\L\2,'
sort
uniq -D -f 1
cut -f 1
find -x data -name "filepattern-*2009*" -print0 > filesOfInterest.txt
find data/ -name filepattern-*2009* -print > filesOfInterest.txt
find /var/log/
find . -print >myfile.sh
find . -maxdepth 1 -type f -print0
find / -newerct '1 minute ago' -print
ls
sort -f
uniq -i -d
diff -q /dir1 /dir2
cut -f2 -d' '
tree -fi
grep -v \>
git whatchanged --all
\grep "\.\.\."
cut -d' ' -f5-
cut -f2-
sort
uniq -c
sort
find sort_test/ -type f
env -i LC_COLLATE=C sort
find sort_test -type f
env -i LC_COLLATE=en_US.UTF-8 sort
find sort_test/ -type f
env -i LC_COLLATE=en_US.utf8 sort
find -L. -type l
who
cut -d' ' -f1
sort
uniq
find /usr/local/etc/rc.d -type f
awk -F/ '{print $NF}'
$ find other -maxdepth 1
find other -maxdepth 1 -printf "%P\n"
diff -dbU0 a b
diff -dbU0 a b
tail -n +4
grep ^-
cut -c2-
diff -burNad teste1 teste2
find /path/to/folders/ -name \*.emlx -print0 > filelist
ping google.com
awk '{ sent=NR-1; received+=/^.*(time=.+ ms).*$/; loss=0; } { if (sent>0) loss=100-((received/sent)*100) } { print $0; printf "sent:%d received:%d loss:%d%%\n", sent, received, loss; }'
seq 2000 65000
sort -R
head -n 1
seq 1 10
sort -R
tee /tmp/lst
cat <(cat /tmp/lst) <(echo '-------')
tac
seq 1 10
sort -R
tee /tmp/lst
cat <(cat /tmp/lst) <(echo '-------')
yes
head -n 10
awk '{printf( "%03d ", NR )}'
yes
head -n 10
awk '{printf( "%03d ", NR )}'    ##for 01..10
yes
grep y
sed 100q
awk '{printf( "%03d ", NR )}'; echo
yes
head -n 100
awk '{printf( "%03d ", NR )}'
yes
head -n 100
awk '{printf( "%03d ", NR )}'   ##for 001...100
find bla -name *.so -print0
sort -rz
find -name '*.jpg'
sort -n
find ~/Music/ -iname 'cover.*' -printf '%h\n'
sort -u
find /folder/of/stuff -type f
sort
find . -type f -name "*.*"
awk -F. '{print $NF}'
sort -u
find . -type f
grep -o -E '\.[^\.]+$'
sort -u
find . -type f
perl -ne 'print $1 if m/\.([^.\/]+)$/'
sort -u
find . -type f
sed -e 's/.*\.//'
sed -e 's/.*\///'
sort -u
find . -type f -name "*.???"
awk -F. '{print $NF}'
sort -u
find . -type f
perl -ne 'print $1 if m/\.([^.\/]+)$/'
sort
uniq -c
sort -n
find . -type f
sed -e 's/.*\.//'
sed -e 's/.*\///'
sort
uniq -c
sort -rn
find . -type f -path '*/.svn*' -prune -o -print
perl -ne 'print $1 if m/\.([^.\/]+)$/'
sort -u
find ~/Music/ -maxdepth 2 -mindepth 2 -type d
sort
find / -name '<name_pattern>' -type d
sort
uniq
seq 10
xargs
seq 10
xargs echo -n
find --help
sed -e 's/\t/_
/g' table.txt
column -t -s '_'
awk '1;!(NR%1){print "-----------------------------------------------------------------------";}'
ping host
awk '{if($0 ~ /bytes from/){print strftime()"
"$0}else print}'
od -cvAnone -w1
sort -b
uniq -c
sort -rn
head -n 20
od -cvAnone -w1
sort -bu
echo "Welcome $(whoami)!"
echo "Welcome `whoami`!"
echo -ne "Welcome $(whoami)!\n"
echo -ne "Welcome `whoami`!\n"
readlink -f PATH
readlink -f YOUR_PATH
readlink -f $(which java)
grep -Eo '([0-9]+-){3}[0-9]+' infile
tr - .
cal -h
cut -c 4-17
tail -n +3
find $root -type d -printf '%p:'
find "$root" -name ".[a-z]*" -prune -o -type d -printf '%p:'
echo "He likes cats, really?"
fold -w1
sort -u
find /proc -print0
xargs -0
find /proc
xargs
find -print0
while IFS= read -rd $'\0' f ; do echo "[$f]" ; done
find /usr/src -not \( -name "*,v" -o -name ".*,v" \) '{}' \; -print
find /proc -exec ls '{}' \;
find /proc -print0
xargs -0
find /proc
xargs
find . -name SCCS -prune -o -print
find . -print -name SCCS -prune
comm -12 <(grep -rl word1 .
sort) <(grep -rl word2 .
sort)
ls -1
paste -sd "," -
find . -type f -print0
tr '\0' ','
find . -type f
paste -d, -s
find / -group name_of_group
find / -size +1000 -mtime +30 -exec ls -l {} \;
find / -type f -exec echo {} - ';' -o -exec echo {} + ';'
find ... -print0
find $WHATEVER -printf "%s %p\n"
getent group
cut -d: -f1
cat report.txt
grep -i error
tac file
awk '/pattern/{print;exit}1'
tac
tac file
sed '/pattern/q'
tac
sed -n '/pattern/!p' file
seq 1 10
perl -e '@x=("")x3;while(<>){print shift @x;push @x,$_}'
seq 1 10
perl -e'@x=<>;print@x[0..$#x-3]'
seq 1 10
perl -ne 'print if ( !eof  )'
perl -ne 'print if ( !eof  )'
perl -ne 'print if ( !eof  )'
seq 1 10
perl -ne 'push @l, $_; print shift @l if @l > 3'
seq 10
tac
sed '1,3d'
tac
who
awk '{print "The user " $1 " is on " $2}'
which -a python
find . -not -path '*/\.*'
grep "$(cat file1.txt)" file2.txt
zcat /var/log/fail2ban.log*
gawk  '/.*Ban.*/  {print $7};'
sort
uniq -c
sort
gawk '{ "geoiplookup " $2 "
cut -f2 -d: "
getline geoip; print $2 "\t\t" $1 " " geoip}'
find
xargs
comm -23 <(find dir1 -type d
sed 's/dir1/\//'
sort) <(find dir2 -type d
sed 's/dir2/\//'
sort)
sed 's/^\//dir1/'
comm -23 <(find dir1 -type f
sed 's/dir1/\//'
sort) <(find dir2 -type f
sed 's/dir2/\//'
sort)
sed 's/^\//dir1/'
comm -23 <(find dir1
sed 's/dir1/\//'
sort) <(find dir2
sed 's/dir2/\//'
sort)
sed 's/^\//dir1/'
cat $1.tmp
sort -u
who
awk '{ print $1, $2 }'
who
cut -d " " -f1,2
df -Ph $PWD
tail -1
awk '{ print $3}'
df .
awk '$3 ~ /[0-9]+/ { print $4 }'
df . -B MB
tail -1
awk {'print $4'}
cut -d'%' -f1
df . -B MB
tail -1
awk {'print $4'}
grep  .[0-9]*
df $PWD
awk '/[0-9]%/{print $(NF-2)}'
echo -e "ALERT - Shell Access on:' `date` `who` '\n\n' `whois $(who
cut -d'(' -f2
cut -d')' -f1)`"
od -a -An -v file
perl -0777ne 's/\n//g,print "$_\n " for /(?:esc
fs
gs
us)?(?:(?!esc
fs
gs
us).)*/gs'
find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
find -mindepth 1 -maxdepth 1 -type d
cut -c 3-
sort -k1n
tail -n 1
xargs -r echo rm -r
ping -c 25 google.com
tee >(split -d -b 100000 - /home/user/myLogFile.log)
my_program
tee >(split -d -b 100000 -)
tail -f /var/log/some.log
grep --line-buffered foo
grep bar
tail -f /var/log/syslog
tail -f file
stdbuf -o0 grep my_pattern
tail -f file
grep --line-buffered my_pattern
yes $1
head -$number
find /home/kibab -name file.ext -exec echo . ';'
basename "$FILE"
cut -d'.' -f-1
set
grep ^fields=\\\
^var=
paste <(cal 2 2009) <(cal 3 2009) <(cal 4 2009)
readlink -f  /path/here/..
readlink -m /path/there/../../
echo 'abcdefg'
tail -c +2
head -c 3
echo "$(comm -12 <(echo "$a"
fold -w1
sort
uniq) <(echo "$b"
fold -w1
sort
uniq)
tr -d '\n')"
find . -type f -exec echo chmod u=rw,g=r,o= '{}' \;
seq $(tail -1 file)
diff - file
grep -Po '.*(?=d)'
history
cat /proc/17709/cmdline
xargs -0 echo
ps
egrep 11383
tr -s ' '
cut -d ' ' -f 4
comm -12 <(echo $a
awk -F"\0" '{for (i=1; i<=NF; i++) print $i}') <(echo $b
awk -F"\0" '{for (i=1; i<=NF; i++) print $i}')
tr -d '\n'
comm -12  <(ls 1) <(ls 2)
comm -12  <(ls one) <(ls two)
comm -12 file1 file2
comm -12 <(sort < a) <(sort < b)
comm -12 <(sort set1) <(sort set2)
comm -12 ignore.txt input.txt
comm -12 <(comm -12 <(comm -12 <(sort file1) <(sort file2)) <(sort file3)) <(sort file4)
cat `find . -name '*.foo' -print`
$ cat 1
cat -vet a
rev domains.txt
cut -d '.' -f 2-
rev
rev file
cat -v -e filename
cat whatever
egrep 'snozzberries
$'
cat /etc/passwd /etc/group
find . -name '*.foo' -exec cat {} \;
cat $(find . -name '*.foo')
find [whatever] -exec cat {} +
find [whatever] -exec cat {} \;
find [whatever] -print0
xargs -0 cat
find [whatever]
xargs cat
find . -type f -exec cat {} \; -print
od -t x1 -An file
tr -d '\n '
xxd -p file
tr -d '\n'
grep -ao "[/\\]" /dev/urandom
tr -d \\n
cat /dev/urandom
tr -dc '. '
fold -w 100
cat list_part*
sort --unique
wc -l
cat /etc/passwd
sed 's/^\([^:]*\):.*$/crontab -u \1 -l 2>\&1/'
sh
grep -v "no crontab for"
date -u -Iseconds
date +%s
set -o
ps  -ef
grep $$
grep -v grep
ps -p $$
echo "( `date -d $B +%s` - `date -d $A +%s`) / (24*3600)"
bc -l
find ./work/ -type f -name "*.sh" -mtime -20
xargs -r ls -l
diff <(fold -w1 <<< "$s") <(fold -w1 <<< "$r")
awk '/[<>]/{printf $2}'
diff -bur folder1/ folder2/
diff "${@:3}" <(sort "$1") <(sort "$2")
tree -d -L 1 -i --noreport
mount
awk '$3 == "/pa/th" {print $1}'
paste --delimiter=\\n --serial *.txt
echo -n "Hello"
od -A n -t x1
echo orange
fold -w 1
echo "abcdefg"
fold -w1
fold -w1 file
pr -4t
sed 's/\s*-\s*//g'
tr -d '\n'
sed '$a\'
fold -w1 file
pr -4t
tr -d '\n\t\- '
sed '$a\'
paste <(paste -d" " f1 f2) f3
paste file file2 file3
sed 's/\t/ /'
paste -d'¤' file1 file2
sed 's,¤, ,g'
paste -d" " file1 file2
paste -d'
' - file3
sed 's,
, ,g'
join -v 1 <(sort file1) <(sort file2)
sort file1.txt file2.txt file2.txt
uniq -u
sort set1 set2
uniq
paste tmp/sample-XXXX.{tim,log}
sort file1 file2
uniq -u
finger -l
grep "Name:"
cut -d ":" -f 3
cut -c 2-
sort
uniq
finger
awk 'NR>1{print $2,$3}'
finger -l
grep "Name:"
tr -s ' '
cut -d " " -f 2,4-
sort
uniq
cat ip_addresses
sort
uniq -c
sort -nr
awk '{print $2 " " $1}'
sort file1 file2
uniq -d
yes $'one\ntwo'
head -10
nl
sort -R
cut -f2-
head -3
ps -u $(whoami) --no-header -o vsz
dc -f - -e '[+z1<r]srz1<rp'
getent group
cut -d: -f1
sort
cat -n
set
grep ^IFS=
date -d "Oct 21 1973" +%s
comm -12 <(zcat number.txt.gz) <(zcat xxx.txt.gz)
fold -b16
sed 's/../& /g'
fold -b -w 20
cut --output-delimiter $'\t' -b 1-3,4-10,11-20
fold -w3
yes
cat -n
head -10
awk 'NR % 4 == 1'
find -printf "%y %i %prn"
find /path/to/files -type f -name \*.cfg  -print -exec cat {} \; -exec sleep 2 \;
paste -sd',,\n' file
cat file
paste -d' ' - -
cat file
paste -d\ - - -
paste -d' ' <(sed -n 'p;n' num.txt) <(sed -n 'n;p' num.txt)
find . -name 'my*' -type f -ls
echo "$FILE"
cut -d'.' -f2
echo $(ls -l $(which bash))
ls -l `which passwd`
ls -l "$( which studio )"
which studio
xargs ls -l
ls `which g++` -al
ls `which gcc` -al
echo "$FILE"
cut -d'.' -f1
echo "$FILE"
cut -d'.' --complement -f2-
echo "$FILE"
rev
cut -d"." -f3-
rev
ls /home/ABC/files/*.csv
rev
cut -d/ -f1
rev
tree -Csu
find . -name '*.ear' -exec du -h {} \;
df
df -H --total /
df -k .
df -h /
df -Ph
column -t
df .
df --total
a=$( df -H )
cat `which java`
file -
file -L `which gcc`
file `which c++`
file `which file`
which file
file -f -
file $(which foo)
file `which python`
find /directory -newermt $(date +%Y-%m-%d -d '1 day ago') -type f -print
echo -en "${line:0:11}" "\t" $(md5sum "${line:12}") "\0"
paste -d':' *.txt
sed 's/ [^:]*$//;s/ [^:]*:*/ /g;s/://g'
echo $string
cut -d';' -f1
echo "<line>"
cut -d ";" -f 1
grep -o '^\S\+' <(comm file1 file2)
cat -v /dev/urandom
tr -s ' ' < file
cut -d' ' -f4
cat text.txt
tr -s ' '
cut -d ' ' -f4
cat text.txt
cut -d " " -f 4
echo `date -v-1d +%F`
which c++
which gradle
which programname
which python
which python2.7
git branch  --no-color
grep -E '^\*'
cut -d ' ' -f 2
git branch
grep "*"
cut -d ' ' -f 2
git status --branch --porcelain
grep '##'
cut -c 4-
cut -d'.' -f1
git status
grep "On branch"
cut -c 11-
git status
head -1
cut -d ' ' -f 3
git symbolic-ref HEAD 2>/dev/null
cut -d"/" -f 3
groups $(who
cut -d' ' -f 1)
cat --help
history
awk '{sub($1, ""); sub(/^[ \t]+/, ""); print}'
history
awk '{sub($1, "", $0); sub(/^[ \t]+/, "", $0); print}'
echo "$(hostname):$(cat /sys/block/sda/size)"
echo -n `hostname`
find */
cut -d/ -f1
uniq -c
df
df --total
cat /proc/1/sched
head -n 1
who -la
ps -ef
grep $0
grep $(whoami)
mount -v
grep " on / "
tree -afispugD --inodes
awk '{FS="./"; ORS=""; printf("%-60s%s\n",$NF,$0)}'
echo 'your, text, here'
fold -sw 70
cat file
xargs
history 10
history 10
cut -c 8-
cal 4 2009
tr ' ' '\n'
grep -v ^$
tail -n 1
echo 0a.00.1 usb controller some text device 4dc9
rev
cut -b1-4
rev
cat $filename
sed "${linenum}p;d";
cat /etc/passwd -n
grep `whoami`
cut -f1
wc `find`
wc `find
grep .php$`
seq 1 100000
sed -n '10000,10010p'
seq 1 100000
tail -n +10000
head -n 10
cat dump.txt
head -16224
tail -258
cat file
head -n 16482
tail -n 258
history
sed -n '2960,2966p'
tail -n +347340107 filename
head -n 100
grep -e TEXT *.log
cut -d':' --complement -s -f1
join -t " " -j 1 <(sort file1) <(sort file2)
sort <(sort -u file1.txt) file2.txt file2.txt
uniq -u
sort foo.txt
uniq
grep -w -v -f blacklist file
grep -v 'pattern' filename
comm -23 <(sort a.txt) <(sort b.txt)
comm -23 <(sort file1) <(sort file2)
comm -13 <(sort file1) <(sort file2)
comm -13 <(sort first.txt) <(sort second.txt)
tac file
rev
cat <(grep -vxF -f set1 set2) <(grep -vxF -f set2 set1)
comm file1 file2
gcc -print-search-dirs
sed '/^lib/b 1;d;:1;s,/[^/.][^/]*/\.\./,/,;t 1;s,:[^=]*=,:;,;s,;,;  ,g'
tr \; \\012
ld --verbose
grep SEARCH_DIR
tr -s ' ;' \\012
groups
tr \  \\n
who
awk '{ print $1 }'
who
sed -e 's/[ \t].*//g'
alias -p
cut -d= -f1
cut -d' ' -f2
mount
awk '/\/dev\/sd/ {print NR, $1, $3}'
paste <(mount
awk 'tolower($0) ~ /\/dev\/sd*/ {print NR "\t" $1 "\t" $3}') <(/usr/sbin/smartctl -a /dev/sdb
awk '/Device:/ {print $2}')
mount
grep -i "/dev/sd.*"
awk '{ print NR "\t" $1 "\t" $3 }' > mount_output &
df -h
awk '{print $1}'
diff -q /dir1 /dir2
grep /dir1
grep -E "^Only in*"
sed -n 's/[^:]*: //p'
svn status
grep '\!'
cut -d\  -f2-
dig @"127.0.0.1"  _etcd-client._tcp. SRV
find . ! -local -prune -o -print
who
awk '{ if (NR!=1 && NR!=2) {print} }'
sed -e 's/ /, /g'
finger -l
awk '/^Login/'
finger -l
awk '/^Login/'
sed 's/of group.*//g'
find . -type f ! -size 0 -exec ls -l '{}' \;
df "$filename"
awk 'NR==1 {next} {print $6; exit}'
df "$path"
tail -1
awk '{ print $6 }'
df --output=target "$path"
tail -1
df -P "$path"
tail -1
awk '{ print $NF}'
df -P "/tmp"
awk 'BEGIN {FS="[ ]*[0-9]+%?[ ]+"}; NR==2 {print $NF}'
echo -e "ONBOOT=\"YES\"\nIPADDR=10.42.84.168\nPREFIX=24"
sudo tee -a /etc/sysconfig/network-scripts/ifcfg-eth4
find ./ -type f -exec bash -c 'echo "mv \"$1\" \"$(echo "$1"
sed -re '\''s/^([^-]*)-\s*([^\.]*)/\L\1\E-\2/'\'' -e '\''s/ /_/g'\'' -e '\''s/_-/-/g'\'')\""' - {} \;
df -P "$path"
awk 'BEGIN {FS="[ ]*[0-9]+%?[ ]+"}; NR==2 {print $1}'
df -h $path
cut -f 1 -d " "
tail -1
ps -o user= -p $$
awk '{print $1}'
yes
nl -ba
tr ' ' 0
sed 100q
cut -b 4-6
wc `find . -name '*.[h
c
cpp
php
cc]'`
find . -name \*.java
tr '\n' '\0'
xargs -0 wc
echo MYVAR
grep -oE '/[^/]+:'
cut -c2-
rev
cut -c2-
rev
comm -2 -3 <(sort -n B.txt) <(sort -n B.txt)
cat $file
wc -c
comm -12 <(sort -u /home/xyz/a.csv1) <(sort -u /home/abc/tempfile)
wc -l
ls -d -1 $PWD/**/*/*
cat -n
ls
grep "android"
cat -n
yes
head -n10
grep -n .
cut -d: -f1
paste -sd:
seq 10
parallel -j4  echo '{}'
seq 10
xargs -P4 -I'{}' echo '{}'
seq 10
awk 'NR%2{printf("%s ", $0); next}1'
seq 10
paste -sd" \n" -
seq 10
sed '2~2G'
awk -v RS='' '{$1=$1; print}'
seq 10
sed 'N;s/\n/ /'
seq -w 1 10
seq 1 100
printf " %02d" $(seq 1 30)
seq -f "%02g" 30
seq -w 30
seq -w 30
seq 5
awk '{printf "%s", $0} END {print ""}'
seq 5
awk '{printf "%s", $0}'
seq $1
sort -n ip_addresses.txt
uniq -c
find $(pwd) -name YourProgram -exec dirname {} \;
while read d; do cd "$d" && pwd; done
echo "$PATH"
rev
cut -d"/" -f1
rev
cat /dev/urandom
tr -dc 'a-zA-Z0-9'
comm -1 -2 <(ls /dir1
sort) <(ls /dir2
sort)
comm -1 -2 file1.sorted file2.sorted
comm -1 -2 <(sort file1) <(sort file2)
echo $name
tr -c -d 0-9
cat file
fold -w29
head -1
cat file
fold -s -w29
head -1
cut -d: -f1 /etc/group
cat file1.txt
grep -Fvf file2.txt
grep '^Q'
finger -s
awk '{printf("%s %s\n", $1, $2);}'
cat /dev/urandom
tr -dC '[:graph:]'
cat datafile
rev
cut -d '/' -f 2
rev
comm -1 -3 file1 file2
find foo/// bar/// -name foo -o -name 'bar?*'
wc -l $f
tr -s ' '
cut -d ' ' -f 1
cat set1 set2
sort -u
cat -n file_name
sort -uk2
sort -nk1
cut -f2-
find . -name '*.pdf' -print0
xargs -0 -n1 -I '{}' pdftotext '{}' -
find * -type f
xargs md5sum
sort
uniq -Dw32
awk -F'[ /]' '{ print $NF }'
sort -f
uniq -Di
set -x
find /home/folder1/*.txt -type f
awk -F '.txt' '{printf "ln -s %s %s_CUSTOM_TEXT.txt\n", $0, $1}'
find ~ -name '*.txt' -print0
xargs -0 cat
find ~/ -name '*.txt' -exec cat {} ;
find -name '*spaces*'
while read text; do cat "$text"; done
readlink -ev mypathname
find . -printf "%y %p\n"
find mydir -type d
for l in $(find . -type l); do cd $(dirname $l); if [ ! -e "$(readlink $(basename $l))" ]; then echo $l; fi; cd - > /dev/null; done
qstat -xml
tr '\n' ' '
sed 's#<job_list[^>]*>#\n#g' \
sed 's#<[^>]*>##g'
grep " "
column -t
script -c "./a" /dev/null
tee output.txt
script -q /dev/null ./a
tee output.txt
stdbuf -o 0 ./a
tee output.txt
~ $ . trap.sh
cat
rpm -qfi `which ldconfig`
echo <(yes)
find . -name SCCS -prune -o -print
find . -print -name SCCS -prune
du
awk '{print $2}'
df -k $FILESYSTEM
tail -1
awk '{print $5}'
df . -B MB
tail -1
awk {'print substr($5, 1, length($5)-1)'}
tree -p -d
cal 09 2009
awk 'BEGIN{day="9"}; NR==4 {col=index($0,day); print col }'
cal 09 2009
awk 'NR==4{day="9"; col=index($0,day); print col }'
cal 09 2009
awk '{day="9"; if (NR==4) {col=index($0,day); print col } }'
pstree
cat
tee
readlink /dev/disk/by-uuid/b928a862-6b3c-45a8-82fe-8f1db2863be3
dig -x 72.51.34.34
dig -x 127.0.0.1
j=`echo $i
rev
cut -d "." -f2`;
yes ''
nl -ba
sed -n -e 11,24p -e 24q
echo $string
cut -d';' -f2
echo "<line>"
cut -d ";" -f 2
tr -s ' '
cut -d ' ' -f 2
echo -e "<line>"
sed 's:\s\+:\t:g'
cut -f2
cut -d ' ' -f 2
cut -d\  -f 2
cut "-d " -f2 a
find /myprojects -type f -name '*.cpp' -print0
xargs -0 echo sed -i 's/previousword/newword/g'
zcat number.txt.gz
{ zcat xxx.txt.gz
comm -12 /dev/fd/3 - ; } 3<&0
ldd $(which YOURAPPNAME)
dig +short -f list
dig TXT +short o-o.myaddr.l.google.com @8.8.8.8
dig TXT +short o-o.myaddr.l.google.com @ns1.google.com
getent group
cut -d: -f1
sort
sort ip_addresses
uniq -c
who
awk '{ print $1; }'
sort -u
awk '{print $1; u++} END{ print "users: " u}'
dirname "$(readlink -f "$0")"
df -P $path
tail -1
cut -d' ' -f 1
df .
tail -1
awk '{print $1}'
echo `seq $start $end`
seq -s' ' $start $end
seq 10
xargs echo
seq 5
perl -ne 'chomp; print "$_ "; END{print "\n"}'
diff --old-line-format '%L' --new-line-format '' --unchanged-line-format ''  <(nl File-out) <(nl File-Reference)
uniq
echo 123
tee >(tr 1 a)
tr 1 b
hostname -a -l mydomain.com
sed -n '/;; ANSWER/{n;N;p;q}'
diff -rq dir1 dir2
grep 'Only in dir1/'
diff -rq /path/to/folder1 /path/to/folder2
diff  --brief --recursive dir1/ dir2/
diff -q dir1 dir2
diff -qr dir_one dir_two
sort
diff -rqyl folder1 folder2 --exclude=node_modules
diff -arq folder1 folder2
echo $(basename $(readlink -nf $0))
head -$N file
tail -1
tr ',' '\n'
find /proc -type d
egrep -v '/proc/[0-9]*($
/)'
less
history
awk '{print $2}'
awk 'BEGIN {FS="
"}{print $1}'
sort
uniq -c
sort -n
tail
sort -nr
awk '{print $2}' < file.txt
paste -s -d, -
cut -d' ' -f5 file
paste -d',' -s
find ~/bin/FilesDvorak/.* -maxdepth 0
awk -F"/" '{ print $6 }'
who am i
awk '{ print $5}'
host `hostname`
awk '{print $4}'
hostname  -I
hostname  -I
awk -F" " '{print $1}'
hostname  -I
cut -f1 -d' '
hostname -I
awk '{print $1}'
hostname -i
hostname -I
md5sum /path/to/destination/file
ps -u $(whoami)
grep firefox
awk '{printf $1}'
find /path/to/dir1 -printf "%U %G %m %p\n" > /tmp/dir1.txt
readlink -f "$path"
ls -d -1 $PWD/**/*/*
nl
ping -q -c 5 google.com
tail -n 1
cut -f 5 -d '/'
ping -c 5 google.com
grep "round-trip"
cut -f 5 -d "/"
ping -c 4 www.stackoverflow.com
awk -F '/' 'END {print $5}'
ping -c 4 www.stackoverflow.com
sed '$!d;s
.*/\([0-9.]*\)/.*
\1
'
ping -c 4 www.stackoverflow.com
tail -1
awk '{print $4}'
cut -d '/' -f 2
basename "`pwd`"
basename $(pwd)
basename `pwd`
echo "$(basename $(pwd))"
pwd
xargs basename
pwd
grep -o '[^/]*$'
basename $(echo "a:b:c:d:e"
tr ':' '/')
who -b
awk '{$1=""; $2=""; print $0}'
date -f -
find . -type f
xargs
wc -c
cal 02 1956
seq 65 90
awk '{printf("%c",$1)}'
echo "$b"
grep -o "[$a]"
tr -d '\n'
echo "$b"
grep --only-matching "[$a]"
xargs
tr --delete ' '
zcat "$file"
awk '{print NF}'
head
find ./ -name *.ogv -exec echo myfile {} \;
comm -12 <(awk '{print $3}' file1
sort -u) <(awk '{print $3}' file2
sort -u)
gunzip -l file.zip
sed 's/\n//' file
nl -b a file
sort -k1,1nr
sed '1, 4 d'
sort -k1,1n
sed 's/^ *[0-9]*\t//'
tail -n +2 "$FILE"
cat ${SPOOL_FILE}
tee -a ${LOG_FILE}
cat /tmp/nums
addnums
cat Little_Commas.TXT
nl file
sort -nr
cut -b8-
echo `sed -e 's/$/\
\ /g' file`
cat filename
tail -n +2 foo.txt
cat my_script.py
cat n
cat numbers.txt
cat order.txt
cat somefile
splitter 16224-16482
cat xx.sh
cat ~/.ssh/config
find / -name '*.py' -exec cat \{} \;
tqdm --unit loc --unit_scale True
wc -l
perl -ple '' `find . -name "file*"`
find . -name "file*" -print0
xargs -0 perl -ple ''
find /source_path -name \*.data
while read -r filename; do printf "print version: cp %s %s\n" "${filename}" "$(printf "%s\n" "${filename}"
sed "s/^.*[/]\(category[^/]*\)[/]\(.*[.]data\)$/\/target_path\/\1_\2/")"; done
echo "$(date): " $line
echo $(date) doing stuff
echo "$(date +%H:%M:%S): done waiting. both jobs terminated on their own or via timeout; resuming script"
echo "The current default java is $(readlink --canonicalize `which java`)"
find -maxdepth 0
find -mindepth 0 -maxdepth 0
find -prune
echo "$PWD"
sed 's!.*/!!'
tree
tree -p
tree -s
tree -D
ps -p $$
tail -1
awk '{print $NF}'
ps
tail -n 4
sed -E '2,$d;s/.* (.*)/\1/'
echo `whoami` `stat -c %i "/home"`
who -m
awk '{print $1;}'
cat /var/spool/mail/`whoami`
getent passwd `whoami`
cut -d : -f 5
echo "$(pwd)/$(basename "$1")"
echo pwd: `pwd`
pwd -P
echo -n $(pwd)
echo `date` `hostname`
echo `date +"%a %x %X"` `hostname`
date ; read -t 10 -p "Hit ENTER or wait ten seconds" ; echo ; date
date --date='1 days ago' '+%a'
date -d "$(date -d "2 months" +%Y-%m-1) -1 day" +%a
diff <(fold -w1 <(sed '2q;d' $f)) <(fold -w1 <(sed '3q;d' $f))
awk '/[<>]/{printf $2}'
find $SrvDir* -maxdepth 0 -type d
echo "dirname/readlink: $(dirname $(readlink -f $0))"
dirname `pwd -P`
dirname `readlink -e relative/path/to/file`
echo $(dirname $(readlink -m $BASH_SOURCE))
mount
tail -1
sed 's/^.* on \(.*\) ([^)]*)$/\1/'
find -empty
find empty1 empty2 not_empty -prune -empty
history
cat "text1;text2;text3"
sed -e 's/ /\n/g'
cat `find [whatever]`
cat "$(which f)"
cat `which f`
find . -type f -printf "%f %s\n"
find full_path_to_your_directory -type f -printf '%p %s\n'
tree --du -h -L 2
find . -iname "*.txt" -exec du -b {} +
find . -name "*.txt" -print0
xargs -0 du -ch
find . -type f -printf '%p %s\n'
perl -n -a -e '$sum+=$S[1]; print "$sum\n"'
df -P file/goes/here
tail -1
cut -d' ' -f 1
df
grep /dev/disk0s2
file $(readlink -f $(type -p rename))
find * -maxdepth 0 -type d -print0
ls -1
tr '\n' ','
ls -1
tr '\n' ','
sed 's/,$/\n/'
ls
sed '$!s/$/,/'
tr -d '\n'
ls -1b
tr '\n' ';'
ls -m
tr -d ' '
tr ',' ';'
find . -type l -print
xargs ls -ld
awk '{print $10}'
find . -type f -exec echo {} {} \;
find /tmp
head
find
head
tree --help 2>&1
head -n2
tree --help
& head -n2
git log --pretty=format: --name-only
grep .cs$
sort
uniq -c
sort -rg
head -20
cat /dev/urandom
LC_ALL=C tr -dc 'a-zA-Z0-9'
fold -w 24
head -n 1
cat /dev/urandom
tr -cd 'a-f0-9'
head -c 32
cat /dev/urandom
env LC_CTYPE=C tr -cd 'a-f0-9'
head -c 32
sed 's/\(.....\)\(.....\)/\1\n\2/' input_file
split -l 2000000 - out-prefix-
zcat "$line"
head -n5
awk -F, '{ if (NR == 1)print}{if($3 == "f")print}' input
column -t -s,
head -n 1 filename
od -c
seq 1 10000
head -1
find $HOME/. -name *.txt -exec head -n 1 -v {} \;
find xargstest/ -name 'file?B'
sort
xargs head -n1
head -1 <(sort set)
od --read-bytes=2 my_driver
sed 's/\([^ ]*\) /\1\n/' input
fold -w 100
finger $USER
head -n1
cut -d : -f3
finger `id -un`
head -1
cut -d: -f3-
find . -name "file.ext" -execdir pwd ';'
ls "`pwd`/file.txt"
xargs -n 1 -I '{}' find "$(pwd)" -type f -inum '{}' -print
which cc
which gcc
which rails
which lshw
tree -fi
echo $(readlink -f /dev/disk/by-uuid/$1) is mounted
echo $(readlink -f /dev/disk/by-uuid/$1) is not mounted
ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no -o LogLevel=quiet -i identity_file machine.example.org gcc -dumpversion
git log --pretty=format:'%h
%an
%s' -10
column -t -s '
'
echo "$NAME"
cut -d'.' -f2-
cat files.txt
xargs du -c
tail -1
df --total -BT
tail -n 1
tree --help
split --help
echo Hello world
od -t x1 -t c
finger $username
awk '/^Directory/ {print $2}'
finger $USER_NAME
grep Directory
expand
cut -d ' ' -f 2
hostname
ping -c 2 -n 127.0.0.1
awk -F'[ =]' -v OFS='\t' 'NR>1 { print $6, $10 }'
echo hello world
tee  >(awk '{print $2, $1}')
echo hello world
tee /dev/tty
awk '{print $2, $1}'
cat /proc/config.gz
gunzip
find . -type f -printf '%k %p\n'
sort -n
tail -n 20
find . -type f -printf '%s %p\n'
sort -rn
head -20
history
tail
history
tail -10
history
tail -n 10
tail great-big-file.log
tail -f /var/log/syslog
tail /var/log/syslog
tail -n 1000 /var/spool/cron/*
history
tail -1
awk '{print $1}'
sed 's/^/./'
rev
cut -d. -f1
rev
tail -1 $file1
tee -a $file2
tail -1 <(sort set)
mount
tail -1
sed 's/ on .* ([^)]*)$//'
echo "Your string here"
tr ' ' '\n'
tail -n1
echo "a b c d e"
tr ' ' '\n'
tail -1
awk '{print $NF}' file.txt
paste -sd,
sed 's/,/, /g'
nl -b a "<filename>"
grep "<phrase>"
awk '{ print $1 }'
uniq -c
sort -n
tail -n1
cat table.txt
awk '{print $1}'
sort
uniq
xargs -i grep {} table.txt
join -v 2 index <(nl strings)
join <(sort index) <(nl strings
sort -b)
find . -name '*.txt' -print0
xargs -0 -n 1 echo
find /fss/fin -d 1 -type d -name "*" -print
find /myfiles -type d
find ./ -type d -print
find . \! -name BBB -print
find . -not \( -name .svn -prune -o -name .git -prune -o -name CVS -prune \) -type f -print0
xargs -0 file -n
grep -v binary
cut -d ":" -f1
find .
find . -type f -exec grep -il confirm {} \;
find . -type f
find / -type f -exec echo {} \;
find ./ -type f -print
find . -maxdepth 1 -mindepth 1 -type d
find . -type d -exec ls -ld {} \;
find /mnt/raid -type d
find /etc   ! -name /etc
find /etc/. ! -name . -prune
find /etc/. ! -name /etc/.
find . ! -name . -prune
find . \( -name . -o -prune \)
find / -newerct '1 minute ago' -print
find "/zu/durchsuchender/Ordner" -name "beispieldatei*" -print0
xargs -0 grep -l "Beispielinhalt"
find /tmp/a1
find .
egrep -v "(exclude3
exclude4)"
sort
find . -type f -not -path '*/\.*'
find . -path './.git' -prune -o -type f
find . -name .svn -a -type d -prune -o -print
find . -path '*/.svn*' -prune -o -print
find . -type d -name .svn -prune -o -print
find . -exec echo xx{}xx \;
find ~ -name 'Foto*'
find .  -mtime -14
sed -e 's/^\.\///'
find -type d -maxdepth 1 ! -name ".*" -printf "%f\n"
find . -maxdepth 1 -type f -newermt "Nov 22" \! -newermt "Nov 23" -exec echo {} +
find . -type f -mtime -2 -exec echo {} +
find . -type f
find -maxdepth 1 -type d
find . -maxdepth 1 -mindepth 1 -type d -printf '%f\n'
find . -type d -maxdepth 1
find /path/to/dir/ -mindepth 1 -maxdepth 1 -type d
find . -mindepth 1 -maxdepth 1 -type d -printf "%P\n"
who
awk '{print $3 " " $4 " "$1}'
sort
head -1
perl -ne 'print ($l = $_) if (length > length($l));' filename
tail -1
ping google.com -n 10
awk '/Minimum =/ { sub(",","",$3); print $3 }'
ping google.com -n 10
grep Minimum
awk '{print $3}'
sed s/,//
ls -1tr *
tail -1
grep -Ff list1.txt list2.txt
sort
uniq -c
sort -n
tail -n1
mount
tail -1
sed -e "s/^[^/]*\(.*\) type .*$/\1/g"
find file1 -prune -newer file2
find . -type f -printf "%f %s\n"
find dir -type f -printf "f %s %p\n"
find tmp -type f -printf "%s %p\n"
awk '{sub(/^[^ ]+/,sprintf("f %10d",$1))}1'
find tmp -type f -printf "f %s %p\n"
awk '{sub(/^[^ ]+ +[^ ]/,sprintf("%s %10d",$1,$2))}1'
find $(pwd)/* -type f -exec stat -c "f%15s %n" {} +
find . -exec printf '%s\0' {} \;
find .
find . -print
find /tmp/dir1 -exec basename {} \;
find /some/directory -type f -exec file -N -i -- {} +
sed -n 's!: video/[^:]*$!!p'
find . -perm -o+w,+s
find ~ -type f -exec file -i {} +
grep video
find . -maxdepth 1 -type f -name '.*' -exec basename {} \;
find . -type f -exec echo {} \;
find ~/some/directory -name "*rb" -exec basename {} \;
diff  --brief --recursive dir1/ dir2/
find  /path/to/directory/* -maxdepth 0 -type d -exec basename {} \;
find /path/to/directory/* -maxdepth 0 -type d -exec basename -a {} +
find /path/to/directory/* -maxdepth 0 -type d -printf '%f\n'
find /usr/local/svn/repos/ -maxdepth 1 -mindepth 1 -type d -exec echo /usr/local/backup{} \;
find . -name "*.txt" -printf "%T@ %p\n"
sort
tail -1
cat /proc/cpuinfo
awk '/^processor/{print $3}'
tail -1
sudo find . -xdev -type f
cut -d "/" -f 2
sort
uniq -c
sort -n
find $DIR -name "*.txt" -exec wc -l {} \;
wc -l file.txt
cut -f1 -d" "
ping google.com
awk '{ sent=NR-1; received+=/^.*(time=.+ ms).*$/; loss=0; } { if (sent>0) loss=100-((received/sent)*100) } { printf "sent:%d received:%d loss:%d%%\n", sent, received, loss }'
find . -type f
wc -l
history
cut -d' ' -f4-
sed 's/^ \(.*$\)/\1/g'
history
sed 's/^[ ]*[0-9]\+[ ]*//'
history
awk '{$1="";print substr($0,2)}'
echo `pwd`/`dirname $0`
find /home/kibab -name '*.png' -exec echo '{}' ';'
find -printf '"%h/%f" '
find . -name "*.rb" -type f
xargs -I {} echo Hello, {} !
mount
sed -n -e "s/\/\/mynetaddr on \([^ ]*\).*$/\1/p"
find . -type f -print -exec sh -c "readelf -s {}
grep mysymbol" \;
echo <(true)
find /tmp/dir1 -exec echo {} \;
find .
xargs grep abc
sed 's/abc/xyz/g'
find /path/to/directory/* -maxdepth 0 -type d
ping -c 5 -q $host
grep -oP '\d+(?=% packet loss)'
echo "`pwd -P`"
ping -c4 www.google.com
awk '/---/,0'
ping -c 1 8.8.8.8
awk 'FNR == 2 { print $(NF-1) }'
cut -d'=' -f2
ping -c 1 8.8.8.8
awk 'FNR == 2 { print $(NF-1) }'
echo "$(dirname $(readlink -e $F))/$(basename $F)"
ls -l
head -2
tail -1
ls -l
tail -n +2
head -n1
tr -s ' '
cut -d ' ' -f 2
comm -23 <(command_which_generate_N
sort) <(command_which_generate_M
sort)
find $HOME -name '*.ogg' -type f -exec du -h '{}' \;
find . \( -size +700k -and -size -1000k \) -exec du -Hs {} \; 2>/dev/null
find . -iname "*.txt" -exec du -b {} +
find . -iname '*.jpg' -type f -printf +%b
find ~/code -name '.*' -prune -o -type f -a -perm /u+x -printf ':%h\n'
sort
uniq
tr -d '\n'
tar tf nginx-1.0.0.tar.gz
xargs dirname
sort
uniq
finger
cut -d ' ' -f1
sort -u
finger
cut -d ' ' -f1
sort -u
grep -iv login
finger
tail -n +2
awk '{ print $1 }'
sort
uniq
who
grep -i admin
cut -c10-20
grep -rl "needle text" my_folder
tr '\n' '\0'
xargs -r -0 file
grep -e ':[^:]*text[^:]*$'
grep -v -e 'executable'
who -b
ping 8.8.8.8
awk -F"[= ]" '{if($10>50) {cmd="date"; cmd
getline dt; close(cmd) ; print $10, dt}}'
ping 8.8.8.8
awk '{split($7,a,"[=.]");if (a[2]>58) print a[2], strftime()}'
history
awk '{ print $2 }'
sort
uniq -c
sort -rn
head
history
awk '{print $2}'
awk 'BEGIN {FS="
"}{print $1}'
sort
uniq -c
sort -nr
head
cat files.txt
xargs du -c
tail -1
awk '{print $1}'
echo $(cat /proc/$$/cmdline)
nl -n ln
sort -u -k 2
sort -k 1n
cut -f 2-
echo `whoami`
whoami
who -m
awk '{print $1}'
seq -f 'some line %g' 500
nl
sort -R
cut -f2-
head -3
time cut -f50000000 -d$'\n' myfile.ascii
date +"%T"
df
tail -n +2
tr -s ' '
cut -d ' ' -f 2
paste -s -d+
bc
readlink `pwd`
df -T $dir
tail -1
awk '{print $2;}'
comm -23 <(sort file1) <(sort file2)
grep -f - file1
sort file_a file_b
uniq -u
comm -3 <(sort set1) <(sort set2)
sed 's/\t//g'
comm -23 file1 file2
comm -2 -3 A B
comm -2 -3 - C
comm -2 -3 - D
comm -23 a.txt b.txt
comm -3 a b
comm -23 second-file-sorted.txt first-file-sorted.txt
comm -23 "File 1" "File 2"
comm -2 -3 <(sort A.txt) <(sort B.txt)
comm -23 <(sort -u A.txt) <(sort B.txt)
comm -3 a b
sed 's/^\t//'
comm -23 a b
comm -13 a b
comm -2 -3 f1 f2
cut -d' ' -f1 file2
comm -13 - file1
comm -13 first.txt second.txt
who -su
sort
uniq
column
who
awk '{print $1}'
xargs -n 1 id
yes "$OPTARG"
head -$opt
column <<< "$(printf '%s\n' $module)"
echo $modules
column -t
fold
column -t
column -x <<< "$(printf '%s\n' $module)"
echo "$opt"
tr -d '"'
ps axu
grep jbos[s]
tr -s ' '
cut -d' ' -f5
date '+%Y' --date='222 days ago'
diff -q "$file" "${file/${dir1}/${dir2}}"
diff -q <(sort set1) <(sort set2)
diff -q <(sort set1
uniq) <(sort set2
uniq)
diff --brief -r dir1/ dir2/
diff -arq folder1 folder2
diff --brief -Nr dir1/ dir2/
diff -qr /tmp/dir1/ /tmp/dir2/
diff PATH1/ PATH2/ -rq -X file1
diff -qr dir1 dir2
diff -qr dir1/ dir2/
diff -rq dir1 dir2
diff -qr dir_one dir_two
sort
diff -rqyl folder1 folder2 --exclude=node_modules
pwd
tr '/' '\n'
date -j -v-1d
date +%Y:%m:%d -d "1 day ago"
date +%Y:%m:%d -d "yesterday"
date -d "-1 days" +"%a %d/%m/%Y"
find your/dir -prune -empty -type d
find "your/dir" -prune -empty
find your/dir -prune -empty
echo "$NEWFILE"
sudo tee /etc/apt/sources.list
find "$d" -type f -printf "%T@ :$f %p\n"
sort -nr
cut -d: -f2-
head -n"$m"
head -<$LINENUM + 10> filename
tail -20
du -ksh *
sort -n -r
du -ks *
sort -n -r
ps -aux
grep ^username
awk '{print $2}'
xargs pstree
tr -dc '1-65000' </dev/urandom
head -c N
sort --random-sort $FILE
head -n 1
head -$((${RANDOM} % `wc -l < file` + 1)) file
tail -1
grep -m1 -ao '[0-9]' /dev/urandom
sed s/0/10/
head -n1
head -200 /dev/urandom
cksum
cut -f1 -d " "
awk '{print $1%63000+2001}'
seq 2000 65000
sort -R
head -n 1
dig google.com ns
awk 'p{print $5}/^;; ANSWER SECTION:$/{p=1}/^$/{p=0}'
cal -h
cut -c19-20
cal -h
cut -c 4-17
pstree -p 20238
sed 's/(/\n(/g'
grep '('
sed 's/(\(.*\)).*/\1/'
tr "\n" ,
pstree -p 20238
sed 's/(/\n(/g'
grep '('
sed 's/(\(.*\)).*/\1/'
yum list zsh
cal
sed -e 's/^.\{3\}//' -e 's/^\(.\{15\}\).\{3\}$/\1/'
cal -h
sed -r "s/\b$(date
cut -d' ' -f3)\b/*/"
cal
cal $month $year
awk -v day=$day -f cal.awk
cal April 2012
tee t
more
cal 2 1900
paste <(cal 6 2009) <(cal 6 2010)
pwd
awk -F/ '{print $NF}'
pwd
grep -o "\w*-*$"
pwd
sed 's#.*/##'
cal -h
cal 01 2015
sed -n '1,2b;/^.\{6\} \{0,1\}\([0-9]\{1,2\}\) .*/ {s//0\1/;s/.*\([0-9]\{2\}\)$/\1/p;q;}'
cal $m $y
sed -e '1,2d' -e 's/^/ /' -e "s/ \([0-9]\)/ $m\/\1/g"
cal
awk 'NR==2 {for (i=1;i<=NF;i++) {sub(/ /,"",$i);a[$i]=i}} NR>2 {if ($a["Tu"]~/[0-9]/) {printf "%02d\n",$a["Tu"];exit}}' FIELDWIDTHS="3 3 3 3 3 3 3 3"
cal
awk 'NR>2 && NF>4 {printf "%02d\n",$(NF-4);exit}'
cal
awk 'NR>2{Sfields=7-NF; if (Sfields == 0 ) {printf "%02d\n",$3;exit}}'
echo $(($(date +%s) / 60 / 60 / 24))
echo `date +%s`/86400
bc
$(dirname $0)
`dirname $0`
\time -f%e sleep 1
echo <(true)
head -c -N file.txt
dirname `find / -name ssh
grep bin
head -1`
echo dirname: $(dirname $mystring)
echo "dirname: `dirname "$0"`"
echo "dirname: `dirname $0`"
ls $PWD/cat.wav
ls -1
awk  -vpath=$PWD/ '{print path$1}'
ls -d $PWD/*
ls -d -1 $PWD/**
ls -d -1 $PWD/*.*
pstree -p
date -d @$(git log -n1 --format="%at") +%Y%m%d%H%M
groups                                        //take a look at the groups and see
groups el                                     //see that el is part of www-data
cp --help
yum --help
yum -h
pstree
echo "$(ifconfig)"
w -h $euids
find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n1
find . -type f
sed 's/.*/"&"/'
xargs ls -E
awk '{ print $6," ",$7 }'
sort
tail -1
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
ls -1t
head -1
find . -type f -print
xargs -L1 wc -l
find . -type f -print0
xargs -0L1 wc -l
wc -l *.c
find . -name '*.php' -print0
xargs -0 wc -l
ldd /bin/* /usr/bin/*
sed -e '/^[^\t]/ d; s/^\t\(.* => \)\?\([^ ]*\) (.*/\2/g'
sort
uniq -c
find . -name '.git'
xargs -n 1 dirname
ps -e -orss=,args=
sort -b -k1,1n
pr -TW$COLUMNS
find . -maxdepth 1 -type d -print0
xargs -0 -I {} sh -c 'echo -e $(find {}
wc -l) {}'
sort -n
echo "groups: [ $(groups myuser
sed -e 's/.\+\s\+:\s\+\(.\+\)/\1/g' -e 's/\(\s\+\)/, /g') ]"
ls -a
tee output.file
ifconfig $(netstat -rn
grep -E "^default
^0.0.0.0"
head -1
awk '{print $NF}')
grep 'inet '
awk '{print $2}'
grep -Eo '([0-9]*\.){3}[0-9]*'
ifconfig `ip route
grep default
head -1
sed 's/\(.*dev \)\([a-z0-9]*\)\(.*\)/\2/g'`
grep -oE "\b([0-9]{1,3}\.){3}[0-9]{1,3}\b"
head -1
w
sort
ls -l -- "$dir/$file"
ls -l ${0}
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
sed 's/.*/"&"/'
xargs ls -l
echo 'ls -hal /root/ > /root/test.out'
sudo bash
ls -hal /root/ > /root/test.out
ls -hal /root/
sudo tee /root/test.out
sudo ls -hal /root/
sudo bash -c "cat > /root/test.out"
sudo ls -hal /root/
sudo dd of=/root/test.out
sudo ls -hal /root/
sudo tee /root/test.out > /dev/null
ls -lb
$ ls -Fltr "./my dir" "./anotherdir"
ls -ld /tmp /tnt
sed 's/^.*$/<-- & --->/'
ls -ld /tmp /tnt
$ ls -Fltr $var
ls -al file.ext
$ ls -Fltr *
$ ls -Fltr
ps -e -orss=,args=
sort -nr
head
ls
& tee files.txt
ls -lR /
tee -a output.file
ls -lR /
tee output.file
echo "The script you are running has basename `basename $0`, dirname `dirname $0`"
ls -l /proc/$$/exe
sed 's%.*/%%'
mktemp -u
yum repolist
tail -n +3
grep -v 'repolist:'
cut -f1 -d' '
wc *.py
cal $(date +"%m %Y")
awk 'NF {DAYS = $NF}; END {print DAYS}'
echo "Number files in SEARCH PATH with EXTENSION:" $(ls -1 "${SEARCHPATH}"/*."${EXTENSION}"
wc -l)
cat $file
cut -c 1-10
./script.sh
sort -u
./yourscript.ksh
sort
uniq
echo "$COMMANDS"$'\n'"$ALIASES"
sort -u
groups $(who
cut -d' ' -f 1)
echo this dir: `dirname $BASH_SOURCE`
dirname "/path/to/vm.vmwarevm/vm.vmx"
echo /path/to/vm.vmwarevm/vm.vmx
xargs dirname
$(dirname $(readlink -e ../../../../etc/passwd))
$(dirname $(readlink -e ../../../../etc/passwd))
dirname `readlink -e relative/path/to/file`
pstree -p [pid ...]
ps -aux
awk '/^username/{print $2}'
xargs pstree
pstree -A -s $$
pstree $(pgrep -fn bash)
pstree -ap `pidof cron`
pstree -sp $$
pstree --show-parents -p $$
head -n 1
sed 's/\(.*\)+.*/\1/'
less
pstree -s $ID
pstree -aAp $(ps -ejH
awk -v v1=$mypid '$1==v1 {print $3}')
pstree -p $$
pstree -s $$
pstree -p user
pstree -apl
pstree -a "$PID"
pstree
grep MDSImporte
cut -c 1-${WIDTH}
pstree
grep MDSImporte
less -SEX
sort --random-sort $FILE
head -n 1
$(readlink -f $(dirname "$0"))
grep -n "" myfile.txt
sort -r -n
gawk -F : "{ print $2 }"
pstree -a pid
echo `ls` "`cal`"
dig +noall +answer soa yahoo.com
awk '{sub(/.$/,"",$5);print $5}'
shopt -p globstar
du -h --max-depth=1 .
sort -n -r
w -h
cut -d' ' -f1
sort
uniq
echo "0 1 * * * /root/test.sh"
tee -a /var/spool/cron/root
ifconfig
grep HW
grep -r "texthere" .
find . -type f -printf '%T@ %p\n'
sort -n -r
head -${numl}
cut -f2- -d" "
sed -e 's,^\./,,'
xargs ls -U -l
ls -1
(for ((x=0;x<N;x++)) ; do read ; done ; head -n1)
ls -1
tail -n +N
head -n1
watch -n1 'ps x -o "%p %r %c"
grep "test" '
echo "dirname/readlink: $(dirname $(readlink -f $0))"
cal
awk '$6{date=$6}END{print date}'
echo "$(dirname $(readlink -e $F))/$(basename $F)"
head -c N file.txt
cat filename
awk '{print length, $0}'
sort -nr
head -1
perl -ne 'print length()."  line $.  $_"' myfile
sort -nr
head -n 1
echo `cat $FILE
head -n 100
wc -c` / 1024
bc -l
ps aux
awk '{print $2, $4, $11}'
sort -k2rn
head -n 10
sudo du -hDaxd1 /var
sort -h
tail -n10
history
awk '{ print $2 }'
sort
uniq -c
sort -rn
head
history
awk '{print $2}'
awk 'BEGIN {FS="
"}{print $1}'
sort
uniq -c
sort -nr
head
rgrep .
wc -l
find . -name '*.php' -type f -exec cat -- {} +
wc -l
find . -name "*.py" -exec wc -l {} \;
awk '{ SUM += $0} END { print SUM }'
find . -type f -exec wc -l {} \;
awk '{ SUM += $0} END { print SUM }'
find . -name '*.c' -print0
xargs -0 wc -l
grep -v total
awk '{ sum += $1; } END { print "SUM: " sum; }'
find ./ -type f -name "*.[mh]" -exec wc -l {}  \;
sed -e 's/[ ]*//g'
cut -d"." -f1
paste -sd+ -
bc
cat `find . -name "*.php"`
wc -l
w
awk '{print $1}'
xargs -I '{}' id '{}'
cal
awk 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}' FIELDWIDTHS="3 3 3 3 3 3 3 3" date=31
cal
awk -v date=31 'NR == 2 { split($0, header) } NR > 2 { for (i = 1; i <= NF; ++i) if ($i == date) { print header[NR == 3 ? i + 7 - NF : i]; exit } }'
cal
awk -v date=31 -v FIELDWIDTHS="3 3 3 3 3 3 3 3" 'NR==2 {split($0,a)} {for (i=1;i<=NF;i++) if ($i==date) print a[i]}'
date --date="222 days ago" +"%d"
date --date="222 days ago" +"%Y"
date -d "yesterday 13:00" '+%Y-%m-%d'
date --date yesterday "+%a %d/%m/%Y"
find xargstest/ -name 'file*' -print0
xargs -0 myscript.sh
find xargstest/ -name 'file??'
xargs myscript.sh
find -type f -maxdepth 1 -name 'file*' -print0
sort -z
xargs -0 bash script.sh
grep -v "#" -R  /var/spool/cron/tabs
grep -U -l $'\015' $(fd)
read REPLY\?"This is the question I want to ask?"
crontab
find . -type f -mtime -1 -print
xargs pr -n
lp
pr -n 'find . -type f -mtime -1 -print'
lpr
pushd `pwd`
pushd $(dirname `which $@`)
pushd $(/bin/pwd)
pushd $PWD
pushd .
pushd "${line/#\~/$HOME}";
pushd $(dirname $0)
MY_DIR=$(dirname $(readlink -f $0))
TTY=$(tty) WHOLINE=$(who
grep "${TTY#/dev/}")
bg %1 [puts the job in the background]
echo -n $(pwd)
pbcopy
printf $(pwd)
pbcopy
pwd
tr -d '\n'
pbcopy
getent `uname -n`
dig -t SRV _kerberos._udp.foo.com
bind -q complete
grep -q "tar archive" <<<$filetype
set -u
set -eu
ldd /bin/* /usr/bin/* ...
sed -e '/^[^\t]/ d; s/^\t\(.* => \)\?\([^ ]*\) (.*/\2/g'
sort
uniq -c
head -c 10 "$0"
tr '\000-\377' '#'
read -rep $'Please Enter a Message:\n' message
read
read -a arr
read -a first
read XPID XUSERID XPRIORITY XVIRTUAL XRESIDENT XSHARED XSTATE XCPU XMEM XTIME XCOMMAND
read VARNAME
read -e -p "Do that? [Y,n]" -i Y input
read -e -p "${myprompt@P}"
read -e -p '> ' $1
read -p "$1 " yn
read -p "Do you wish to install this program?" yn
read -s ENTERED_PASSWORD
read PASSWORD
read -p "$*"
read -p "$1 ([y]es or [N]o): "
read -p "> $line (Press Enter to continue)"
read -p "Press [Enter] key to release lock..."
read -p "Password: " -s SSHPASS
read -r -p "$(echo $@) ? [y/N] " YESNO
read -r a
read -r ans
read -p 'BGG enter something:' -r data
read dir
read -s foobar
read -p " Again? Y/n " i
read -p "$(echo -e 'Please Enter a Message: \n\b')" message
read -p "`echo -e '\nPlease Enter\na Message: '`" message
read -p "Please Enter a Message: `echo $'\n> '`" message
read -p "`echo -e 'Please Enter a Message: \n\b'`" message
read -p "Please Enter a Message: $cr" message
read -s password
read -s -p "Password: " password
read -p "Are you sure you want to continue? <y/N> " prompt
read -r -p "${1:-Are you sure? [y/N]} " response
read -r -p "Are you sure? [y/N] " response
read -r -p "About to delete all items from history that match \"$param\". Are you sure? [y/N] " response
read -p " Enter Here : " text
read -t 0.1 -p "This will be sent to stderr"
read -t 10
read -p "<Your Friendly Message here> : y/n/cancel" CONDITION;
read -p "Are you alright? (y/n) " RESP
read -p "Are you sure you wish to continue?"
read -r -p "Are you sure? [Y/n]" response
read -p "Continue (y/n)?" CONT
read -p "Continue (y/n)?" choice
read -p $'Enter your age:\n'
read -p "Enter your choice: " choice
read -e -i "yes" -p "Enter your choice: " choice
read -p "Is this a good question (y/n)? " answer
read -e
read -p "`pwd -P`\$ " _command
read -p "command : " input_cmd
read -e -p "Enter the path to the file: " -i "/usr/local/etc/" FILEPATH
read -e -p "Enter your choice: " choice
read -e -p "My prompt: " varname
read -rn1
y=$(bash -c "read -n 1 c; echo \$c")
read -sk
read -r -n 1 -p "${1:-Continue?} [y/n]: " REPLY
read -n1 ans
read -n1 -p "Do that? [y,n]" doit
read -rp $'Are you sure (Y/n) : ' -ei $'Y' key
read -n1 -r -p "Press any key to continue..." key
read -t5 -n1 -r -p 'Press any key in the next five seconds...' key
read -n1 -p "Pick a letter to run a command [A, B, or C for more info] " runCommand
read -d'' -s -n1
read -p "Are you sure? " -n 1 -r
read -p "Are you sure? (y/n) " -n 1
read -t 3 -n 1 -p "Is this a good question (y/n)? " answer
read -n 1 -p "Is this a good question (y/n)? " answer
read line
parec --raw --channels=1 --latency=2
od -N2 -td2
head -n1
cut -d' ' -f2-
tr -d ' '
IFS=$'\n' read -d '' -ra files < <(find /foo -name "*.txt")
source "$( dirname "$( which "$0" )" )/lib/B"
awk 'FNR==NR { array[$1]++; next } { n = asorti(array,sort); for (i=1; i<=n; i++) if (sort[i] <= $1 + 10 && sort[i] >= $1 - 10 && $1 != sort[i]) line = (line ? line "," : line) sort[i]; print $0, line; line = "" }' file.txt{,}
column -t
od -vtx1 /dev/midi1
read -u 4 line
dig TXT -f 1.txt
read -n 1 -r
read -n1
read -n 1 c
tr -cs '[:space:]'
read -r -d $'\0' f2
read -d '' line
read -r -d $'\0'
read -r -d $'\0' content <<< "${some_variable}"
read -n10 -e VAR
read -a to_sort <<< "$1"
read sh_lock_lastPID < $sh_lock_file
du -s $i
read k
history -r "$HISTFILE"     #Alternative: exec bash
history -r
cat /dev/input/mice
od -t x1 -w3
od -A n -N 2 -t u2 /dev/urandom
date --date yesterday "+%a %d/%m/%Y"
read dt
bzip2 -dc input1.vcf.bz2 input2.vcf.bz2
awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }'
screen -dr 14313
screen -d -R -S test
screen -r foo
screen -d -r remote-command
cat
cat -n
cat f.html
grep -o \
screen -R -O -t mysession -S mysession -f
screen -x screen id
inarray=$(echo ${haystack[@]}
grep -o "needle"
wc -w)
find . -type f -exec mv '{}' '{}'.jpg \;
find /path -type f -not -name "*.*" -exec mv "{}" "{}".jpg \;
chmod -R a+rX *
chmod -R +xr directory
chmod -Rf u+w /path/to/git/repo/objects
rm -fR "${TMP}/";
rsync -nvraL test/a/ test/dest --exclude=/b/c/d
mount --rbind /dev /var/snmp3/dev
mount --rbind /sys /var/snmp3/sys
mount --rbind /something /new_something
sudo chown -R $(whoami):admin /usr/local
sudo chmod -R 777 theDirectory/
sudo chown $(whoami):$(whoami) /usr/local/rvm/gems/ruby-2.0.0-p481/ -R
chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR
chown -R $JBOSS_AS_USER:$JBOSS_AS_USER $JBOSS_AS_DIR/
chown -R tomcat7:tomcat7 webapps temp logs work conf
chown -R user_name folder
chown -R $1:httpd *
chown amzadm.root -R /usr/lib/python2.6/site-packages/
chown amzadm.root -R /usr/lib/python2.6/site-packages/awscli/
chown -R tomcat6 webapps temp logs work conf
chown -R www-data /var/www/.gnome2 /var/www/.config /var/www/.config/inkscape
sudo chown -R $(whoami) /usr/lib/node_modules/
sudo chown -R `whoami` /usr/local
sudo chown -R `whoami` /usr/local/lib
sudo chown -R `whoami` /usr/local/lib/node_modules
sudo chown -R $(whoami) ~/.npm
sudo chown -R `whoami` ~/.npm
chown -R :daemon /tmp/php_session
chown -R :lighttpd /var/lib/php/session
sudo chown -R :laravel ./bootstrap/cache
sudo chown -R :laravel ./storage
chown -R your_user_name.your_user_name 775 /home/el/svnworkspace
chown -R antoniod:antoniod /opt/antoniod/
chown -R antoniod:antoniod /var/antoniod-data/
chown -R your_user_name.your_user_name 775 /workspace
chown user1:user1 -R subdir1
chown user2:user2 -R subdir2
chown user3:user3 -R subdir3
chown "dev_user"."dev_user" -R ~/.ssh/
chown nginx:nginx /your/directory/to/fuel/ -R
chown -R owner:owner public_html
chown -R andrewr:andrewr *
find . -maxdepth 1 -not -name "." -print0
xargs --null chown -R apache:apache
ls
xargs chown -R apache:apache
sudo chown -R www-data:www-data /var/www
find /mydir -type f -name "*.txt" -execdir chown root {} ';'
sudo chown -R test /home/test
sudo chown -R $USER /usr/local/lib/node_modules
chown ftpuser testproject/ -R
chown -R nobody upload_directory
sudo chown -R $USER ~/tmp
sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}
sudo chown -R  $USER:$GROUP /var/lib/cassandra
sudo chown -R  $USER:$GROUP /var/log/cassandra
chown -R ${JBOSS_USER}: $JBOSS_LOG_DIR
sudo chown -R ec2-user:apache /vol/html
chown -R user:www-data yourprojectfoldername
ls -d *
grep -v foo
xargs -d "\n" chown -R Camsoft
sudo chown -R xxx /Users/xxx/Library/Developer/Xcode/Templates
chown -R root:root /var/cache/jenkins
chown -R root:root /var/lib/jenkins
chown -R root:root /var/log/jenkins
chgrp -R www-data /var/tmp/jinfo
find . -type d
sed -e 's/^\.\///g' -e 's/^\./avoid/g'
grep -v avoid
awk '{print $1"\t"$1}'
xargs chgrp
find . -type d
sed -e 's/^\.\///g'
awk '{print $1, $1}'
xargs chgrp
chgrp -R fancyhomepage /home/secondacc/public_html/community/
chgrp -R apache_user files
chgrp -R my_group files
chgrp -R project_dev /home/user1/project/dev
chgrp -R git .git
chgrp -R shared_group /git/our_repos
chgrp -R GROUP /path/to/repo
chgrp -R repogroup .
find . -group X_GNAME -exec chgrp Y_GNAME {} +
chgrp -R admin *
chgrp -R git ./
chgrp -R $GROUP $PATH_TO_OUTPUT_FOLDER
find ${WP_ROOT}/wp-content -exec chgrp ${WS_GROUP} {} \;
chgrp --recursive website public_html
gzip -kr .
find $2 -type f -exec bzip2 {} \;
cp -R "$1" "$2"
cp -Rp "$appname.app" Payload/
cp -r $1 $2
cp -r ../include/gtest ~/usr/gtest/include/
cp -R SRCFOLDER DESTFOLDER/
sudo cp -a include/gtest /usr/include
cp -nr src_dir dest_dir
cp -rs /mnt/usr/lib /usr/
cp -rv `ls -A
grep -vE "dirToExclude
targetDir"` targetDir
cp -r `ls -A
grep -v "c"` $HOME/
cp -Rvn /source/path/* /destination/path/
yes
cp -rf /zzz/zzz/* /xxx/xxx
cp * .hiddendir -R
rsync -rvv /path/to/data/myappdata/*.txt user@host:/remote/path/to/data/myappdata/
rsync -u -r --delete dir_a dir_b
rsync -u -r --delete dir_b dir_a
rsync --recursive emptydir/ destination/newdir
rsync -rcn --out-format="%n" old/ new/
rsync -Prt --size-only original_dir copy_dir
rsync -rvc --delete --size-only --dry-run source dir target dir
scp -r prod:/path/foo /home/user/Desktop
scp -r user@your.server.example.com:/path/to/foo /home/user/Desktop/
rsync -rvv *.txt user@remote.machine:/tmp/newdir/
rsync --recursive --exclude 'foo' * "$other"
find /path/to/source -type d
cpio -pd /path/to/dest/
find demo -depth -name .git -prune -o -print0
cpio -0pdv --quiet demo_bkp
scp -Bpqr /tdggendska10/vig-preview-dmz-prod/docs/sbo/pdf/*ela*L1*TE* dalvarado@localhost:/var/www/html/sbo/2010/teacher/ela/level1
rsync -r --verbose --exclude 'exclude_pattern' ./* /to/where/
rsync -zvr --exclude="*" --include="*.sh" --include="*/" "$from" root@$host:/home/tmp/
rsync --recursive --prune-empty-dirs --include="*.txt" --filter="-! */" dir_1 copy_of_dir_1
find . -type f -exec scp {} hostname:/tmp/{} \;
scp -r A D anotherhost:/path/to/target/directory
rsync -rvv /path/to/data/myappdata user@host:/remote/path/to/data/myappdata
rsync -rvv --recursive /path/to/data/myappdata user@host:/remote/path/to/data/newdirname
scp -r myServer:/something
cp -Rvn /source/path/* /destination/path/
scp -i /path/to/your/.pemkey -r /copy/from/path user@server:/copy/to/path
rsync -auv -e ssh --progress sourcedir/ user@dest.com:/dest/dir/
find . -path './pma' -prune -o -path './blog' -prune -o -path './punbb' -prune -o -path './js/3rdparty' -prune -o -print
egrep '\.php
\.as
\.sql
\.css
\.js'
grep -v '\.svn'
xargs cat
sed '/^\s*$/d'
wc -l
find . -type f -name '*.c' -exec cat {} \;
sed '/^\s*#/d;/^\s*$/d;/^\s*\/\//d'
wc -l
find . -name .svn -delete
find  . -name \*.txt -print -exec cat {} \;
find posns -type f -exec split -l 10000 {} \;
find . -type f  -mtime +7
tee compressedP.list
parallel compress
find . -type f  -mtime +7
tee compressedP.list
xargs -I{} -P10 compress {} &
cat searches.txt
xargs -I {} -d, -n 1 grep  -r {}
find . -name "*zip" -type f
xargs ls -ltr
tail -1
find . -type f -print0
xargs -0 ls -drt
tail -n 1
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
find . -type f
xargs ls -ltr
tail -n 1
find . -type f -printf '%T@ %p\n'
sort -n
tail -1
cut -f2- -d" "
sed 's/.*/"&"/'
xargs ls -l
find . -type f -printf '%TY-%Tm-%Td %TH:%TM: %Tz %p\n'
sort -n
tail -n1
grep -rnw "pattern"
find . -type f \( -name "*.pas" -o -name "*.dfm" \) -print0
xargs --null grep --with-filename --line-number --no-messages --color --ignore-case "searchtext"
find ./ -name "file_pattern_name"  -exec grep -r "pattern" {} \;
find . -name "*.pdf" -print0
xargs -0 rm -rf
find . -name '*.pdf' -exec rm -f {} \;
find . -name "*.pdf" -exec rm {} \;
find . -name "*.pdf" -print0
xargs -0 rm
find . -name '*.pdf' -exec rm {} +
find . -name "*.png" -mtime +50 -exec rm {} \;
fgrep --include='STATUS.txt' -rl 'OPEN'
xargs -L 1 dirname
find -type f -name "STATUS.txt" -exec grep -q "OPEN" {} \; -exec dirname {} \;
find / -name "*.dbf"  -exec dirname {} \; 2> /dev/null
sort -u
find / -name \*.dbf -print0
xargs -0 -n1 dirname
sort
uniq
find . -name "*.txt"
xargs grep -i "text_pattern"
find ./ -iname "*.bz2" -exec bzip2 -d {} \;
find ./ -type f -exec grep -H 'text-to-find-here' {} \;
find / -type f
xargs grep 'text-to-find-here'
find .
xargs grep 'word' -sl
grep -r OPEN *
awk '{split($1, path, ":"); print path[1]}'
xargs -I{} dirname {}
find . -type f
egrep -v '\.bz2'
xargs bzip2 -9 &
find / -type f -exec grep -l "text-to-find-here" {} \;
find ~/ -type f -exec grep -H 'text-to-find-here' {} \;
sudo find . \( -name "*.log" -o -name "*.trc" \) -mtime -1
sudo xargs ls -ltr --color
less -R
find . -depth -type f -not -name *.itp -and -not -name *ane.gro -and -not -name *.top -exec rm '{}' +
find . -type f  -mtime +7
tee compressedP.list
xargs -I{} -P10 compress {} &
grep -inr "Text" folder/to/be/searched/
grep -rnw `pwd` -e "pattern"
find . -name '.git'
xargs dirname
find . -type f -print0
xargs -0 -n1 -P4 bzip2
find . -type f -exec bzip2 {} +
find /path/to/dir -type f -exec bzip2 {} \;
find . -type f -name some_file_name.xml -exec grep -H PUT_YOUR_STRING_HERE {} \;
find . -name '*.js'
grep -v excludeddir
find /project/directory -iname '*.php' -or -iname '*.phtml'
grep -iv '/some/directory'
xargs xgettext
find -iname example.com
grep -v beta
find .  \( ! -path "./output/*" \) -a \( -type f \) -a \( ! -name '*.o' \) -a \( ! -name '*.swp' \)
xargs grep -n soc_attach
find . -type f -ls 2>/dev/null
sort -M -k8,10
head -n5
find . -type f -print0
xargs -0 stat -f "%m %N"
sort -rn
head -1
cut -f2- -d" "
grep "class foo" **/*.c
find ./ -type f
xargs grep "foo"
grep -r --include "*.txt" texthere .
egrep -R "word-1
word-2” directory-path
egrep -w -R "word-1
word-2” directory-path
grep -r -H "text string to search” directory-path
grep [option] "text string to search” directory-path
grep -insr "pattern" *
grep --include="*.xxx" -nRHI "my Text to grep" *
tree -F coreutils-8.9
sed -r 's
── (.*)/$
── DIR: \1
'
mount -v
grep smbfs
awk '{print $3}'
xargs ls -lsR
diff -rq /dir1 /dir2
grep -E "^Only in /dir1.*"
sed -n 's/://p'
awk '{print $3"/"$4}'
tree
ls **/*.py **/*.html
stat --printf="%y %n\n" $(ls -tr $(find * -type f))
ls -ldt $(find .)
ls -ld $(find .)
mount --make-rprivate /
rsync -rvz --progress --remove-sent-files ./dir user@host:/path
rsync -rvz -e 'ssh -p 2222' --progress --remove-sent-files ./dir user@host:/path
find /path/to/srcdir -type f -print0
xargs -0 -i% mv % dest/
tree -d
tree .
tree -a .
tree $absolute/path/of/your/dir
find $(pwd) -name \*.txt -print
find ./ -type f -print -exec grep -n -i "stringYouWannaFind" {} \;
find . -name "*.class" -print0
xargs -0 -n1 dirname
sort --unique
grep -RIl "" .
yes n
rm -r *.txt
yes
rm -r *.txt
rm -r $TMPDIR
rm -r classes
find X -depth -type d -exec rmdir {} \;
find -depth -type d -empty -exec rmdir {} \;
find . -depth -type d -empty -exec rmdir {} \;
find -type d -empty -exec rmdir -vp --ignore-fail-on-non-empty {} +
find . -name "FILE-TO-FIND" -exec rm -rf {} +
find . -name "FILE-TO-FIND" -exec rm -rf {} \;
find . -depth -name .svn -exec rm -fr {} \;
find . -name .svn -exec rm -rf {} +
find . -name .svn -exec rm -rf {} \;
find . -name .svn
xargs rm -fr
find . -name .svn
xargs rm -rf
rm -rf /usr/local/{lib/node{,/.npm,_modules},bin,share/man}/npm*
find [path] -type f -not -name 'EXPR'
xargs rm
find . -type f -not -name '*txt'
xargs rm
find .
grep -E "(__pycache__
\.pyc
\.pyo$)"
xargs rm -rf
find . -name "*.pyc"
xargs -I {} rm -v "{}"
find . -name "*.pyc" -exec rm -rf {} \;
find . -name "*.pyc"
xargs rm -rf
find . -name '*.pyc' -print0
xargs -0 rm
rm **/*.pyc
rm `find . -name \*.pyc`
find . -type f -name "*.py[c
o]" -exec rm -f {} +
find ./ -type f -name '*.r*' -delete -printf "%h\0"
xargs -0 rmdir
find . -name \*.xyz -exec rm {} \;
rm `find ./ -name '.DS_Store'` -rf
find . -name "._*" -print0
xargs -0 rm -rf
find a -type f -name '4' -delete -printf "%h\0"
xargs -0 -r rmdir
rm /var/www/html/**/_* /var/www/html/**/.DS_Store
find . -iname '*.pyc' -print0
xargs -0 --no-run-if-empty  rm
find . -name .svn -exec rm -v {} \;
find /home/ubuntu/wars -type f -name "*.war" -exec rm {} \\;
find <file path> -name "myFile.*" -exec rm -f {} ;
find . -type d -name .svn -print0
xargs -0 rm -rf
find /your/target/path/ -type f -exec rename 's/special/regular/' '{}' \;
find . -name "*.t1" -exec rename 's/\.t1$/.t2/' '{}' \;
grep -r "string here" *
tee >(wc -l)
find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
find . -type f \! -name '*.xml' -print0
xargs -0 rename 's/$/.xml/'
find -f \( -exec sed -i s/foo/bar/g \; , -name \*foo\* -exec rename 's/foo/bar/ {} \; \)
find . -name "*_test.rb"
xargs -s 1000000 rename s/_test/_spec/
find . -name "*_test.rb"
xargs -P 4 rename s/_test/_spec/
find . -name "*_test.rb"
xargs rename s/_test/_spec/
find ./dir1 -type f -exec basename {} \;
find . -exec file {} \;
grep -r -l 'searchtext' .
sort
uniq
xargs perl -e "s/matchtext/replacetext/" -pi
grep -Ri "pattern" *
awk '{if($1 != "Binary") print $0}'
find ~/test -type d -exec basename {} \;
chmod -R 777 ../tools
chmod -R 755 /directory
chmod 755 /folder -R
sudo chmod 755 -R /opt/lampp/htdocs
sudo chmod 755 -R /whatever/your/directory/is
sudo setfacl -R -m u:www-data:rwx -m u:`whoami`:rwx app/cache app/logs
zcat -r /some/dir/here
grep "blah"
xxx
& tee /dev/null
exec > >(tee -a $HOME/logfile) 2>&1
bunzip2 -c compressedfile.bz2
yourfilterprogram
{ time find / &>/dev/null; } 2>&1
grep real
{ time ls -l >/dev/null; }
& grep real
{ time find / 2>/dev/null; } 2>time.txt
date -j -f "%a %b %d %H:%M:%S %Y %z" "Sat Aug 09 13:37:14 2014 +1100"
mount / -o remount,rw
mount -n -o remount /
mount -o remount,rw -t yaffs2 /dev/block/mtdblock3 /system
mount -o remount,ro -t yaffs2 /dev/block/mtdblock3 /system
sudo mount -o remount -o exec /dev/sda7
mount -o remount,size=40G /dev/shm
mount -o rw,remount /dev/stl12 /system
mount -o ro,remount /dev/stl12 /system
sudo mount -i -o remount,suid /home/evgeny
mount /media/Working/ -oremount,umask=000
mount /mnt/mountpoint -oremount,ro
mount /mnt/mountpoint -oremount,rw
mount -o remount,ro /path/to/chroot/jail/usr/bin
mount -o remount,ro /system
mount -o remount,rw /system
mount -o rw,remount /system
mount -o remount,ro /system
mount -n -o remount -t extX /dev/hdaX /
mount --bind point mnt
mount -o rw,remount -t rfs /dev/stl12 /system
mount -o rw,remount -t yaffs2 /dev/block/mtdblk4 /system
mount -o ro,remount -t yaffs2 /dev/block/mtdblk4 /system
mount --bind olddir newdir
mount -oremount /
mount /outside /inside -o bind
mount --bind /usr/bin /path/to/chroot/jail/usr/bin
mount -o rw,remount -t rootfs /
comment=$(cat /proc/sys/kernel/random/uuid
sed 's/\-//g')
echo -e "test1\ntest2\ntest3"
tr -d '\n'
grep "test1.*test3"
cat infile
sed 's/\r$//'
od -c
rename _dbg.txt .txt **/*dbg*
find . -name .DS_Store -exec git rm --ignore-unmatch --cached {} +
bind -r '\e'
find . -name ".DS_Store" -exec rm {} \;
find `pwd` -name core -ctime +4 -execdir /bin/rm -f {} \;
machnum=$(hostname
sed 's/^machine//')
rev input
uniq -f1
rev
find . -iname CVS -type d
xargs rm -rf
find . -name core -ctime +4 -exec /bin/rm -f {} \;
find /tmp -name core -type f -print
xargs /bin/rm -f
find /usr/ports/ -name work -type d -print -exec rm -rf {} \;
find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
find . \( -name '*.bak' -o -name *.backup \) -type f -atime +30 -exec rm '{}' ';'
find . -type f -name \*.bak -print0
xargs -0 rm -v
find . -name '*.doc' -exec rm "{}" \;
find -name '*.log' -delete
find ./ -name '*.log' -print0
xargs -0 rm
find ./ -name '*.log'
xargs rm
find ./ -name '*.log'
xargs -I{} sh -c "if [ -f {}.gz ]; then rm {}; fi"
find . -type f -name '*.m4a' -exec bash -c 'rm "$0"' '{}' \;
find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1
xargs    -n1 rm
find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1
xargs    rm
find tmp -maxdepth 1 -name *.mp3 -print0
xargs    -0 rm
rm `find tmp -maxdepth 1 -name '*.mp3'`
find $backup_path/*.sql -mtime +5 -exec rm -f {} \;
find $backup_path/* -name *.sql -mtime +30 -exec rm {} \;
find . -name "*.swp"
xargs rm
find . -name "*.swp" -print0
xargs -0 rm
find . -name "*.swp"-exec rm -rf {} \;
find /tmp -name "*.tmp" -print0
xargs -0 rm
find /tmp -name "*.tmp"
xargs rm
find $HOME/. -name *.txt -ok rm {} \;
find /home/u20806/public_html -maxdepth 1 -mmin +5 -type f -name "*.txt" -delete
find /home/u20806/public_html -maxdepth 1 -mmin +5 -type f -name "*.txt" ! -name "robots.txt" -delete
find /home/u20806/public_html -name "robots.txt" -o -maxdepth 1 -mmin +5 -type f -name "*.txt" -delete
find . -name '*bak' -exec rm -i {} \;
find . -name '*~' -ok rm {} \;
find dir -name \*~
xargs echo rm
ksh -s
find . -name '*.gz' -type f -printf '"%p"\n'
xargs rm -f
find /home/luser -type f -name '*.mpg' -exec rm -f {} \;
find /home/luser -type f -name '*.mpg' -print0
xargs -0 rm -f
find /home/luser -type f -name '*.mpg'
tr "\n" "\000"
xargs -0 rm -f
find /home/luser -type f -name '*.mpg'
xargs rm -f
find /home/luser -type f -name ‘*.mpg’
parallel rm -f
find /var/www/*.php -type f -exec rm {} \;
find . -name "new*.sh" -exec rm -f '{}' \+
find . -name "new*.sh" -exec rm -f '{}' \;
find . -name "t*.sh" -exec rm -vf '{}' \;
find /tmp -name "*.tmp" -print0
xargs -0 rm
find /tmp -name "*.tmp"
xargs rm
find /full/path/dir -name '*.txt' -exec /bin/rm {} \;
find /full/path/dir -name '*.txt' -print0
xargs -0 rm
find . -name "*.txt" -delete
find . -name "*.txt" -exec rm {} +
find . -name "*.txt" -exec rm {} \;
find . -name "*.txt" -print0
xargs -0 rm
find . -name "*.txt"
xargs rm
find -name "*\ *.txt"
xargs rm
find . -name 'CVS' -type d -exec rm -rf {} \;
find . -type d -name CVS -exec rm -r {} \;
find temp/images/ -type f -iname Thumbs.db
while read FILE ; do rm "${FILE}" ; done
find . -name Thumbs.db -exec rm {} \;
find dir -name \\*~ -exec rm {} +
find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
find -L /usr/ports/packages -type l -delete
find -L /usr/ports/packages -type l -delete
cat data.csv
rev
cut -d, -f-5
rev
tr -cd ";0-9"
find ~/ -name 'core*' -exec rm {} \;
find /path/to/dir -name "test" -type d -delete
find /path/to/dir -name "test" -type d -exec rm -rf {} \;
find -name "test" -type d -delete
find -path "*/test" -type d -delete
find -path "*/test/*" -delete
find . -name test -type d -exec rm -r {} +
find . -name test -type d -exec rm -r {} \;
find . -name test -type d -print0
xargs -0 rm -r --
find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
find \! -name . -type d -print0
xargs -0 rmdir
find ./ -type d -size 0c -print
xargs rmdir
find /tmp -type f -empty -print
xargs rm -f
find ./ -type f -empty -print0
xargs -0 rm
find ./ -type f -size 0c -print
xargs rm
find . -depth  -type d  -empty -exec rmdir {} \;
find . -type d
tac
xargs rmdir 2>/dev/null
find $HOME \( -name a.out -o -name '*.o' \) -atime +7 -exec rm {} \;
find . -name test -delete
find . -name test -exec rm -R "{}" \;
find . -name test -exec rm {} \;
find /home -name Trash -exec rm {} \;
yes
/bin/rm -i *
find /home/foo \( -name '.DS_Store' -or -name '._.DS_Store' -or -name '._*' -or -name '.TemporaryItems' -or -name '.apdisk' \) -exec rm -rf {} \;
/usr/bin/find /home/user/Series/ -iname "*sample*" -exec rm {} \;
find /home/user/Series/ -iname '*sample*' -exec rm {} \;
find -type f -printf %P\\n
sort
comm -3 MANIFEST -
xargs rm
find . -name "* *" -exec rm -f {} \;
find .
egrep -v "\.tex
\.bib"
xargs rm
find .
grep -v "excluded files criteria"
xargs rm
find -iname '*~'
xargs rm
find / -type f -print0
xargs -0 grep -liwZ GUI
xargs -0 rm -f
find . -name not\* -print0
xargs -0 rm
find . -name not\*
tr \\n \\0
xargs -0 rm
find . -name not\*
xargs -d '\n' rm
find $backup_path/* -mtime +30 -exec rm {} \;
find /myfiles -atime +30 -exec rm {} ;
find . -name abc.xxx -exec rm {} \;
find ~/backups/mydatabasename/* -mtime +30 -exec rm {} \;
find . -mtime +10
xargs rm
find . -name '*[+{;"\\=?~()<>&*
$ ]*' -exec rm -f '{}' \;
find . -name FOLDER1 -prune -o -name filename -delete
find . \( -name junk -o -name dummy \) -exec rm '{}' \;
find / \( -name tmp -o -name '*.xx' \) -atime +7 -exec rm {} \;
find / -newerct '1 minute ago' -print
xargs rm
find /file/path ! -newermt "Jul 01" -type f -print0
xargs -0 rm
find / -type f -print0
xargs -0 grep -liwZ GUI
xargs -0 rm -f
find /mnt/zip -name "*prefs copy" -print
xargs rm
find . -type f -mtime +3 –exec rm –f {} \;
find "$DIR" -type f -atime +5 -exec rm {} \;
find /home/user/Maildir/.SPAM/cur -type f -exec rm '{}' +
find /home/user/Maildir/.SPAM/cur -type f -exec rm -f '{}' '+'
find /home/user/Maildir/.SPAM/cur -type f
xargs rm
find /myfiles -atime +30 -exec rm {} \;
find -exec rm '{}' +
find . -name heapdump* -exec rm '{}' \; -print >delete.txt
find /home/peter -name no-such-thing*
xargs rm
find /home/peter -name *~ -print0
xargs -0 rm
find /home/peter -name *~
xargs rm
find . -name 'spam-*'
xargs rm
find ./js/ -type f -name "*.js"
xargs rm -f
find . -type f -name "*.txt" -exec rm {} \; -print
find . -type f -name "*.txt" -print
xargs rm
find . -type f -name "*.txt"
xargs    -I {} ksh -c "echo deleting {}; rm {}"
find . -type f -name "*.txt"
xargs    -i ksh -c "echo deleting {}; rm {}"
find . -name "vmware-*.log" -exec rm '{}' \;
find . -name vmware-*.log -delete
find . -name vmware-*.log -print0
xargs -0 rm
find . -name vmware-*.log
xargs -i rm -rf {}
find . -name vmware-*.log
xargs rm
find . -name "*.c" -print0
xargs -0 rm -rf
find . -name "*.c"
xargs rm -rf
find -mindepth 1 -depth -print0
grep -vEzZ '(\.git(/
$)
/\.gitignore$)'
xargs -0 rm -rvf
find . -name libEGL*
xargs rm -f
find . -name libGLE*
xargs rm -f
find -name "*"
xargs rm -f
find /path -type f -exec rm '{}' +
find /path -type f -exec rm '{}' \;
find /path -type f -print
xargs rm
find . -type f ! -regex ".*/\(textfile.txt\
backup.tar.gz\
script.php\
database.sql\
info.txt\)" -delete
find . -type f -mtime 1 -exec rm {} +
find . -type f -newermt "Aug 10" ! -newermt "Aug 17" -exec rm {} \;
find . -type f -not -name '*ignore1' -not -name '*ignore2'
xargs rm
find . -type f -not -name '*ignore1' -o -not -name '*ignore2'
xargs rm
find . -type f -not -name '*txt' -print0
xargs -0 rm --
find ./ -type f -exec rm -rf {} \;
find ~/Books -type f -name Waldo -exec rm {} \;
find "$DIR" -type f -atime +5 -exec rm {} \;
find /var/log/remote/ -daystart -mtime +14 -type f -exec rm {} \;
find "$DIR" -type f -atime +5 -exec rm {} \;
find /old/WordPress/ -type f -regex ".*\.\(php\
css\
ini\
txt\)" -exec rm {} \;
find /tmp -type f -name '*' -mtime +7 -print0
xargs -0 rm -f
tr -d ' '
find . -maxdepth 1 -type d \( ! -name "bar" -a ! -name "foo" -a ! -name "a" -a ! -name "b" \) -delete
find $HOME/. -name *.txt -ok rm {} \;
diff -rq /dir1 /dir2
grep -E "^Only in /dir1.*"
sed -n 's/://p'
awk '{print $3"/"$4}' xargs -I {} rm -r {}
find . -name .svn -type d
while read ss; do dir=$(dirname "$ss"); test $(ls -a "$dir"
wc -l) == 3 && echo "svn rm \"$dir\""; done
find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1
xargs -n1 rm
find tmp -maxdepth 1 -name '*.mp3' -maxdepth 1
xargs rm
find tmp -maxdepth 1 -name *.mp3 -print0
xargs -0 rm
find . -name "vmware-*.log" -exec rm '{}' \;
find . -name vmware-*.log -delete
find . -name vmware-*.log
xargs rm
find . -name vmware-*.log -print0
xargs -0 rm
find . -name vmware-*.log
xargs -i rm -rf {}
cat infile.txt
tr -d "[:space:]"
fold -80
find / -type f -print0
xargs -0 grep -liwZ GUI
xargs -0 rm -f
sed '/^$/d;s/ /\//g' struct.txt
xargs mkdir -p
finger
colrm 34 39
basename /home/jsmith/base.wiki .wiki
path=$(basename $path)
find /media/1Tb/videos -maxdepth 1 -type d -mtime +7 -exec rm -rf {} \;
awk '{print(NR"\t"$0)}' file_name
sort -t$'\t' -k2,2
uniq --skip-fields 1
sort -k1,1 -t$'\t'
cut -f2 -d$'\t'
awk '{print(NR"\t"$0)}' file_name
sort -t$'\t' -k2,2
uniq -u --skip-fields 1
sort -k1,1 -t$'\t'
cut -f2 -d$'\t'
nl -w 8 "$infile"
sort -k2 -u
sort -n
cut -f2
variable=$(echo "$variable"
tr ' ' '\n'
nl
sort -u -k2
sort -n
cut -f2-)
sort
uniq -u
xargs -r rm
find -type d -exec rmdir --ignore-fail-on-non-empty {} + ;
find /srv/${x} -type d -empty -exec rmdir {} \;
find /srv/abc/ -type d -empty -exec rmdir {} \;
find . -depth -empty -type d -delete
rmdir --ignore-fail-on-non-empty newBaseDir/Data/NewDataCopy
rm -ri *
find -mindepth 1 -maxdepth 1 -print0
xargs -0 rm -rf
rm -rf *
find . -maxdepth 1
grep -v "exclude these"
xargs rm -r
echo '1/2 [3] (27/03/2012 19:32:54) word word word word 4/5'
sed -e 's/(.*)//' -e 's/[^0-9]/ /g'
column -t
find . -inum 31246 -exec rm [] ';'
find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
find . -name "-F" -exec rm {} \;
find / -nouser -exec rm {} +
find / -nouser -exec rm {} \;
find / -nouser -ok rm {} \;
find ~ -atime +100 -delete
find ~/clang+llvm-3.3/bin/ -type f -exec basename {} \;
xargs rm
find . -type f -mtime +31 -print0
xargs -0 -r rm -f
find . -name "file?" -exec rm -vf {} \;
find  -name '*-*x*.*'
xargs rm -f
find /path/to/files* -mtime +5 -exec rm {} \;
find /work \( -fprint /dev/stderr \) , \( -name 'core' -exec rm {} \; \)
find <directory> -type f -size +1M -delete
find . -type f -size +1M -exec rm {} +
find <directory> -type f -size -1M -delete
find <directory> -type f -size -1M -print0
xargs -0 rm
find . -size -1M -exec rm {} \;
find . -type f -size -1M -exec rm {} +
find /mnt/zip -name "*prefs copy" -print0
xargs -0 -p /bin/rm
find . -name "* *" -exec rm -f {} \;
find . -inum $inum -exec rm {} \;
find -regex '^.*/[A-Za-z]+-[0-9]+x[0-9]+\.[A-Za-z]+$'
xargs echo rm -f
find . -type f -name "Foo*" -exec rm {} \;
echo $filename
rev
cut -f 2- -d '.'
rev
find . -name "*.*" -type f -exec grep -l '<img-name>-<width:integer>x<height:integer>.<file-ext> syntax' {} \;
xargs rm -f
ssh-keygen -f "/root/.ssh/known_hosts" -R gitlab.site.org
compaudit
xargs chmod g-w
find /path/to/junk/files -type f -mtime +31 -exec rm -f {} \;
find /path/to/junk/files -type f -mtime +31 -print0
xargs -0 -r rm -f
echo t1_t2_t3_tn1_tn2.sh
rev
cut -d_ -f3-
rev
awk '{gsub(/^[ \t]+
[ \t]+$/,""); print;}' in.txt
hexdump -C
less
var="$(hg st -R "$path"
sed "s/\(^ *\
*\$\)//g")"
echo "   wordA wordB wordC   "
sed -e 's/^[ \t]*//'
sed -e 's/[ \t]*$//'
echo "$string"
sed -e 's/^[ \t]*//'
sed -e 's/[ \t]*$//'
grep -v 'kpt#' data.txt
nl -nln
paste -sd "" file.txt
tr -d '\n' < yourfile.txt
./series.bc
tr -d '\n'
sed 's.\\..g'
find . -name '*~' -print0
xargs -0 rm
find /tmp/ -ctime +15 -type f -exec rm {} \;
find . -type f -print0
xargs -0 -n1 echo rm
sh -x
find -type f
grep -P '\w+-\d+x\d+\.\w+$'
sed -re 's/(\s)/\\\1/g'
xargs rm
find -type f
grep -P '\w+-\d+x\d+\.\w+$'
xargs rm
find . -name '*.bak' -type f -atime +30 -exec csh -c 'test -s $1:r
rm $1' '{}' ';'
find . -iname *.js -type f -exec sed 's/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
find . -type f -exec sed '1s/^\xEF\xBB\xBF//' -i.bak {} \; -exec rm {}.bak \;
find sess_* -mtime +2 -exec rm {} \;
echo aa
wc -l
tr -d ' '
find /path/to/dir -type d
tac
while read LINE; do target=$(dirname "$LINE")/$(basename "$LINE"
tr -d ' '); echo mv "$LINE" "$target"; done
DIR_PATH=`readlink -f "${the_stuff_you_test}"`
find -name "123*.txt" -exec rename 's/^123_//' {} ";"
rename 's/^123_//' *.txt
find /home -type f -name "*.ext" -exec perl -pi -e 's/\r//g' {} \;
find /home -type f -name "*.ext" -exec sed -i -e "s/\r$//g" {} \;
find /home -type f -name "*.ext" -exec sed -i -e "s/\x0D$//g" {} \;
find /home -type f -name "*.ext" -exec sed -i -e 's/^M$//' {} \;
find /home -type f -name "*.ext" -print0
while read -r -d "$(printf "\000")" -r path; do awk '{ sub("\r$", ""); print }' $path > $path"_new"; done
find /home -type f -name "*.ext" -print0
while read -r -d "$(printf "\000")" -r path; do cat $path
tr -d '\r' > $path"_new"; done
find /home -type f -name "*.ext" -print0
while read -r -d "$(printf "\000")" -r path; do dos2unix $path $path"_new"; done
find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg" -exec rm -rf {} \;
find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg"
xargs rm
find -inum 752010 -exec rm {} \;
find ~/ -atime +100 -exec rm -i {} ;
sudo rm -rf bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node
rm -r bin/node bin/node-waf include/node lib/node lib/pkgconfig/nodejs.pc share/man/man1/node.1
find /tmp -type f \( -name '*.txt' \)
cut -c14-
nl
history
cut -c 8-
cat $filename
rev
cut -c 3-
rev
echo 987654321
rev
cut -c 4-
rev
echo "filename.gz"
sed 's/^/./'
rev
cut -d. -f2-
rev
cut -c2-
sed 's/^/./'
rev
cut -d. -f2-
rev
cut -c2-
tail -n 1 "$file"
wc -c
xargs -I {} truncate "$file" -s -{}
echo "mpc-1.0.1.tar.gz"
sed -r 's/\.[[:alnum:]]+\.[[:alnum:]]+$//'
echo $path
rev
cut -d'/' -f4-
rev
sed '/pattern to match/d' ./infile
echo
ssh-keygen -P ''
ssh-keygen -f ~/.ssh/id_rsa -P ""
PATH=$(echo $PATH
tr ":" "\n"
grep -v $1
tr "\n" ":")
find -maxdepth 1 -type f -newermt "Nov 22" \! -newermt "Nov 23" -delete
find ./ -type f -newer /tmp/date.start ! -newer /tmp/date.end -exec rm {} \;
find -type f -newermt "Nov 21" ! -newermt "Nov 22" -delete
find . -type f -name "*.java" -exec perl -p -i -e "s/[ \t]$//g" {} \;
find . -type f -print0
xargs -0 perl -pi -e 's/ +$//'
find . -type f -print0
xargs -0 perl -pi.bak -e 's/ +$//'
find . -type f -not -iwholename '*.git*' -print0
xargs -0 perl -pi -e 's/ +$//'
var=`hg st -R "$path"
sed -e 's/  *$//'`
find . -path ./vendor -prune -o \( -name '*.java' -o -name '*.xml' -o -name '*.css' \)  -exec gsed -i -E 's/\t/    /' \{} \; -exec gsed -i -E 's/[[:space:]]*$//' \{} \; -exec gsed -i -E 's/\r\n/\n/' \{} \;
find . -type f -name "*.java" -exec perl -p -i -e "s/[ \t]$//g" {} \;
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -exec sed -i 's/[:space:]+$//' \{} \;  -exec sed -i 's/\r\n$/\n/' \{} \;
find dir -not -path '.git' -iname '*.py' -print0
xargs -0 sed --in-place=.bak 's/[[:space:]]*$//'.
find . -name '*.rb'
xargs -I{} sed -i '' 's/[[:space:]]*$//g' {}
find . \( -name *.rb -or -name *.html -or -name *.js -or -name *.coffee -or -name *.css -or -name *.scss -or -name *.erb -or -name *.yml -or -name *.ru \) -print0
xargs -0 sed -i '' -E "s/[[:space:]]*$//"
find . -not \( -name *.jpg -prune -o -name *.png -prune -o -name *.ttf -prune \) --type f -print0
xargs -0 sed -i '' -E "s/[[:blank:]]+$//"
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -exec sed -i "s/[[:space:]]*$//g" "{}" \;
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0
xargs -0 sed -i '' -E "s/[[:space:]]*$//"
find . -not \( -name .svn -prune -o -name .git -prune \) -type f -print0
xargs -0 file -In
grep -v binary
cut -d ":" -f1
xargs -0 sed -i '' -E "s/[[:space:]]*$//"
find . -type f -not -iwholename '*.git*' -print0
xargs -0 sed -i .bak -E "s/[[:space:]]*$//"
find dir -type f -exec sed -i 's/ *$//' '{}' ';'
find dir -type f -print0
xargs -0 sed -i .bak -E "s/[[:space:]]*$//"
find dir -type f -print0
xargs -r0 sed -i 's/ *$//'
find . -type f -name '*' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
find . -type f -name "*.txt" -exec sh -c 'for i;do sed 's/[[:space:]]*$//' "$i">/tmp/.$$
cat /tmp/.$$ > "$i";done' arg0 {} +
find . -type f -name "*.txt" -exec sh -c 'for i;do sed 's/[[:space:]]*$//' "$i">/tmp/.$$
mv /tmp/.$$ "$i";done' arg0 {} +
find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+
perl -pe 's/((:\S*){3}):\S*/$1/g' file
column -t
sed -r 's/((:[^: \t]*){3}):[^ \t]*/\1/g' file
column -t
find /mydir -atime +100 -ok rm {} \;
find /mydir -atime +100 -ok rm {} \;
sudo rm /var/lib/mongodb/mongod.lock
rm -rf folderName
rm foo
rmdir latest
yum remove subversion
ls -t *.log
tail -$tailCount
xargs rm -f
nl -nrz -w10 -s\; input
sed -r 's/55//; s/([0-9]{2})-([0-9]{2})-([0-9]{4})/\3\2\1/'
nl -nrz -w10 -s\; input
sed -E 's/55//; s/([0-9]{2})-([0-9]{2})-([0-9]{4})/\3\2\1/'
unalias sudo
sudo yum clean all
find /Users -type d -iname '*.bak' -print0
xargs -0 rmdir
find /path/to/the/folder -depth -type d -print0
xargs -0 rmdir
find . -type d -empty -exec rmdir "{}" \;
find . -type d -exec rmdir {}\;
find . -newer first -not -newer last -type d -print0
xargs -0 rmdir
find /foo/bar -type d -depth -exec rmdir -p {} +
find /thepath -type d -empty -print0
xargs -0 rmdir -v
find $homeDirData -type d -mmin +10 -print0
xargs -0 rmdir
find "$DELETEDIR" -mindepth 1 -depth -type d -empty -exec rmdir "{}" \;
ls -tp
grep -v '/'
tail -n +"$1"
xargs -I {} rm -- {}
ls -tp
grep -v '/$'
tail -n +6
tr '\n' '\0'
xargs -0 rm --
ls -tp
grep -v '/$'
tail -n +6
xargs -I {} rm -- {}
ls -tQ
tail -n+4
xargs rm
ls -tp
grep -v '/$'
tail -n +6
xargs -d '\n' rm --
find . -maxdepth 1 -type f
xargs -x ls -t
awk 'NR>5'
xargs -L1 rm
find . -maxdepth 1 -type f -printf '%T@ %p\0'
sort -r -z -n
awk 'BEGIN { RS="\0"; ORS="\0"; FS="" } NR > 5 { sub("^[0-9]*(.[0-9]*)? ", ""); print }'
xargs -0 rm -f
ls -C1 -t
awk 'NR>5'
xargs rm
ls -tr
head -n -5
xargs rm
rm `ls -t
awk 'NR>5'`
rm -v *.bak
rm -f A*.pdf
sudo rm -rf /usr/local/bin/npm /usr/local/share/man/man1/node* /usr/local/lib/dtrace/node.d ~/.npm ~/.node-gyp /opt/local/bin/node opt/local/include/node /opt/local/lib/node_modules
rm -f *.pdf
ls
xargs rmdir
rmdir ed*
rmdir edi edw
rm -d symlink
rmdir --ignore-fail-on-non-empty $newBaseDir/Data/NewDataCopy
ls -1
grep -v -e ddl -e docs
xargs rm -rf
rm junk1 junk2 junk3
rm $(<xaa)
rm -f ~/.android/adbkey ~/.android/adbkey.pub
finalName=$(basename -- "$(dirname -- "$path")")
finalName=$(dirname ${path#*/})
echo 'test/90_2a5/Windows'
xargs dirname
xargs basename
find . -type d
xargs rmdir
find . -name ".DS_Store" -print0
xargs -0 rm -rf
find . -iname "Thumbs.db" -print0
xargs -0 rm -rf
unalias python
grep -v "pattern" filename > filename2; mv filename2 filename
brew unlink bash-completion
head -n -2 myfile.txt
tac file
sed -e '/./,$!d'
tac
sed -e '/./,$!d'
sudo mv /usr/bin/php /usr/bin/~php
mv Tux.png .Tux.png
mv blah1 blah1-new
mv blah2 blah2-new
mv fghfilea jklfilea
rename -v 's#/file##' v_{1,2,3}/file.txt
mv file0001.txt 1.txt
mv file001abc.txt abc1.txt
mv new old -b -S .old
mv new old -b
mv old tmp
mv original.filename new.original.filename
mv {,new.}original.filename
mv svnlog.py svnlog
mv -T www_new www
mv $file $(echo $file
rev
cut -f2- -d-
rev).pkg
find /volume1/uploads -name "*.mkv" -exec rename 's/\.mkv$/.avi/' \{\} \;
find -maxdepth 3 -mindepth 3 -type f -iname '*.jpg' -exec rename -n 's/jpg$/jpeg/i' {} +
find . -maxdepth 2 -mindepth 2 -name '*.jpg' -exec sh -c 'echo mv -- "$0" "${0%%.jpg}.jpeg"' {} \;
mv "$(readlink -f dirln)" dir2
find . -maxdepth 2 -type d
sed 'p;s/thumbs/thumb/'
xargs -n2 mv
find . -type d -exec rename 's/^thumbs$/thumb/' {} ";"
find . -type d
awk -F'/' '{print NF, $0}'
sort -k 1 -n -r
awk '{print $2}'
sed 'p;s/\(.*\)thumbs/\1thumb/'
xargs -n2 mv
find . -name .git -prune -o type f -name "*$lower1*" -exec mmv "*$lower1*" "#1$lower2#2" {} +
find . -name '*.PNG' -exec bash -c 'git mv {} $(dirname {})/$(basename {} .PNG)48.png' \;
find -name '*.html' -print0
xargs -0 rename 's/\.html$/.var/'
find ../<dirname> -name '*.jpg' -exec sh -c 'mv "$0" "$(basename $(dirname $0))-${0%.JPG}$.jpg"' {} \;
find . -name '*.jpg' -exec sh -c 'mv "$0" "${0%.JPG}$.jpg"' {} \;
find . -name '*.jpg' -exec sh -c 'mv "$0" "$(basename $(dirname $0))-${0%.JPG}$.jpg"' {} \;
find temp/large -iname "*.jpg" -printf 'mv %p %p\n'
sed 's/\.jpg$/_LRG\.jpg/'
while read l; do eval $l; done
find temp/medium -iname "*.jpg" -printf 'mv %p %p\n'
sed 's/\.jpg$/_MED\.jpg/'
while read l; do eval $l; done
find . -iname '*.jpg'
while read fn; do name=$(basename "$fn") ; dir=$(dirname "$fn") ; mv "$fn" "$dir/$(basename "$dir")-$name" ;done ./lib/bukovina/version.jpg ./lib/bukovina/bukovina-version.jpg
find . -name '*.jpg' -exec bash -c 'd="${1%/*}"; mv "$1" "$d/$d-${1##*/}"' - '{}' \;
find . -name '*.jpg' -execdir bash -c 'd="${PWD##*/}"; [[ "$1" != "$d-"* ]]
mv "$1" "./$d-$1"' - '{}' \;
find . -type f -iname '*.txt' -print0
xargs -0 rename .txt .abc
for f in `find -name '*company*'` ; do mv "$f" "`echo $f
sed s/company/nemcompany/`" ; done
rename 's/\.html$/\.txt/' *.html
for file in *.html; do mv "$file" "${file%.html}.txt"; done
find
rename 's/\.jpg$/.jpeg/'
rename 's/_h.png/_half.png/' *.png
find . -name "*.txt"
sed "s/\.txt$//"
xargs -i echo mv {}.txt {}.bak
sh
find ../D44203 -iname '2.jpg'
while read fn; do name=$(basename "$fn") ; dir=$(dirname "$fn") ; mv "$fn" "$dir/$(basename $(pwd))-$name" ;done
find . -type d -iname '*foo*' -depth -exec rename 's@Foo@Bar@gi' {} +
find . -name CVS -prune -o -exec mv '{}' `echo {}
tr '[A-Z]' '[a-z]'` \; -print
rename -f 'y/A-Z/a-z/' *
rename 'y/A-Z/a-z/' *
rename s/0000/000/ F0000*
rename 's/^fgh/jkl/' fgh*
for f in fgh*; do mv "$f" $(echo "$f"
sed 's/^fgh/jkl/g'); done
md5sum *
sed -e 's/\([^ ]*\) \(.*\(\..*\)\)$/mv -v \2 \1\3/e'
find -name 'access.log.*.gz'
sort -Vr
rename 's/(\d+)/$1+1/ge'
find ./ -type f -exec bash -c 'mv "$1" "$(echo "$1"
sed -re '\''s/^([^-]*)-\s*([^\.]*)/\L\1\E-\2/'\'' -e '\''s/ /_/g'\'' -e '\''s/_-/-/g'\'')"' - {} \;
find . -type f -inum 31467125 -exec mv {} new_name.html \;
sudo mv edited_blah.tmp /etc/blah
find . -name "*.andnav" -exec rename -v 's/\.andnav$/\.tile/i' {} \;
find . -name "*.andnav"
rename "s/\.andnav$/.tile/"
mv file.txt.123456 $(ls file.txt.123456
rev
cut -c8-
rev)
find . -type f -inum 31467125 -exec /bin/mv {} new_name.html \;
find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
find . -type f -exec bash -c 'for f do d=${f%/*} b=${f##*/} nb=${b//[^A-Za-z0-9._-]/_}; [[ $b = "$nb" ]]
echo mv "$f" "$d/$nb"; done' _ {} +
find . -name "article.xml" -exec rename 's/article/001_article/;' '{}' \;
find . -mindepth 2 -maxdepth 2 -name "*.so" -printf "mv '%h/%f' '%h/lib%f'\n"
sh
find . -name "*.so" -printf "mv '%h/%f' '%h/lib%f'\n"
bash
mv $1 `echo $1
tr '[:upper:]' '[:lower:]'`
ls folder/*.html
xargs -I {} sh -c 'mv $1 folder/`basename $1 .html`.txt' - {}
ls *.html
xargs -I {} sh -c 'mv $1 `basename $1 .html`.txt' - {}
tmux movew -r
echo $(yes image.png
head -n10)
yes image.png
head -n10
xargs echo
history
sed "s/  / $UID /"
echo "a,b"
sed 's/,/\r\n/'
cat "$file"
sed -e 's/,,/, ,/g'
column -s, -t
less -#5 -N -S
sed 's/,,/, ,/g;s/,,/, ,/g' data.csv
column -s, -t
awk '{gsub(/-/,"0",$4);gsub(/-/,"0",$5)}1' test.in
column -t
echo -e "Testing\r\nTested_Hello_World"
awk -v RS="_" '{ print $0; }'
od -a
echo -e "Testing\r_Tested"
awk -v RS="_" '{ print $0; }'
od -a
sed -i s/'dummyvalue'/$(hostname -I
head -n1
awk '{print $1;}')/g filename
find -name "*.xml" -exec sed -s --in-place=.bak -e 's/firstWord/newFirstWord/g;s/secondWord/newSecondWord/g;s/thirdWord/newThirdWord/g' {} \;
find . -name "*.php" -exec sed -i 's/foo/bar/g' {} \;
find . -name "*.php" -print
xargs sed -i 's/foo/bar/g'
find .
xargs sed -i ‘s/foo/bar/g’
find . -type f -not -name “.*” -print
xargs sed -i ‘s/foo/bar/g’
sort inputfile
uniq
sort -o inputfile
find ./ -type f -exec sed -i 's/string1/string2/g' {} \;
ln -f -s -T `readlink SomeLibrary
sed 's/version.old/version.new/'` SomeLibrary
find ./ -type f -exec sed -i 's/company/newcompany/' {} \;
find -type f -print0
xargs -0 sed -i .bakup 's/company/newcompany/g'
tr  ' ' '-'
sudo find . -type f -exec sed -i 's/置換前/置換後/g' {} \;
sed -i.bak "s#https.*\.com#$pub_url#g" MyHTMLFile.html
removestr=$(echo "$list"
tr ":" "\n"
grep -m 1 "^$removepat\$")
sed "s/,/\t/g" filename.csv
less
echo "bla@some.com;john@home.com"
sed -e 's/;/\n/g'
sed -ibak -e s/STRING_TO_REPLACE/REPLACE_WITH/g index.html
sed -i 's/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g' index.html
sed s/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g index.html
tee index.html
sed -i.bak s/STRING_TO_REPLACE/STRING_TO_REPLACE_IT/g index.html
sed -i bak -e s/STRING_TO_REPLACE/REPLACE_WITH/g index.html
cat input.txt
sed 's/string/longer_string/g'
column -t
find . -type f -maxdepth 1 -exec sed -i "s/$P_FROM/$P_TO/g" {} \;
awk -F, 'BEGIN {OFS = ","} {gsub("-([0-9.]+)", "(" substr($3, 2) ")", $3); print}' inputfile
sed -i ':a;N;$!ba;s/\n/,/g' test.txt
sed ':a;N;$!ba;s/\n/ /g'
sed 'x;G;1!h;s/\n/ /g;$!d'
sed -e ':a' -e 'N' -e '$!ba' -e 's/\n/ /g'
sed ':a;N;$!ba;s/\n/ /g' file
sed -z 's/\n/ /'g
sed -e '{:q;N;s/\n/ /g;t q}' file
tr -sc '[:punct:]' '\n'
find . -name 'php.ini' -exec sed -i 's/log_errors = Off/log_errors = On/g' "{}" \;
find /home/www -type f -print0
xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find /home/www/ -type f -exec perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g' {} +
find /home/www/ -type f -exec sed -i 's/subdomainA\.example.com/subdomainB.example.com/g' {} +
find /home/www/ -type f
xargs perl -pi -e 's/subdomainA\.example\.com/subdomainB.example.com/g'
find . -type f -print0
xargs -0 perl -i.bak -pe 's/subdomainA\.example\.com/subdomainB.example.com/g'
find . \( ! -regex '.*/\..*' \) -type f -print0
xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find . -maxdepth 1 -type f -print0
xargs -0 sed -i 's/toreplace/replaced/g'
find . \( -name "*.php" -or -name "*.html" \)
xargs grep -l StringA
xargs sed -i -e 's/StringA/StringB/g'
find . -name foo_fn exec sed -i s/foo_fn/bar_fn/g '{}' \;
find . -name '*.php' -print0 -o -name '*.xml' -print0 -o -name '*.phtml' -print0
xargs -0 sed -i '' 's/2013 Magento Inc./2012 Magento Inc./g'
find /home/www -type f -name '*.cpp'  -exec sed -i 's/previousword/newword/g' '{}' \;
find /myprojects -type f -name '*.cpp' -print0
xargs -0 -n 1 sed -i 's/previousword/newword/g'
find /myprojects -type f -name *.cpp -print0
xargs -0 sed -i 's/previousword/newword/g'
find /home/www -type f -print0
xargs -0 sed -i 's/subdomainA.example.com/subdomainB.example.com/g'
find ./cms/djangoapps/contentstore/management/commands/tests -iname *.css
xargs sed -i s/[Ee][Dd][Xx]/gurukul/g
find ./cms/djangoapps/contentstore/views -iname *.css
xargs sed -i s/[Ee][Dd][Xx]/gurukul/g
find %s -iname *.css
xargs sed -i s/[Ff][Oo][Oo]/bar/g
find -name '*.[ch]' -exec sed -i 's/\<foo\>/bar/g' {} +
find ./ -type f -name '*.html'
xargs sed -i 's/<title>/sblmtitle\n<title>/g'
cat log
tr -s [:blank:]
cut -d' ' -f 3-
ARGS="--ignore `echo ${TO_IGNORE[@]}
tr ' ' ','`"
find /tmp/ -depth -name "* *" -execdir rename 's/ /_/g' "{}" \;
find -name "* *" -type d
rename 's/ /_/g'
find -name "* *" -type f
rename 's/ /_/g'
find $DIR -type f -name '*.html' -exec sed -i 's/.*<script type="text\/javascript" charset="utf-8" src="file.js"><\/script>.*/<script type="text\/javascript" charset="utf-8" src="file2.js"><\/script>/g' {} \;
tr '[:blank:]' \\t
cat text.txt
tr -s ' '
cut -d ' ' -f 4
echo $MOUNT_OPTS
tr , \\\n
grep '^acl$' -q
paste -sd: INPUT.txt
echo "1\n2\n3\n4\n5"
paste -s -d, /dev/stdin
grep -v '^$' YOURFILE
nl -s= -w99
tr -s ' ' p
grep -o "_foo_" <(paste -sd_ file)
tr -d '_'
tr -s '\t' < thefile.txt
tr '\t' ' ' > the_modified_copy.txt
find -name "* *" -type d
rename 's/ /_/g'
find -name "* *" -type f
rename 's/ /_/g'
find /tmp/ -depth -name "* *" -execdir rename " " "_" "{}" ";"
find /tmp/ -depth -name "* *" -execdir rename 's/ /_/g' "{}" \;
find . -depth -name '* *'
while IFS= read -r f ; do mv -i "$f" "$(dirname "$f")/$(basename "$f"
tr ' ' _)" ; done
sudo ln -sf /usr/local/ssl/bin/openssl `which openssl`
find . -type f -name '*.txt'
xargs --replace=FILE sed --in-place 's/foo/baz/' FILE
find ./ -type f -exec sed -i 's/string1/string2/' {} \;
history
sed 's/^ */&\n/; :a; s/ \(.*\n\)/.\1/; ta; s/\n//'
find . -type f -name "*.yaml" -print0
xargs -0 sed -i -e "s/HOGE/MOGA/"
find . -type f -print0
xargs -0 sed -i -e "s/HOGE/MOGA/"
find . -type f -print0
xargs -0 sed -i.bak -e "s/HOGE/MOGA/"
history
sed 's/^\( *[0-9]*\) */\1../'
find -type f -name '*.txt' -print0
xargs --null perl -pi -e 's/Windows/Linux/'
find . -name '*.txt' -print
xargs perl -pi -e's/Windows/Linux/ig' *.txt
find .
grep favicon\.ico
xargs -n 1 cp -f /root/favicon.ico
find . -name \*.c -print
find /mydir1 /mydir2 -size +2000 -atime +30 -print
find /mydir1 /mydir2 -size +2000 -atime +30 -print
df -k /tmp
tail -1
awk '{print $4}'
df -k /tmp
tail -1
tr -s ' '
cut -d' ' -f4
df
grep /dev/disk0s2
df -k /example
df -k /tmp
df -h /dir/inner_dir/
df -k /dir/inner_dir/
df -k /some/dir
df -h .
df -k .
df -i $PWD
df -h path-to-file
df .
df -k .
df -h
df -ih
df $path_in_question
grep " $path_in_question$"
df -Ph
column -t
df -Ph
perl -ne 'chomp; printf "\n%-40s %8s %8s %8s %8s %-20s", split / +/, $_, 6 ; '
df -kt<type>
df -Ph
df -BG
df -k
df -P
df --total
df -i
df -i
df --total -BT
tail -n 1
sed -E 's/total *([^ ]*).*/\1/'
df -m
awk '{ SUM += $2} END { print SUM/1024/1024"TB" }'
df -h /
df -H --total /
df --total -BT
tail -n 1
df --total -BT
tail -n 1
df --total
tail -n 1
df -H --total /
echo -e "length(FOO_NO_EXTERNAL_SPACE)==$(echo -ne "${FOO_NO_EXTERNAL_SPACE}"
wc -m)"
echo -e "length(FOO_NO_LEAD_SPACE)==$(echo -ne "${FOO_NO_LEAD_SPACE}"
wc -m)"
echo -e "length(FOO_NO_TRAIL_SPACE)==$(echo -ne "${FOO_NO_TRAIL_SPACE}"
wc -m)"
echo -e "length(FOO_NO_WHITESPACE)==$(echo -ne "${FOO_NO_WHITESPACE}"
wc -m)"
echo -e "length(FOO)==$(echo -ne "${FOO}"
wc -m)"
grep "^core id" /proc/cpuinfo
sort -u
wc -l
grep '^core id' /proc/cpuinfo
sort -u
wc -l
{ time sleep 1 ; } 2> time.txt
{ time sleep 1 2> sleep.stderr ; } 2> time.txt
time sleep 1
timestamp=`date --rfc-3339=seconds`
t1=$(date -u -d "1970.01.01-$string1" +"%s")
TODAY=$(date  -d "$(date +%F)" +%s)
MOD_DATE1=$(date -d "$MOD_DATE" +%s)
dig @$ns $d A
grep $d
grep -v "DiG"
dig +trace +additional dragon-architect.com
awk 'NR==3' RS="\n\n"
dig +short -f -
uniq
dig +short myip.opendns.com @resolver1.opendns.com
dig mx example.com
grep -v '^;'
grep example.com
dig NS +aaonly com.
ssh -f user@host "echo foo; sleep 5; echo bar"
dig @ns1.hosangit.com djzah.com +noall +authority +comments
awk -f script.awk
ssh-keygen -pf private.key
ssh -O exit officefirewall
ssh -O exit otherHosttunnel
source ~/.profile
readlink -f $(which firefox)
cd "`pwd -P`"
readlink -e /foo/bar/baz
readlink -m FILE
readlink $(which python2.7)
head -1 table
tr -s ' ' '\n'
nl -nln
grep "Target"
cut -f1
uname -v
grep -o '#[0-9]\+'
find . -name 'abc' -type f -exec grep -q xyz {} +
df /full/path
grep -q /full/path
find . -mnewer poop
find /home/pat -iname "*.conf"
find . -type d -printf '%d:%p\n'
sort -n
tail -1
find / -newer myfile
find / -size +50M -iname "filename"
somecommand
true
groups $1
grep -q "\b$2\b"
a=$(false)
a=$(false)
false
false
echo "${PIPESTATUS[0]}"
foo=$(false)$(true)
MYVAR=`git ls-files -m
wc -l
tr -d ' '`
ls -ltq  <path>
head -n 1
ls -t
head -n1
find $DIR -type f -exec stat --format '%Y :%y %n' "{}" \;
sort -nr
cut -d: -f2-
head -n 1
find . -name '*tests*' -print -exec false \;
cat dax-weekly.csv
awk '1 { last = NR; line[last] = $0; } END { print line[1]; for (i = last; i > 1; i--) { print line[i]; } }'
tail -r myfile.txt
echo 35 53 102 342
tr ' ' '\n'
tac
tr '\n' ' '
echo "aaaa eeee bbbb ffff cccc"
tr ' ' '\n'
tac
tr '\n' ' '
output=$(echo $input
fold -w4
tac
tr -d \\n)
cat ${TMP}/${SCRIPT_NAME}.kb
sort -rh;
cat ${TMP}/${SCRIPT_NAME}.name
sort -r;
cat ${TMP}/${SCRIPT_NAME}.pid
sort -rh;
echo $string
rev
cut -d ' ' -f -20
uniq temp.txt
perl -e 'undef $/; $_ = <>; open(OUT,">temp.txt"); print OUT;'
pushd -2
CC=$(which cc) ./configure
CC=$(which gcc) ./configure
echo "command"
ssh user@host
./myprogram
more
myprogram
more
ssh example.com "ps -elfc; ls"
find . -type f -exec chmod 0644 {} \;
find . -type d -exec chmod 0755 {} \;
command
more
find . -type d -name .git -exec sh -c "cd \"{}\"/../
pwd
git pull
git status" \;
find . -name ".git" -type d
sed 's/\/.git//'
xargs -P10 -I{} git -C {} pull
find . -type d -name .git -exec sh -c "cd \"{}\"/../
pwd
git pull" \;
find . -mindepth 1 -maxdepth 1 -type d -print -exec git -C {} pull \;
join -t $'\t' file1 file2
join <(sort -n file1) <(sort -n file2)
HOSTNAME=$(hostname) make -e
make K_VERSION=`uname -r`
env `cat xxxx` otherscript.sh
env -u FOO somecommand
top -b -d 1
grep myprocess.exe
tee output.log
setarch `uname -m` -R ./yourProgram
env -i ./makeall.sh
/bin/sh -c "/bin/true $(seq 1 100000)"
/bin/sh -c "/bin/true $(seq 1 99999)"
seq 10
xargs -i --max-procs=4 bash -c "echo start {}; sleep 3; echo done {}"
find . -exec command {} \;
find . -exec command {} +
find . -print0
xargs -0 command
find . -print
xargs command
find . -name "*.fq"  -exec cat '{}' ';'
fastqc  /dev/stdin
find . -name "*.fq" -print0
xargs -0 -n 1 fastqc
find . -name "*.fq"
xargs -n 1 fastqc
find . -name "*.fq.gz"  -exec gunzip -c  '{}' ';'
fastqc  /dev/stdin
nohup rm -rf cache &
screen -dmS title executable
screen -x title
env - `cat ~/cronenv` /bin/sh
find . -name "*.txt" -print -exec awk '$9 != ""
n < 10 {print; n++}' {} \;
find . -name "*.txt" -print -exec awk '$9 != "" {print; if(NR > 9) exit; }' {} \;
find . -name "*.txt" -print -exec awk '{if($9!=""
n<11){print;n++}}' {} \;
find . -name '*txt' -print -exec awk 'BEGIN {nl=1 ;print FILENAME} $9 !="" {if (nl<11) { print $0 ; nl = nl + 1 }}' {}  \;
find ./ -type f -print0
xargs -0 -n1 md5sum
sort -k 1,32
uniq -w 32 -d --all-repeated=separate
sed -e 's/^[0-9a-f]*\ *//;'
for i in `find . -exec echo {} \;`; do cmd1 $i; cmd2 $i; done
/usr/bin/sudo -u `whoami` `which program`
echo "su whoami"
ssh remotehost
arr=$( $line
tr " " "\n")
find whatever -print0
xargs -0 command
echo "df -k;uname -a"
ssh 192.168.79.134
find
xargs ipython nbconvert
( cd /tmp; mycommand )
env -i perl -V
rsync $OPTS $FIND $BACKUPDIR
cat $2
grep -v "#"
ssh -t $1 $INTERPRETER
find -type f -name thumb.png -exec ./deslash.sh {} ";"
find . -type f -exec sh fixname.sh {} \;
sed -i "s#\(export\ PATH=\"\)\(.*\)#\1/home/$(whoami)/bin:~/\.local/bin:\2#" ~/.zshrc
find repository_dir/$f -type d -name needed_dir
xargs -r svn checkout
nohup java -jar program.jar &
nohup php newEmptyPHP.php &
nohup php -f 'yourscript'.php
doFirst= true
doFirst="" true
find . -type f -exec file '{}' \;
find "$@
`which find` "$@" -print0;
nohup xterm -e java -jar start.jar &
node -pe 'JSON.parse(process.argv[1]).foo' "$(cat foobar.json)"
nohup sh -c 'for i in mydir/*.fasta; do ./myscript.sh "$i"; done >output.txt' &
git -c color.status=always status
less -REX
nohup cmd1
cmd2 &
vi $(find . -type f -name 'btree*.c')
find /target/path -type f -exec your_command_here \{\} \;
find /target/path -type f -print0
xargs -0 your_command_here
cd `script`
cd `/path/to/my/script`
cd "$(node app)"
mpv --no-audio \`ls ~/Down/other/*.{mp4,flv} --color=never\`
true
echo `tty
sed 's:/dev/::'`
find . -type f -exec file '{}' \;
\time -f "%E real,%U user,%s sys" ls -Fs
command time -f "%E real,%U user,%s sys" ls -Fs
ssh -x user@server
ssh -o "StrictHostKeyChecking no" -i ${KEYDIR}/${KEY}.pem ${USERNAME}@$NAME "${COMMANDS}"
ssh -T tunneluser@111.222.333.444 <<'EOI'
ssh tunneluser@111.222.333.444 <<\EOI
ssh -l myName -p 22 hostname
ssh -p 22 myName@hostname
REL_DIR="$(ssh -t localhost "$heredoc")"
ssh -o ServerAliveInterval=60 myname@myhost.com
ssh user@server /bin/bash <<'EOT'
ssh "$1" -l pete
ssh -t SERVER 'command; bash -l'
ssh -i /path/to/ssh/secret/key $1 $2
ssh user@server
ssh -t me@machine ./executeMyScript '
' bash -i
ssh app1
ssh remote_user@server.com
ssh user@server "${SSH_COMMAND}"
ssh -i ./device_id.pem deviceuser@middle.example.org:2222
ssh -o ControlPath="$MASTERSOCK" -MNf "$@"
ssh -i ~/.ssh/gitkey_rsa "$@"
ssh -XY -t user@remote_IP 'ssh -XY -t user@remoteToRemote_IP'
myvar=`seq 1 $N
sed 's/.*/./'
tr -d '\n'`
read -a arr <<< "1 4 6 9 11 17 22"
tempfile=XXX-$(od -N4 -tu /dev/random
awk 'NR==1 {print $2} {}')
echo something
read param
history -s "$line"
history -s 'echo whatever you "want your" command to be'
echo foo
read bar
WORKSTATION=`who -m
awk '{print $5}'
sed 's/[()]//g'`
ip=$(hostname -I
awk '{print $1}')
ip=$(hostname -I)
JAVA_HOME="$( readlink -f "$( which java )"
sed "s:bin/.*$::" )"
version=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version
egrep -v '^\[
Downloading:'
tr -d ' \n'
sed -E 's/\[.*\]//g')
version=$(mvn org.apache.maven.plugins:maven-help-plugin:2.1.1:evaluate -Dexpression=project.version
egrep -v '^\[
Downloading:'
tr -d ' \n')
FOLDERS=`ls -dm $MY_DIRECTORY/*/
tr -d ' '`
FOLDERS=$(find . -type d -print0
tr '\0' ',')
foo=$(cat /dev/urandom
tr -dc '. '
fold -w 100
head -1)
files="$(find $dir -perm 755)"
find . -fprint foo
path="http://$(whoami).$(hostname -f)/path/to/file"
RAND=`od -t uI -N 4 /dev/urandom
awk '{print $2}'`
bgxjobs=" $(jobs -pr
tr '\n' ' ')"
line=$(who
cut -d' ' -f1
sort -u)
abspath=$(readlink -m $path)
abspath=$(readlink -e $path)
abspath=$(readlink -f $path)
absolute_path=$(readlink -m /home/nohsib/dvc/../bop)
export JAVA_HOME=$(readlink -f /usr/bin/java
sed "s:bin/java::")
MY_PATH=$(readlink -f "$0")
SCRIPT="$(readlink --canonicalize-existing "$0")"
SCRIPT=$( readlink -m $( type -p $0 ))
target_PWD=$(readlink -f .)
FOLDERS=$(find $PWD -type d
paste -d, -s)
FOLDERS=$(find . -type d
paste -d, -s)
var=`egrep -o '\[.*\]' FILENAME
tr -d ][`
totalLineCnt=$(cat "$file"
grep "$filter"
grep -v "$nfilter"
wc -l
grep -o '^[0-9]\+');
libdir=$(dirname $(dirname $(which gcc)))/lib
address=$(dig +short google.com
grep -E '^[0-9.]+$'
head -n 1)
CURRENT_PID_FROM_LOCKFILE=`cat $LOCKFILE
cut -f 1 -d " "`
CAT=`which cat`
MKTEMP=`which mktemp`
RM=`which rm`
TR=`which tr`
day=$(od -t x1 --skip-bytes=9 --read-bytes=1 file.moi
head -1
awk '{print $2}')
month=$(od -t x1 --skip-bytes=8 --read-bytes=1 file.moi
head -1
awk '{print $2}')
year=$(od -t x2 --skip-bytes=6 --read-bytes=2 file.moi
head -1
awk '{print $2}')
thisHOSTNAME=`hostname`
QUEUE_PIDS=$(comm -23 <(echo "$NEW_PIDS"
sort -u) <(echo "$LIMITED_PIDS"
sort -u)
grep -v '^$')
results=$(groups "$line"
tr ' ' '\n'
egrep -v "_unknown
sciences
everyone
netaccounts")
listing=$(ls -l $(cat filenames.txt))
cnt=`ps -ef
tee log
grep "cntps"
grep -v "grep"
wc -l`
LINES=$(cat /some/big/file
wc -l)
nbLines=$(cat -n file.txt
tail -n 1
cut -f1
xargs)
MERGE=$(cat $COMMIT_EDITMSG
grep -i 'merge'
wc -l)
NP=`cat /proc/cpuinfo
grep processor
wc -l`
big_lines=`cat foo.txt
grep -c "$expression"`
number=$(echo $filename
tr -cd '[[:digit:]]')
DayOfWeek=`date +%a
tr A-Z a-z`
myVar=$(tee)
read -d "$(echo -e '\004')" stdin
filename="$(uname -a)$(date)"
pushd /home/`whoami`/Pictures
local pingResults=$(LANG=C ping -q -c10 "$gateway")
fhost=`hostname -f`
hnd=$(hostname -f)
FinalDate=$(date -u -d "$string2" +"%s")
full_path=`readlink -fn -- $path`
fullpath=`readlink -f "$path"`
SELF=$(readlink /proc/$$/fd/255)
SELF=`readlink /proc/$$/fd/255`
actual_path=$(readlink -f "${BASH_SOURCE[0]}")
script="`readlink -f "${BASH_SOURCE[0]}"`"
DIR=$(dirname "$(readlink -f \"$0\")")
me=$(readlink --canonicalize --no-newline $BASH_SOURCE)
me=$(readlink --canonicalize --no-newline $0)
path=`readlink --canonicalize "$dir/$file"`
JAVA_HOME=$(readlink -f /usr/bin/java
sed "s:/bin/java::")
cat file
xclip
cat file
xclip -selection clipboard
f=$(cat numbers.txt)
cat ~/.bashrc
pbcopy
DATE=$(echo `date`)
subj="$(date) - $(hostname) - $(echo "$changes"
sed "s/$/,/"
tr "\n" " ")"
CDATE=$(date "+%Y-%m-%d %H:%M:%S")
var=( $(whoami
stat -c %i "/home") )
myvariable=$(whoami)
DIR=`pwd`/`dirname $0`
CURRENT=`pwd`
real1=$(pwd -P)
date_222days_before_TodayDay=$(date --date="222 days ago" +"%d")
DATECOMING=$(echo `date -d "20131220" +%j`)
MY_DIR=$(dirname $(readlink -f $0))
path="$( dirname "$( which "$0" )" )"
dir=$(dirname $(readlink -m $BASH_SOURCE))
dir=$(dirname $(readlink /proc/$$/fd/255))
md5=($(md5sum file))
HOSTZ=$( hostname
cut -d. -f1 )
yes
awk 'FNR<4 {print >>"file"; close("file")}  1'
more
echo $j
read k
bar=$(cat foo.txt
{ read bat;echo $bat;})
local=$(hostname -I
awk '{print $2}'
cut -f1,2,3 -d".")
subnet=$(hostname -i
cut -d. -f1,2,3)
DC=`hostname
cut -b1,2`
extract_dir=$(diff .dir_list_1 .dir_list_2
grep '>'
head -1
cut -d' ' -f2)
full_f="$(which f)"
path=`which oracle`
foo=`which ~/f`
THIS=`readlink -f "${BASH_SOURCE[0]}" 2>/dev/null
echo $0`
ver=`echo -ne "$1\n$2"
sort -Vr
head -n1`
STAMP=`date -r file_name`
timestamp=$(find ./$dir -type f -printf "%T@ %t\\n"
sort -nr -k 1,2
head -n 1)
line_to_be_replaced=`cat itemlist.json
nl
sed -n '/"item_1"/,/"item_2"/p'
grep -in "}]"
awk '{print $2}'`
find -type f -name '*.au' > names.txt
find . -type f -name "*.html" > html_files.txt
find `pwd` -name "*.log" > sas_log_list.txt
find . -name '*.py'
tee output.txt
xargs grep 'something'
find . -name "*.py" -type f > output.txt
find / -type f -atime -10 > March.files
find . -maxdepth 1 -type d > dirs_to_remove
find -maxdepth 2 -type d -ls >dirlist
find . -type d -mtime 14 -printf "%P\n" > deploy.txt
find . -type d -mtime 14
sed -e 's,^\./,,' > deploy.txt
find . -type f -exec grep -l 'ExtJSLogin' {} \;
grep -v 'change-app-name.sh' > files.txt
find . -print0 > mypipe
find . -name '*2011*' -print0 > /tmp/allfiles
find ~ -name 'Foto*' > results.txt
find . -type f -mtime -14 > deploy.txt
find . -type f -mtime -14
sed 's
./
' >deploy.txt
find . -type f -mtime -14 -printf '%f\n' > deploy.txt
basedir=$(pwd -L)
md5=$(md5sum "$my_iso_file"
cut -d ' ' -f 1)
md5=`md5sum ${my_iso_file}
awk '{ print $1 }'`
twofish=`echo -n $twofish
md5sum
tr -d "  -"`
find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
filename="$(uname -n)-$(date +%F).txt"
size="$(zcat "$file"
wc -c)"
candidates=$(which -a $cmd
wc -l)
MYVAR=`git ls-files -m
wc -l
tr -d ' '`
server_id=`hostname
tr 'A-Za-z-.' ' '
tr -d '[[:space:]]'
awk '{print NR}'`
gv=$(echo -e $kf'\n'$mp
sort -t'.' -g
tail -n 1)
packet_loss=$(ping -c 5 -q $host
grep -oP '\d+(?=% packet loss)')
END_ABS=`pwd -P`
WORKSTATION_IP=`dig +short $WORKSTATION`
DBPREFIX="$(hostname -s).mysqldb"
hostname=`hostname -s`
HOSTNAME="`hostname`"
HOSTNAME=$(hostname)
HOST=$(hostname)
myHostName=`hostname`
proc_load_average=$(w
head -1
cut -d" " -f12
cut -d"," -f1-2
tr ',' '.')
v=$(whoami
awk '{print toupper($0)}')
v=$(whoami
perl -e 'print uc <>')
v=$(whoami
tr 'a-z' 'A-Z')
v=$(whoami
tr [:lower:] [:upper:])
me="$(whoami)"
me=$(whoami)
whoami=$(whoami)
x=$(whoami)
find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
perl -e '@T=localtime(time-86400);printf("%02d/%02d/%04d",$T[3],$T[4]+1,$T[5]+1900)'
read dt
(time ls) > ls_results 2> time_results
{ time ls; } 2>&1
cat > time.txt
tmux_version="$(tmux -V
cut -c 6-)"
var2=$(echo $myvar
wc -c)
uiTotalSize=$(ls -l -R $1
grep -v ^d
awk '{total+=$5;} END {print total;}')
a=$(echo $each
wc -c)
cal=$(echo $(cal "$month" "$year"))
(time ls) > outfile 2>&1
do=$(cal -m $mo $yo
awk 'NR>2&&!/^  /{print$1;exit}')
true
true
false
true
false
true
false
true
false
true
size=`cat script.sh
wc -c`
base=$(dirname $(readlink $file))
host=$(dig +short -x "${ip_address}"
sed 's/\.$//g')
result=$(groups "$line"
sed 's/ /\n/g'
egrep -v "_unknown
sciences
everyone
netaccounts")
inode=`ls -i ./script.sh
cut -d" " -f1`
check_script_call=$(history
tail -1
grep myscript.sh )
userlist=$(w
awk 'BEGIN{ORS=","}NR>2{print $1}'
sed 's/,$//' )
a=`w
cut -d' ' -f1`;
b=`w
cut -d' ' -f1`;
OUTPUT="$(ls -1)"
var=$(ls -l)
dir=$(dirname -- "$1")
dir_context=$(dirname -- "$1")
tmp=$(w
awk '{print $1}')
n_max=`ls .
wc -l`
set SCRIPTPATH=`dirname "$SCRIPT"`
set `cal $month $year`
set -- $(cal 2 1900)
DIR=$(dirname "$(readlink -f \"$0\")")
FILES=`cat $RAW_LOG_DIR
xargs -r`
local old_nullglob=$(shopt -p nullglob)
false
tee /dev/null
find /etc -type f -exec cat '{}' \;
tr -c '.[:digit:]' '\n'
grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find /usr -inum 1234 -print
find /  -size +100M -exec rm -rf {} \;
find . -perm 777 -print
find . -atime +7 -print
find . \( -user aa1 -o -name myfile \) -print
find .  -size 10 print
find . -size +10c -print
grep -f file2 file1
sort -u
grep -f file2 file1
sort
uniq
grep -of ignore.txt input.txt
sort
uniq -c
cat inputfile
grep "^t\:"
split -l 200
gunzip -c mygzfile.gz
grep "string to be searched"
history
grep -A 4 -B 3 whatyousearchfor
MYUSERS=`grep $MYGROUP /etc/group
cut -d ":" -f4
tr "," "\n"`
find /directory/containing/files -type f -name "*.txt" -exec grep -H 'pattern_to_search' {} +
find . -name ‘*.x’ -print0
xargs -0 grep fred
find . -name '*.[ch]'
xargs grep -E 'expr'
find /dev/shm /tmp -type f -ctime +14
find /etc -type f -mmin -10
find /etc -type f -ctime -1
find /path/to/your/directory -regex '.*\.\(avi\
flv\)'
find /public/html/cosi -name "wiki.phtml"
find /root/directory/to/search -name 'filename.*'
find /some/directory -user joebob -print
find /tmp -size -100c
find /usr /home  /tmp -name "*.jar"
find /usr /home  /tmp -name "*.jar" 2>/dev/null
find /usr/bin -type f -mtime -10
find /usr/bin -type f -atime +100
find /usr/local -maxdepth 1 -type d -name '*[0-9]'
find /usr/local -type d -name '*[0-9]'
find /usr/src ! \( -name '*,v' -o -name '.*,v' \) '{}' \; -print
find /var -regex '.*/tmp/.*[0-9]*.file'
find /var/log -size +10M -ls
find /tmp /var/tmp -size +30M -mtime 31 -ls
which -a rename
xargs file -L
which -a rename
xargs readlink -f
xargs file
find . -name \*.c -exec grep hogehoge {} \;
find . -name \*.c -print
xargs grep hogehoge
find . -name \*.c -print0
xargs -0 grep hogehoge /dev/null
find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
find . -name "*.[ch]" -exec grep --color -aHn "e" {} \;
find . -name "*.c" -exec grep -i "keyword" {} ";"
find . -name '*.java' -mtime +7 -print0
xargs -0 grep 'swt'
find ~/.personal/tips -type f -iname "*.pdf"  -exec pdftotext '{}' - ';'
grep hot
find . -name \*.py
xargs grep some_function
find . -iname '*.pdf' -exec pdfgrep -i keyword {} +
find . -name "*.py"
xargs grep 'import antigravity'
find / -iname "filename"
find /home/oracle /home/database -name '*zip*'
find . -name "abc" -exec grep "xyz" {} \;
find . -name abc
xargs grep xyz
find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
find . \( -name '*.svn*' -prune  -o ! -name '*.html' \)
xargs -d '\n' grep -Hd skip 'SearchString'
find . -name whatever -print
xargs grep whatever
find -name whatever -exec grep --with-filename you_search_for_it {} \;
find . -name '*.*' -exec grep 'SearchString' {} /dev/null \;
find . -name "*1" -exec grep "1" {} +
find . -name "*1" -exec grep "1" {} \;
find . -name "*1" -print0
xargs -0 grep "1"
find . ! -name '*.html' ! -name '*.svn*' -exec grep 'SearchString' {} /dev/null \;
find . -name .git -prune -o -print
xargs grep "string-to-search"
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find *-name hi.dat
find /usr -type d -name 'My Files' -exec rsync -avR '{}' /iscsi \;  -exec rm -rf '{}'\;
find /usr -type d -name My\ Files -exec rsync -avR '{}' /iscsi \;
find . -type f -exec grep California {} \; -print
grep surfboard > SurfsUp.txt
find /var/log/ -type f -exec grep -H ‘19:26′ {} \;
find -maxdepth 1 -type f
xargs grep -F 'example'
find -type f -print0
xargs -r0 grep -F 'example'
find . -type f -exec grep string {} \;
find . -type f
xargs -d '\n' grep string
find . -name '*.pl'
xargs grep -L '^use strict'
find -name '*.[ch]'
xargs grep -E 'expr'
find . -type f -print -exec grep --color=auto --no-messages -nH "search string" "{}" \;
find -maxdepth 1 -type f
xargs grep -F 'example'
find -type f -print0
xargs -r0 grep -F 'example'
env
grep NAME
read -t 3 variable < <( tail -f logfile.log
grep "something" )
tail -f logfile.log
grep --line-buffered "something"
read -t 3
grep -ioh "facebook\
xing\
linkedin\
googleplus" access-log.txt
sort
uniq -c
sort -n
find . -type f -name "*.java" -exec grep -il 'foo' {} \;
find . -name core -exec rm {} \;
cd "$(find . -name config -type d
sed 1q)"
zcat filename.gz
grep -i user-user
find /opt /usr /var -name foo -type f
find /path/to/directory/folder{1..50} -name '*.txt'  2>/dev/null
find /path/to/directory/folder{1..50} -name '*.txt' -exec basename {} \; 2>/dev/null
find /path/to/directory/folder{1..50} -name '*.txt' -exec basename {} .txt \; 2>/dev/null
find /res/values-en-rUS /res/xml -iname '*.xml'
find /usr -type d -name backup -print
find ${CURR_DIR} -type f \( -ctime ${FTIME} -o -atime ${FTIME} -o -mtime ${FTIME} \) -printf "./%P\n"
find $dirname -type f  > $tempfile
find /Users/david/Desktop/ -type f
find /Users/david/Desktop -type f \( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \)
find /home/ABCD/ -mindepth 1 -type f -print
find /path/to/check/* -maxdepth 0 -type f
find /tmp/foo -path /tmp/foo/bar -print
find foo -path /tmp/foo/bar -print
find foo -path foo/bar -print
find lpi104-6 -inum 1988884
find "$DIR" -name \*.txt
find "${DIR}" -name "*.txt"
find $DIR -name "*.txt"
find $DIR -name "*.txt" -print
find /srv/${x} -mindepth 1 -type f -not -amin -10080 -exec rm {} \;
find -d MyApp.app -name Headers -type d -exec rm -rf "{}" \;
find MyApp.app -name Headers -type d -delete
find MyApp.app -name Headers -type d -exec rm -rf "{}" \;
find MyApp.app -name Headers -type d -exec rm -rf "{}" \;
true
find -d MyApp.app -name Headers -type d -exec rm -rf {} +
find -d MyApp.app -name Headers -type d -print0
xargs -0 rm -rf
find MyApp.app -name Headers -type d -exec rm -rf "{}" \; 2>/dev/null
find foo -name Headers
find /tmp /var/tmp -iname "testfile.txt"
find /usr/local/man /opt/local/man -name 'my*'
find /usr/share/doc /usr/doc /usr/locale/doc -name instr.txt
find foo bar -name "*.java"
find / -path excluded_path -prune -o -type f -name myfile -print
find / -name httpd.conf -newer /etc/apache-perl/httpd.conf
find / -type d -name root
find / -newerct '1 minute ago' -print
find / -name .profile
find /etc/logs/Server.log -exec grep Error {} \; -print
find . -name aaa -print
find . -name "file-containing-can't" -exec grep "can't" '{}' \; -print
find /home/ABCD/ -type f -print
od file-with-nulls
grep ' 000'
history
grep " 840"
find . -maxdepth 1 ! -regex '.*~$' ! -regex '.*\.orig$' \     ! -regex '.*\.bak$' -exec grep --color "#define" {} +
find . -newermt '2014-04-30 08:00:00' -not -newermt '2014-04-30 09:00:00'
xargs gunzip -c
grep 1234567890
zcat /proc/config.gz
grep CONFIG_64BIT
find ~jsmith -exec grep LOG '{}' /dev/null \; -print
find . -name "*.java"
xargs grep "Stock"
grep YOURSTRING `find .`
grep -ioh "facebook\
xing\
linkedin\
googleplus" access-log.txt
sort
uniq -c
sort -n
grep foo *
nl
history
grep -C 5 ifconfig
history
grep ifconfig -A5 -B5
ps -u `whoami`
grep largecalculation
pgrep -u `whoami` mpirun
cat file
grep pattern
paste -sd' '
cat file
grep pattern
paste -sd'~'
sed -e 's/~/" "/g'
find . -name "*.c"
xargs grep pattern
find .
awk '{FS = "/" ; print "", NF, $F}'
sort -n
awk '{print $2}'
xargs grep -d skip "search term"
zcat `find /my_home -name '*log.20140226*'`
grep 'vid=123'
find /dir -type f -print0
xargs -0i cat {}
grep whatever
find . -exec grep "www.athabasca" '{}' \; -print
grep ^$GROUP /etc/group
grep -o '[^:]*$'
tr ',' '\n'
find $DIR -type f -exec grep $SEARCH /dev/null {} \;
wc --bytes
find . -type f -exec grep "/usr/bin/perl" {} \; -ls
find /proc/scsi/ -path '/proc/scsi/usb-storage*' -type f
xargs grep -l 'Attached: Yes'
find ~/documents -type f -name '*.txt' -exec grep -s DOGS {} \; -print
find . -iname "$srch1*" -exec grep "It took" {} \; -print
find . -iname "$srch1*" -exec grep "It took" {} \; -print
sed -r 'N;s/(.*)\n(.*)/\2 \1/'
find . -iname "$srch1*" -exec grep "It took" {} \; -print
sed -r 'N;s/(.*)\n(.*)/\2 \1/' > temp1
find . -iname "$srch*" -exec grep "Processed Files" {} \; -print
find . -iname "$srch*" -exec grep "Processed Files" {} \; -print
sed -r 'N;s/(.*)\n(.*)/\2 \1/'
find . -iname "$srch*" -exec grep "Processed Files" {} \; -print
sed -r 'N;s/(.*)\n(.*)/\2 \1/'  > temp2
( find . -iname "dl-aster-full-20131102*" -exec grep "Processed Files" {} \;)
cut -d":" -f2
find . -name * -print0
xargs -0 grep -iH "String"
find ./ -type f -exec grep -l "Text To Find" {} \;
find ./ -type f -exec grep -Hn "Text To Find" {} \;
find ~/Documents -type f -print0
xargs -0 grep -il birthday
find -iname '*.java'
xargs grep 'class Pool'
find -maxdepth 1 -type f
xargs grep -F 'example'
find -type f -print0
xargs -r0 grep -F 'example'
find . -type f -print
xargs grep "example"
find . -type f -exec grep "example" '{}' \; -print
find sources -type f -exec grep -H foo {} +
find dir1 dir2 dir3 -type f -name "*.java" -exec grep -il 'foo' {} \;
find . -name "*.png" -prune -o -name "*.gif" -prune -o -name "*.svn" -prune -o -print0
xargs -0 -I FILES grep -IR "foo=" FILES
find ./online_admin/*/UTF-8/* -type f -exec grep -H "invalidTemplateName" {} \;
find project -name '*.php' -type f -print0
xargs -0 grep -l ireg
find .
grep 'some string'
grep js
find ./ -not -path "*/node_modules/*" -name "*.js"
xargs grep keyword
find . -type f
xargs grep "magic"
find . -iname *.txt -exec egrep mystring \{\} \;
find . -name "*.txt" -exec egrep mystring {} \;
find . -name "*.txt" -print0
xargs -0 egrep mystring
find . -name '*.txt'
xargs egrep mystring
find . -name *.txt
xargs egrep mystring
find ~/html/ -name '*.html' -exec grep organic '{}' ';'
find . -name “*.cc”
xargs grep -n “pattern”
grep pattern file
tr '\n' ' '
find /directory/containing/files -type f -name "*.txt" -exec grep -H 'pattern_to_search' {} +
find . -name '*.axvw' -exec grep -n 'some string' {} +
find . -name '*.axvw' -print0
xargs -0 grep -n 'some string'
find . -name '*js' -exec grep -n 'some string' {} \;
find . -name '*js'
grep -n  'some string'
find . -name '*.txt' -exec grep 'sometext' '{}' \; -print
find . -name “*.[txt
TXT]” -print
xargs grep “specific string”
find . -name *
xargs grep -iH "string"
find . -name \*.html -exec grep -H string-to-find {} \;
find . -exec grep -H string-to-find {} \;
find . -regex filename-regex.\*\.html -exec grep -H string-to-find {} \;
find -type f
sed 's/./\\&/g'
xargs grep string_to_find
find . -name "*.txt" -print0
xargs -0 egrep 'stuff'
find . -type f -exec grep "text" {} /dev/null \;
find . -exec grep whatIWantToFind {} \;
find / -name ‘*.*’ -exec grep -il “foobar” {} \;
find -name "*pattern*"
find . -name "*.bam"
find / -name '*.pdf'
find / -type f -name *.zip -size +100M -exec rm -i {} \;
grep ERROR $(find . -type f -name 'btree*.c')
cd "$(find . -name Subscription.java -printf '%h\n')"
find . -name '*.pl'
xargs grep -L '^use strict'
find . -name "file-containing-can't" -exec grep "can't" '{}' \; -print
find . -type f -name "*.gz" -exec zgrep 'string' {} \;
find . -type f -exec grep -o aaa {} \;
wc -l
find .
xargs perl -p -e 's/ /\n'
xargs grep aaa
wc -l
find / -type f -name "*.conf"
find $HOME -iname '*.ogg' -atime +30
find www -name \*.html -type f -exec basename {} \;
find /mnt/usb -name  "*.mp3" -print
find . -iname foo -type d
find . -iname foo
find /home -xdev -inum 2655341
find . -name "Linkin Park*"
find . -iname "*linkin park*"
find . -iname *linkin*
find . -name "*Linkin Park"
find . -iname foo -type f
find / -newer /tmp/t
find / -newer /tmp/t1 -and -not -newer /tmp/t2
find / -not -newer /tmp/t
find -user www-data -not -size +100k
find / -type f -name "*.conf"
find . -ipath '*sitesearch*' -ipath '*demo*'
find . -iregex '.*sitesearch.*' -iregex '.*demo.*'
find .
grep -i demo
grep -i sitesearch
find . -inum NUM
find . -follow -inum 41525360
find / -name *.jpg -type f -print
xargs tar -cvzf images.tar.gz
find . -name '*'
find /path/to/folders/* -type d -exec mv {} {}.mbox \; -exec mkdir {}.mbox/Messages \;
find . -name 'm?' -type d -exec mv '{}' '{}.mbox' ';' -exec mkdir '{}.mbox/Messages' ';' -exec sh -c 'mv {}.mbox/*.emlx {}.mbox/Messages' ';'
find /usr/share/man/ -regex .*/grep*
find test -type f  -size 0 -exec mv {} /tmp/zerobyte \;
find -L -type l
find . -name "*.[!r]*" -exec grep -i -l "search for me" {} \;
zcat log.tar.gz
grep -a -i "string"
find . -name '*foo*' ! -name '*.bar' -type d -print
find . -iname foo -type d
find . -size 0k
set
grep HIST
find -mindepth 2 -maxdepth 3 -name file
find -mindepth 4 -name file
find / -name 'secret.keys' -print 2>/dev/null
find . -name '*[+{;"\\=?~()<>&*
$ ]*' -maxdepth 0 -exec rm -f '{}' \;
ls
grep android
nl
find . -name file1 -or -name file9
find ~ -size +10M
find . -exec grep PENWIDTH {} \;
more
find / -type f -size +20M -exec ls -lh {} \;
awk '{ print $NF ": " $5 }'
find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
find / -type f -size +20M -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
sort -nk 2,2
find / -type f -size +20000k -exec ls -lh {} \; 2> /dev/null
awk '{ print $NF ": " $5 }'
sort -nrk 2,2
find ~ -size +20M
find ~/ -atime +100 -exec rm -i {} \;
find $HOME  -mtime 0
find $HOME  -mtime 0
find . -name \*.php -type f -exec grep -Hn '$test' {} \+
find . -name \*.php -type f -exec grep -Hn '$test' {} \;
find . -name \*.php -type f -print0
xargs -0 -n1 grep -Hn '$test'
find . -name \*.php -type f -print0
xargs -0 grep -Hn '$test'
find -maxdepth num -name query
find -mindepth num -name query
find / -size +1.1G
find / -size +100M
find -atime -5
find . -perm /222
find . -perm -664
find . -perm 664
find / -perm 777 -iname "filename"
find . -size +100k -a -size -500k
find . -iname '*demo*'
grep -i sitesearch
find . -iname '*sitesearch*'
grep demo
find /path/to/folder -path "*/ignored_directory" -prune -o -name fileName.txt -print
find . -path ./ignored_directory -prune -o -name fileName.txt -print
find . -perm -444 -perm /222 ! -perm /111
find . -perm -220
find . -perm -g+w,u+w
find . -perm /220
find . -perm /u+w,g+w
find . -perm /u=w,g=w
find . -perm /222
find . -perm -664
find . -perm 664
find / -iname '*.txt'
find /var/log/ -iname anaconda*
find /var/log/ -iname anaconda.*
find /var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
find var/log/ -iname anaconda.*
find var/log/ -iname "anaconda.*" -exec tar -rvf file.tar {} \;
find var/log/ -iname anaconda.* -exec tar -cvf file.tar {} \;
find var/log/ -iname anaconda.*
xargs tar -cvf file1.tar
tar -cvf file.tar `find var/log/ -iname "anaconda.*"`
find var/log -print0 -iname 'anaconda.*'
tar -cvf somefile.tar -T -
find . -name '*.txt'
xargs grep -m1 -ri 'oyss'
find . -name \*.coffee -exec grep -m1 -i 're' {} \;
find . -print0 -name '*.coffee'
xargs -0 grep -m1 -ri 're'
find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
find . -name \*.coffee -exec awk '/re/ {print;exit}' {} \;
find . -name \*.coffee -exec awk '/re/ {print FILENAME ":" $0;exit}' {} \;
find . -name '.?*' -prune
nl -ba  -nln  active_record.rb
grep -C 2 '^111 '
nl -ba  -nln  active_record.rb
grep '^111 '
grep '^[[:space:]]*http://'
sort -u
nl
find . ! -size 0k
find . -name "*.c" -print
xargs grep "main("
find . -type f -name "*.c" -print -exec grep -s "main(" {} \;
find -name '*.[ch]'
xargs grep -E 'expr'
find . -iname foo -type f
find /  -type f -group users
find / -type f -user bluher -exec ls -ls {}  \;
find / -type l -lname '/mnt/oldname*'
find . -name *.xml
xargs grep -P "[\x80-\xFF]"
find . -print
xargs grep -l -i "PATTERN"
find . \( \( -name .svn -o -name pdv \) -type d -prune \) -o \( -name '*.[pwi]' -type f -exec grep -i -l "search for me" {} + \)
find . -type f -exec grep -n -i STRING_TO_SEARCH_FOR /dev/null {} \;
find . -name "$1" -type f -exec grep -i "$2" '{}' \;
find . -name "$1" -type f -print0
xargs -0 grep -i "$2"
find . -name $1 -type f -exec grep -i $2 '{}' \;
find . -name '*.[ch]'
xargs grep -E 'expr'
find /var/log/apache2/access*.gz -type f -newer ./tmpoldfile ! -newer ./tmpnewfile \
xargs zcat
grep -E "$MONTH\/$YEAR.*GET.*ad=$ADVERTISER HTTP\/1" -c
find . -name '*.[ch]'
xargs grep -E 'expr'
find -user root -o -user www-data
find . -mtime +1
find . -print
xargs grep v\$process
find . -name '*.pl'
xargs    grep -L '^use strict'
find /tmp -type f -exec grep 'search string' '{}' /dev/null \+
find -iname "filename"
grep -o "+\S\+" in.txt
tr '\n' ','
find /home/*/public_html/ -type f -iwholename "*/wp-includes/version.php" -exec grep -H "\$wp_version =" {} \;
find /var/www/vhosts/*/httpdocs -type f -iwholename "*/wp-includes/version.php" -exec grep -H "\$wp_version =" {} \;
find "$searchpath" -name "$filepat.[ch]" -exec grep --color -aHn "$greppattern" {} \;
find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(\
#hyphenate' {} +
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find . -name "*.log" -exec egrep -l '^ERROR' {} \;
( find . -name '*.txt' -exec cat {} ';' )
sed 's/ /\n/g'
grep '^aaa$'
wc -l
find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +
man find
grep ...
find . -type f -exec perl -wnl -e '/\s1$/ and print' {} +
find -type f
xargs head -v -n 1
grep -B 1 -A 1 -e '^catalina'
find "$DIR" -type f -exec grep -q "$SEARCH" {} + ;
find "$DIR" -type f -exec grep "$SEARCH" {} \;
find . -name "*.xml" -exec grep "ERROR" /dev/null '{}' \+
find / -type f -print
xargs grep "device"
grep foo `find /usr/src/linux -name "*.html"`
find . -not -path "*git*" -not -name '*git*'
grep git
find . -path ./.git -prune -o -not -name '*git*' -print
grep git
find . -type f -exec grep "magic" {} \; -ls
find /etc -type f -print0 2>/dev/null
xargs -0 grep --color=AUTO -Hn 'nameserver' 2>/dev/null
more /etc/hosts
grep `hostname`
awk '{print $1}'
find /var/www/ -name wp-config.php -maxdepth 2
file $(which foo)
zegrep "xception" `find . -name '*auth*application*'`
wc -l
history
grep 'part_of_the_command_i_still_remember_here'
find .  \( -user aa1 - group grp \) -print
find . -size 10c -print
$ find . \( -name D -prune \) -o -name hi.dat
shopt -s extglob find !(D) -name hi.dat
find -path ./D -prune -o -name hi.dat -print
find . \( -name D -prune \) -o -name hi.dat
find -mindepth 3 -maxdepth 3 -type d
grep "New Parts"
find my_folder -type f -exec grep -l "needle text" {} \; -exec file {} \;
grep text
find MyApp.app -name Headers -type d -prune -exec rm -rf {} +
find -type d
find -type f
find /mydir
xargs -I{} basename {}
find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} +
grep '_START'
find /path/to/dir -type f -exec sed '/@GROUP/,/@END_GROUP/!d' {} \;
grep '_START'
find ~/mail -type f
xargs grep "Linux"
find -path './Linux/*' -name teste.tex
find data/ -name filepattern-*2009* -print > filesOfInterest.txt
find katalogi -name wzorzec
find test1 -type f -print
find test1 -type f -name 'textfile.txt' -print
find your/dir -mindepth 1 -prune -empty
find tmp -maxdepth 1 -name '*.mp3'
find . -name *.c -exec grep -n -e blash {} \;
find . -name "*.cc" -print -exec grep "xxx" {} \;
find . -name "*.cc"
xargs grep "xxx"
find . -name '*.code' -exec grep -H 'pattern' {} +
find . -name '*.code' -print0
xargs -0 grep -H 'pattern'
find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep -C 2 -i --with-filename --label="{}" --color "perry sound"' \;
find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep -i --with-filename --label="{}" --color "perry sound"' \;
find PDFs/ -name '*.pdf' -exec sh -c 'pdftotext "{}" -
grep -l -i --with-filename --label="{}" --color "perry sound"' \;
find . -name "*.txt" -print0
xargs -0 egrep 'string'
find ./bin -name “cp”
find ./in_save/ -type f -maxdepth 1
more
find . -name "*.VER" -exec grep -P 'Model-Manufacturer:.\n.' '{}' ';' -print
find . -name "*.VER" -exec grep 'Test_Version=' '{}' ';' -print;
find Lib/ -name '*.c' -print0
xargs -0 grep ^PyErr
find ./ -type f -iname "*.cs" -print0
xargs -0 grep "content pattern"
find /starting/directory -type f -name '*.css'
xargs -ti grep '\.ExampleClass' {}
find /Applications/ -name "*.java" -exec grep -i TODO {} +
find /Applications/ -name "*.java" -exec grep -i TODO {} \;
find /Applications/ -name "*.java" -print0
xargs -0 grep -i "TODO"
find . -name "*.java" -exec grep -Hin TODO {} \;
find . -name "*.java" -exec grep -i -n TODO {}  \;
find `pwd` -name "*.log" -exec grep "The SAS System" {} \;
find . -name "*.py" -type f -exec grep "something" {} \;
find . -name '*.py' -exec grep 'something' {} \; > output.txt
find . -name "*.sh"
xargs grep "ksh"
find /Applications -type d -name "*.app"
find /Path -name "file_name*"
find /Path -name "file_name*"
grep "bar"
find /Path \( -path "/Path/bar*" -o -path "/Path/foo* \) -name "file_name*"
find /Path -path "/Path/bar*" -name "file_name*"
find /Path/bar* -name "file_name*"
find /dir -regex '.*2015.*\(album.*\
picture.*\)'
find /dir
egrep '2015.*(album
picture)'
find /etc -atime -1
find /etc -type l -print
find /etc/apache-perl -newer /etc/apache-perl/httpd.conf
find /home/bozo/projects -mtime 1
find /home/pankaj -maxdepth 1 -cmin -5 -type f
find /home/sdt5z/tmp -name "accepted_hits.bam"
find /home/test -name '.ssh'
find /home/user1 -name "*.bin"
find /home/weedly -name myfile -type f -print
find /home/www -type f
find /media/shared \( -iname "*.mp3" -o -iname "*.ogg" \)
find /mnt/raid/upload -mtime -7 -print
find /mnt/raid/upload -mtime +5 -print
find /myfiles -atime +30
find /myfiles -mtime 2
find /myfiles -size 5
find /myfiles -name '*blue*'
find /myfiles -type f -perm -647
find /myfiles -type f -perm -o+rw
find /path -type f -iname "*.txt"
find /path -perm ugo+rwx
find /path ! -perm /020
find /path ! -perm /g+w
find /path -name '*.foo'
find /path ! -perm /022
find /path ! -perm -022
find /path -nouser -or -nogroup
find /path -type f
find /path -perm /ugo+x
find /path/to/dir -name \*.c
find /path/to/directory -type f -mtime 61 -exec rm -f {} \;
find /root -name FindCommandExamples.txt
find /root/ -name myfile -type f
find /root/ -name 'work' -prune -o -name myfile -type f -print
find /root/ -path '/root/work' -prune -o -name myfile -type f -print
find  /storage/sdcard0/tencent/MicroMsg/ -type f  -iname '*.jpg' -print0
find /tmp -user ian
find /tmp -size +10k -size -20k
find /tmp -regex ".*file[0-9]+$"
find /tmp -type f
find /usr -newer /tmp/stamp
find /usr/bin -type f -atime +100
find /usr/bin -type f -mtime -10
find /usr/local/doc -name '*.texi'
find /var/www ! -user apache -print0
xargs -0
find /var/www -group root -o -nogroup -print0
xargs -0 chown :apache
find . -name \*.css -print0
xargs -0 grep -nH foo
find ~/Movies/ -size +1024M
find /res/values-en-rUS /res/xml -iname '*.xml' -print0
xargs -0 -d '\n' -- grep -i "hovering_msg" --
find /res/values-en-rUS /res/xml -iname '*.xml'
while read file; do grep -i "hovering_msg" "$file"; done
find images/ -type f
find -L research -maxdepth 2 -type d ! -group ian
find bla -name "*.so"
find -iregex '.*\.py$\
.*\.xml$'
xargs egrep -niH 'a.search.pattern'
vi -R -
find . -name file1 -print
find . -name \*.pdf -print
find . -name '*.pdf' -print
find . -name "*.pdf" -print
find . -type f -perm 777 -exec chmod 755 {} \;
find . -name \*.sql
find . -name "*bsd*" -print
find ~/ -maxdepth 3 -name teste.tex
find `pwd` -name "*rc.conf"  -execdir /bin/chmod o+r {} \;
find . -maxdepth 1 -name a\*.html
find . -type f -name "*.php"
find . -maxdepth 1 ! -perm  -o=r
find . -maxdepth 1 -type f -perm -ugo=x
find \( -name 'messages.*' ! -path "*/.svn/*" ! -path "*/CVS/*" \) -exec grep -Iw uint {} +
find \( -name 'messages.*' ! -path "*/.svn/*" \) -exec grep -Iw uint {} +
find -name 'messages.*' -exec grep -Iw uint {} +
grep -Ev '.svn
.git
.anythingElseIwannaIgnore'
find . -type f -print0
xargs -0 egrep messages.
grep -Ev '.svn
.git
.anythingElseIwannaIgnore'
find . -name 'my*'
find . -name 'my*' -type f
find . -name "*.txt" -exec egrep -l '^string' {} \;
find . -type f -iname *.m4a -print
find . -name "new*.sh"
find . -iname *.mov
find . -iname "*.mov" -follow
find -type d ! -perm -111
find . -type f -exec grep -Iq . {} \; -and -print0
xargs -0 grep "needle text"
find . -type f -print0
xargs -0 grep -I "needle text"
find . -type f -print0
xargs -0 grep -IZl .
xargs -0 grep "needle text"
find . -type f
xargs grep -I "needle text"
find . -type f -exec grep -l 'string' {} \;
find . -mtime 0
find . \( -name en -o -name es \) -prune , -mtime 0 ! -name "*.swp"
find "$(pwd -P)" -mtime 0 -not \( -name '*.swp' -o -regex './es.*' -o -regex './en.*' \)
find -mtime 0 -not \( -name '*.swp' -o -path './es*' -o -path './en*' \)
find . -mtime 0 -not \( -name '*.swp' -o -regex '\./es.*' -o -regex '\./en.*' \)
find . -mtime 0
grep -v '^\./en'
grep -v '^\./es'
grep -v .swp
find . -mtime 0
grep -v '^\./en'
grep -v '^\./es'
find . -size +10M -size -50M -print
find . -perm a=rwx,g-w,o-w
find . -perm u=rwx,g=rx,o=rx
find . -perm -o+w
find . type -f -atime 2
find . type -f -amin 2
find . type -f -atime -2
find . type -f -amin -2
find . type -f -atime +2
find . type -f -amin +2
find . type -f -ctime 2
find . type -f -ctime -2
find . type -f -ctime +2
find . type -f -mtime -2
find . type -f -mtime +2
find . type -f -mtime 2
find . -type f -ctime -3
tail -n 5
find . -type f
egrep '(sdw
sdc
sdd)$' > list_1
find . -type f -name "*.$extension"
find -type f ! -perm -444
find * -type f -print
find -type f -exec grep -Iq . {} \; -and -print
find . -type f -exec grep -Iq . {} \; -and -print
find . -type f -printf '%20s %p\n'
sort -n
cut -b22-
tr '\n' '\000'
xargs -0 ls -laSr
find . -type f \( -iname "*.c" -or -iname "*.asm" \)
find . -type f \( -name "*.c" -o -name "*.sh" \)
find . -type f \( -name "*.conf" -or -name "*.txt" \) -print
find -type f -name "*.wav"
grep export
find . -name "*bash*"
find . -name "*bash*"
xargs
find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
find . -name "*.VER"
find . -name ".aux"
find . -name '*.log'  -type f  -readable  ! -size 0 -exec sed -n '1{/The SAS System/q0};q1' {} \; -print
find . -name "*.log" -exec grep -l "The SAS System" {} \; > sas_log_list.txt
find . -name .vendor -prune -o -name '*.rb' -print
find . -name '*.rb' ! -wholename "./vendor/*" -print
find . -name *.php -ctime -14
find . -type f \( -iname "*.txt" ! -iname ".*" \)
find . -type f -name file_name
find . -name '*.java' -newer build.xml -print
find . -name '*.java' -mtime +7 -print
find .  ! -regex ".*[/]\.svn[/]?.*"
find . -not -iwholename '*.svn*'
find .
grep -v \.svn
find . -name "*.rb" -or -name "*.py"
find . -name "*.rb"
find . -regex ".*\\.rb$"
find . -type f -regex ".*\.\(jpg\
jpeg\
gif\
png\
JPG\
JPEG\
GIF\
PNG\)"
find . -name "*.rb" -type f
find ./ -type f -name "*" -not -name "*.o"
find . -type f -iname \*.html -exec grep -s "Web sites" {} \;
find "$PWD" -type d
find $PWD -type d
find . -type d ! -perm -111
find -type d ! -perm -111
find . -type f -executable -print
find -executable
find . -executable -type f
find . -type f -executable -exec file {} \;
grep -wE "executable
shared object
ELF
script
a\.out"
find . -name "a.txt" -print
find -name teste.tex
find . -name '[mM][yY][fF][iI][lL][eE]*'
find . \( -name AAA -o -name BBB \) -print
find . -name test -print
find . -name pro\*
find . ! \( -name "*.exe" -o -name "*.dll" \)
find . -name \*.exe -o -name \*.dll -o -print
find . -not -name "*.exe" -not -name "*.dll"
find .
grep -v '(dll
exe)$'
find .  -perm 775 -print
find . -name "*album*" -a -name "*vacations*" -a -not -name "*2015*"
find . -name "*bash*"
xargs
find . -iname "*needle*"
find . -name "*sh*"
find
egrep string
find . -type f -perm +111 -print
find . -type f \( -perm -u=x -o -perm -g=x -o -perm -o=x \) -exec test -x {} \; -print
find . -size +10M -size -50M -print
find . -atime +10
find . -regex '.*myfile[0-9][0-9]?'
find . -\( -name "myfile[0-9][0-9]" -o -name "myfile[0-9]" \)
find . -regextype sed -regex '.*myfile[0-9]\{1,2\}'
find . -mtime -5
find . -name "accepted_hits.bam"
find `pwd` -name "accepted_hits.bam"
find -iname 'somename'
find . -name 'Subscription.java'
find . -size -50k
find -type d -exec find {} -maxdepth 1 \! -type d -iname '.note' \;
find . -iname '.note'
find . -iname '.note'
sort
find . -iname '.note'
sort -r
find . ! -name "a.txt" -print
find . -regex ".*/my.*p.$"
find . -regex ".*/my.*p.$" -a -not -regex ".*test.*"
find . -name 'my*'
find ./ -name "*TextForRename*"
find . -name '*bills*' -print
find . -not -name "*.exe" -not -name "*.dll" -not -type d
find . -not -name "*.exe" -not -name "*.dll" -type f
find . -type f ! -name "*1" ! -name "*2" -print
find . -name "*js" -o -name "*rb"
find . -regextype posix-egrep -regex ".*(rb
js)$"
find . -regextype posix-ergep -regex ".*(rb
js)$" -exec grep -l matchNameHere {} \;
find . -iregex ".*packet.*"
find . -name f* -print
find . -not -regex ".*test.*"
find .*
find . -type f \( -iname ".*" ! -iname ".htaccess" \)
find . -type f -name "*.mkv"
find . -type f -ctime -1
find ./ -type f -ls
grep '10 Sep'
find . -type f ! -perm -444
find -type f -ctime +14
find . -mtime -1 ! -name '.DS_Store' -type f -exec basename {} \;
find . -mtime -1 ! -name '.DS_Store' -type f -printf '%f\n'
find ./ -type f -name doc.txt -printf "found\n"
find . -name omit-directory -prune -o -type f
find . -name omit-directory -prune -o -type f  -print
find . \( -name omit-directory -prune -o -type f \) -print
find . \( -name omit-directory -prune \) -o \( -type f -print \)
find -type f -user www
find -type f ! -perm -444
find . -type f -print0
xargs -0 grep string
find . -type f -printf '"%p"\n'
xargs grep string
find . -type f
xargs grep string
find . -type f -atime $FTIME
find . -type f -ctime $FTIME
find . -type f -mtime $FTIME
find . -name "orapw*" -type f
find -type f -regex ".*/.*\.\(shtml\
css\)"
find . -type f \( -name "*.shtml" -o -name "*.css" \) -print
find . -type f \( -name "*.shtml" -or -name "*.css" \)
find . -type f
egrep '\.(shtml
css)$'
find `pwd` -name "*log" -type f
find . -type f -name "*keep.${SUFFIX}"
find . -type f -name $x
find . -type f -regex ".+-[0-9]+x[0-9]+\.jpg"
find . -type l -name link1
find -P . -lname '*/test*'
find . -lname '*test*'
find . -type l -xtype l
find . -lname '*sysdep.c'
find . -name "*.trc" -ctime +3 -exec ls -l {} \;
find . -name "*.trc" -ctime +3 -exec rm -f {} \;
find . -name "*.trc" -ctime +3 -exec rm {} \;
find .  \( -name work -o -name home \)  -prune -o -name myfile -type f -print
find . -maxdepth 2
find . -name 'foo.cpp' '!' -path '.svn'
find ~/ -name *.png -exec cp {} imagesdir \;
find ~/ -name *.tar.gz -newer filename
find ~/ -mtime -2 -o -newer filename
find ~/ -newer alldata.tar 	-exec tar uvf alldata.tar {} \;
find . -name 'fileA_*' -o -name 'fileB_*'
find ~/dir_data -type f  -exec chmod a-x,u+w {} \;
find $@ -not -name ss
find /path/to/some/dir/*[0-9] -type d -maxdepth 1
find /path/to/directory/folder{?,[1-4]?,50} -name '*.txt'
find $path -type f -name "*.$extension"
find "${backuppath}" -mtime -10 > file.list
find "$d" -mindepth 1 -prune -empty
find /tmp -type f -print0
find $dir -type f
find $root_dir -type f
find / -user olduser  -type f  -exec chown newuser {} \
find / -fstype ext3 -name zsh*
find / -name "*.old" -delete
find / -name "*.old" -exec /bin/rm {} \
find / -name "*~"
grep -v "/media"
find / -size +100M -exec /bin/rm {} \;
find / -fstype ext3 -name zsh -ls 2> /dev/null
find / -fstype ext3 -name zsh -ls
find / -name “*.jpg”
find / – perm -0002
find / -path /proc -prune -o -type f -perm +6000 -ls
find / -path /media -prune -o -size +200000 -print
find / -type f -regextype posix-extended -regex '.*/.{1,24}$'
find / -type f
egrep '.*/.{1,24}$'
find / -type f
egrep -o "/[^/]{0,24}$"
cut -c 2-
find / -type f
egrep "/[^/]{0,24}$"
find / -type f
awk -F'/' '{print $NF}'
awk 'length($0) < 25'
find dirname  -print0
xargs -0 grep foo
find dirname -exec grep foo {} +
find . -exec grep chrome {} +
find . -exec grep chrome {} \;
find .
xargs grep 'chrome'
find .
xargs grep 'chrome' -ls
find . -exec grep -l foo {} +
find . -exec grep -l foo {} \;
find . -exec grep foo {} +
find . -exec grep foo {} \;
find . -type f -print0
xargs -0 grep -H 'documentclass'
find . -exec grep -i "vds admin" {} \;
find . -name "string to be searched" -exec grep "text" "{}" \;
find .
xargs grep "searched-string"
find . -name "*bills*" -print0
xargs -0 grep put
find . -name '*bills*' -exec grep -H "put" {} \;
find . -name '*bills*' -exec grep put {} \;
find /directory/containing/files -type f -exec grep -H 'pattern_to_search' {} +
find /directory/containing/files -type f -print0
xargs -0 grep "text to search"
history 300
grep scp
grep important$
find "$directory" -perm "$permissions"
find $HOME -iname '*.ogg' -o -iname '*.mp3'
find ~ -name 'xx*' -and -not -name 'xxx'
find ~/ -atime +10
find ~ -name "test*" -print
find ~/ -name *.tar.gz -newer filename
find ~/ -name '*.txt'
find ~/ -mtime -2 -o newer filename
find $HOME -mtime +365
find ~ -name *.txt
find $HOME -mtime -7
find $HOME -mtime -1
find /home -user sam
find ~ -daystart -type f -mtime 1
find ~ -type f -name '*.mkv' -o -name '*.mp4' -o -name '*.wmv' -o -name '*.flv' -o -name '*.webm' -o -name '*.mov'
find ~ -type f -regex '.*\.\(mkv\
mp4\
wmv\
flv\
webm\
mov\)'
find local /tmp -name mydir -type d -print
find "$absolute_dir_path" -type f -print0
find directory_name -type f -print0
xargs -0 grep -li word
find folder_name -type f -exec grep your_text  {} \;
find . -type f -exec grep "foo" '{}' \;
find ./ -type f
xargs grep "foo"
find ./ -type f -print -exec grep -n -i "stringYouWannaFind" {} \;
find . -type f -exec grep -n "stuff" {} \; -print
find -type f -exec grep -Hn "texthere" {} +
find . -type f -exec grep -H whatever {} \;
find . -type f
xargs -L 100 grep whatever
find . -type f
xargs grep whatever
find / -maxdepth 2 \( -fstype vfat -or -fstype ntfs \) 2> /dev/null
find / -group users -iname "filename"
find / -user pat -iname "filename"
find src/ -name '*.[ch]'
find / -type l -print
perl -nle '-e
print';
find / -xdev -name \*.rpm
find / -type f -size -10k 2>/dev/null -print0
xargs -0 egrep '\bsomeknowncontent\b'
find / -type d -name "needle"
find / -type d -name "needle" 2>/dev/null
find / -group managers -print
find / -user admin -print
find  / -iname findcommandexamples.txt
find  / -name '[a-c]*'
find / -type f -iname "filename"
find . -name myfile
& grep -v 'Permission denied'
find / -name "testfile.txt"
find / -iname "testfile.txt"
find / -name myfile -type f -print 2> /dev/null
find xargstest/ -name 'file??'
find ~ Music -name '*.mp3'
find ~/Books -name Waldo
find ~/Books -type f -name Waldo
find foo bar baz -name "*.rb"
find /usr -name "Chapter*" -type f
find /usr/local -name "*.html" -type f
find /home/user1 -name \*.bin
for f in `find -name \*.jsp` ; do echo "==> $f" >> out.txt ; grep "TODO" $f >> out.txt ; done
yum search zsh
yum search mysql
grep client
grep -n 'something' HUGEFILE
head -n 1
apropos postscript
grep -i png
apropos
apropos disk
apropos -s 3 .
grep ^[a-z]
find /usr/local -name "*.html" -type f -exec chmod 644 {} \;
find htdocs cgi-bin -name "*.cgi" -type f -exec chmod 755 {} \;
apropos -s 3 .
find ~/ -name '*.txt' -print0
xargs -0 wc -w
find -type f -perm -110
find * -maxdepth 0
fg `jobs
iselect -a
grep -o [0-9]*`
fg `jobs
tr '[]' ' \n'
zenity  --list --column '' --column ''`
{ yes yes
sed 4q; yes no
sed 1q; }
./script
ping -s www.google.com 2 4
ping -c 4 -q google.comz
ping -c 5 -q 12.34.56.78
tail -n 2
ping -c 5 -b 10.10.0.255
grep 'bytes from'
awk '{ print $4 }'
sort
uniq
ping -c 5 -b 10.11.255.255
sed -n 's/.* \([0-9]\+\.[0-9]\+\.[0-9]\+\.[0-9]\+\).*/\1/p'
sort
uniq
find / -name *.mp3 -fprint nameoffiletoprintto
kill -HUP $(ps -A -ostat,ppid
grep -e '[zZ]'
awk '{ print $2 }')
kill -HUP $( cat /var/run/nginx.pid )
kill -HUP $(lsof -t -c sshd)
kill -9 `pgrep -f cps_build`
kill -9 $(lsof -t -i:8080)
kill -9 16085
kill -9 18581 18582 18583
kill -9 $(lsof -t -u daniel)
ps -o uid,pid,cmd
awk '{if($1=="username" && $3=="your_command") print $2}'
xargs kill -15
sudo kill -15 $( sudo lsof -i:6000 -t )
kill -15 $( lsof -i:6000 -t )
kill `pidof firefox`
kill $(lsof -t -i:8080)
kill $(pgrep 'python csp_build.py')
kill $(ps aux
grep '[p]ython csp_build.py'
awk '{print $2}')
kill `ps ax
grep 'python csp_build.py'
awk '{print $1}'`
ps aux
awk '$11" "$12 == "python csp_build.py" { system("kill " $2) }'
kill `pstree -p 24901
sed 's/(/\n(/g'
grep '('
sed 's/(\(.*\)).*/\1/'
tr "\n" " "`
kill $(ps -o pid= -s $(ps -o sess --no-heading --pid 21709))
kill $(ps -o pid= -s $(ps -o sess --no-heading --pid $(pgrep rsync )))
kill %1
kill $!
ps aux
grep 'python csp_build.py'
head -1
cut -d " " -f 2
xargs kill
kill -s WINCH $$
kill `cat /var/run/DataBaseSynchronizerClient.pid`
watch --interval 0.1 "nc remote.machine CLOSED_PORT"
ping -c 1 -t 1 192.168.1.1
ping -a 10.100.3.104
ping 8.8.8.8 -I eth9 -c 3 -w 3
screen -x $PROCESS -p 0 -X stuff `printf "stop\r"`
screen -S SessionName -X at ".#" stuff "date "
zcat input.txt.gz
command -
fold -1 /home/cscape/Desktop/file
awk -f x.awk
fold -1 /home/cscape/Desktop/table.sql
awk '{print $0}'
cat mail.tmp
mail -r "noreply@$(hostname)" -s "Config done!" "${MAIL}"
cat message.txt
mail -s "Backup" -a mysqldbbackup.sql backup@email.com
fold -w130 file
...
ping ${ip} -I eth9 -c 1
ping -c 1 $remote_machine
ping -W 1 -c 1 10.0.0.$i
grep 'from' &
ping -c 1 192.168.1.$COUNTER
grep 'ms'
ping -c 1 127.0.0.1 #ping your adress once
ping youhostname.local
ping -w 1 $c
cat my_ips
xargs -i dig -x {} +short
screen -r user -X stuff "spawn daemon$(printf \\r)"
ps -o pid,bsdtime --no-header -p $(pgrep renoise)
awk 'function mmss2s(s) {if (s !~ /^[0-9][0-9][0-9]:[0-9][0-9]$/) return -1; return ((60*substr(s,1,2))+substr(s,4,2))} { if (mmss2s($2) > 100) { print $1; }}'
cat file
clipboard
ping -c 2 www.google.com
zcat input.gz
./myscript.pl
zcat large_file.gz
largesplitter
bg
bg %
find / -links +2 -print
find /usr/share/man/ -regex .*grep*
find /usr/share/man/ -regex grep.*
find .  -mtime +7 -print
while true ; do nc -l -p 1500 -c 'echo -e "HTTP/1.1 200 OK\n\n $(date)"'; done
find . -type f -print
xargs chmod 444
chmod 644 `find /home/my/special/folder -type f`
find /path -type f -exec chmod 644 {} +;
chmod 644 `find -type f`
chmod 644 `find . -type f`
find . -type f -exec chmod 644 {} \;
find . -type f -print0
xargs -0 chmod 644
IFS= read -r line
LANG=en_US cal
screen -X title "new title"
screen -S SessionName -p 0 -X title "remote_0"
env $(cat .env
xargs) rails
find htdocs -type f -exec chmod 664 {} + -o -type d -exec chmod 775 {} +
chmod 600 file
chmod 644 img/* js/* html/*
find /var/www -type d -print0
xargs -0 chmod 755
find /var/www -type f -print0
xargs -0 chmod 644
find foldername -type d -exec chmod 755 {} ";"
find foldername -type f -exec chmod 644 {} ";"
find foldername -exec chmod a+rwx {} ";"
find /opt/lampp/htdocs -type d -exec chmod 711 {} \;
find /opt/lampp/htdocs -type d -exec chmod 755 {} \;
chmod 755 $(find /path/to/base/dir -type d)
find /opt/lampp/htdocs -type f -exec chmod 644 {} \;
sudo chmod 755 $(which node)
find . -type d -exec chmod 2770 {} +
find . -type f -exec chmod 400 {} \;
find . -type d -exec chmod 500 {} \;
find media/ -type f -exec chmod 600 {} \;
find var/ -type f -exec chmod 600 {} \;
find . -type f -perm 755 -exec chmod 644 {} \;
find . -type f -exec chmod 0660 {} +
find media/ -type d -exec chmod 700 {} \;
find var/ -type d -exec chmod 700 {} \;
find . -mindepth 1 -type d -print0
xargs -0 chmod -R 700
find  . -type d -mindepth 1 -print -exec chmod 755 {}/* \;
find ./default/files -type f -exec chmod ug=rw,o= '{}' \;
find $d -type f -exec chmod ug=rw,o= '{}' \;
find ./default/files -type d -exec chmod ug=rwx,o= '{}' \;
find $d -type d -exec chmod ug=rwx,o= '{}' \;
PS1="`hostname`:\!>"
sudo find foldername -exec chmod a+rwx {} ";"
shopt -s checkwinsize
shopt -s dotglob
shopt -s histverify
bash -c "test -h /proc/4129/ns/pid
test '$(readlink /proc/4129/ns/pid)' != '$(readlink /proc/1/ns/pid)'"
set -o pipefail
set -o verbose
set -v
set -o xtrace
set -x
set -x
PROMPT_COMMAND='LAST="`cat /tmp/x`"; exec >/dev/tty; exec > >(tee /tmp/x)'
PS1="`whoami`@`hostname
sed 's/\..*//'`"
DISPLAY=`hostname`:0 skype
env DISPLAY=`hostname`:0 skype
find lib etc debian -name "*.sh" -type f
xargs chmod +x
find arch/x86/usr/sbin arch/x86/usr/X11R6/bin usr/sbin/ -type f
xargs chmod a+x
true
find -gid 1000 -exec chown -h :username {} \;
HISTTIMEFORMAT="%s " history 2
hostname myServersHostname
hostname $(cat /etc/hostname)
touch -m --date="Wed Jun 12 14:00:00 IDT 2013" filename
find . -type d -exec chmod u=rwx,g=rx,o=x {} \;
find . -type d -name files -exec chmod ug=rwx,o= '{}' \;
export PS1='\[\e]0;`hostname`\a\]${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
find . -name "*rc.conf" -exec chmod o+r '{}' \;
find /git/our_repos -type d -exec chmod g+s {} +
ssh -o ConnectTimeout=10  <hostName>
ssh -o ConnectTimeout=3 user@ip
set -e
PS1=`hostname`':\W> '
sudo date --set="Sat May 11 06:00:00 IDT 2013"
touch -r A B
echo "$1"
read -a to_sort
me=`basename -- "$0"`
me=`basename "$0"`
touch -d"$(date --date="@$old_time")" B
touch -d '30 August 2013' *.php
touch -t 200510071138 old_file.dat
PS4='+$(date "+%s:%N") %N:%i> '
PS4='+ $(date "+%s.%N")\011 '
ssh -fNT -L8888:proxyhost:8888 -R22222:localhost:22 officefirewall
ssh $USERNAME@localhost -L 80:localhost:3000 -N
sudo ssh $USERNAME@localhost -L 80:localhost:3000 -N
ssh -R 10022:localhost:22 device@server
ssh -fNT -L4431:www1:443 -L4432:www2:443 colocatedserver
set MAVEN_DEBUG_OPTS=-Xdebug -Xnoagent -Djava.compiler=NONE -Xrunjdwp:transport=dt_socket,server=y,suspend=y,address=8000
architecture="$(uname -m)"
b=`echo "$a"
awk '{ print tolower($1) }'`
b=`echo "$a"
awk '{ print toupper($1) }'`
extract_dir=$(tar -tf $FILE
cut -d/ -f1
uniq)
filename="`basename "http://pics.sitename.com/images/191211/pic.jpg"`"
finalName=$(basename -- "$(dirname -- "$path")")
fname=`basename $f`
file=$( basename "$1" )
file=`basename "$1"`
path=$(basename $(pwd)
awk '{print tolower($0)}')
path=$(basename $(pwd)
tr 'A-Z' 'a-z' )
path=$(basename $(pwd))
rav=$(echo $var
rev)
source <(echo vara=3)
BZIP2_CMD=`which bzip2`
GZIP="$(which gzip)"
export MYPROGRAMNAME_KERNEL_VERSION=$(uname -r)
OS=$(uname -s)
OS=`uname -s`
PING=$(ping ADDRESS -c 1
grep -E -o '[0-9]+ received'
cut -f1 -d' ')
PacketLoss=$(ping "$TestIP" -c 2
grep -Eo "[0-9]+% packet loss"
grep -Eo "^[0-9]")
export value=$(uname -r)
value=$(uname -r)
shopt -s extglob
shopt -s extglob
shopt -s globstar
export PS1="\[\033]0;\u $(host $(hostname))\007\]\u@\h:\w\$ "
shopt -s dotglob
shopt -s extglob
shopt -s globstar
shopt -s -o nounset
shopt -s nullglob
shopt -s nullglob extglob
shopt -s globstar nullglob
shopt -s globstar nullglob dotglob
set prompt=\[`id -nu`@`hostname -s`\]\#\
ssh -L 1234:remote2:22 -p 45678 user1@remote1
shift $(($#-1))
shift `expr $# - 1`
shift
shift [n]
ipcs -a
grep `whoami`
find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
ls -lrt
tail -n1
find /etc/ -user root -mtime 1
find ~ -perm 777
find $HOME -atime +30
set -ex
awk '{print $1}' file2
comm -1 -3 file1 -
join file2 -
find /home/pat -iname "*.conf"
less
history
more
ps x -o  "%p %r %y %x %c "
ps -ef
grep postgres
ps aux
grep postgres
myVariable=$(env
grep VARIABLE_NAME
grep -oe '[^=]*$');
set
grep VARIABLE_NAME
sed 's/^.*=//'
env
uniq
sort -r
grep PATH
date "+%Y-%m-%d"
du -sk $(find . -type d)
sort -n -k 1
find . -type d -exec du -sk {} \;
sort -n -k 1
find /home -type f -exec file {} \;
find /usr/bin
xargs file
file */*.php
grep UTF
file *.php
grep UTF
find /home -group test
less `find -maxdepth 1 -type f -daystart -mtime -1`
find --version
tmux show-options -g
file /mnt/c/BOOT.INI
w
tr -s " "
cut -d" " -f1,5
tail -n+3
ls -lt
tr -d 0-9
find . -name something -exec ls -l {} \;
man find
man find
man find
man find
man find
man find
find ${INPUT_LOCATION} -name '*.pdf.marker' -exec sh -c 'echo mv $0 `dirname $0`/`basename $0 .marker` $1' {} ${OUTPUT_LOCATION} \;
pstree -a -p 20238
uname -a
date -u '+%Y-%m-%dT%k:%M:%S%z'
date -d tomorrow+2days-10minutes
date -ud@0
find -D help
find -maxdepth 1 -not -iname "MyCProgram.c"
find /etc -maxdepth 1 -name "*.conf"
tail
find /etc -maxdepth 2 -name "*.conf"
tail
find / \! -name "*.c" -print
find /mnt/raid -type d -print
find / -size +100M -print
find / -mmin -1 -print
find / -mtime +31 -print
find / \! \( -newer ttt -user wnj \) -print
find / \( -newer ttt -or -user wnj \) -print
find / -newer ttt -user wnj -print
find . -name "*.so" -printf "mv '%h/%f' '%h/lib%f'\n"
less -S
find . -type f \( -name "*.php" -o -name "*.phtml" \) -exec wc -l {} +;
find . -type f -name "*.php" -exec wc -l {} +;
find . -type f
wc -l
find . -maxdepth 1 -type d -print
parallel -X echo Directories:
find . -maxdepth 1 -type d -print
parallel echo Directory: {}
find . -maxdepth 1 -type d -print
xargs -I {} echo Directory: {}
find . -maxdepth 1 -type d -print
xargs echo Directories:
echo "$list"
uniq -c
ps -eo size,pid,user,command --sort -size
awk '{ hr=$1/1024 ; printf("%13.2f Mb ",hr) } { for ( x=4 ; x<=NF ; x++ ) { printf("%s ",$x) } print "" }'
awk '{total=total + $1} END {print total}'
find -version
find /etc/ -user root -mtime 1
who
ifconfig eth0
grep HWaddr
cut -dH -f2
cut -d\  -f2
/usr/bin/ifconfig eth0
grep --word-regexp inet
awk '{print $2}'
pstree user
bunzip2 -c bigFile.bz2
wc -c
shopt -o extglob
shopt globstar
shopt extglob
shopt compat31
shopt dotglob
shopt nullglob
echo "${line}"
egrep --invert-match '^($
\s*#
\s*[[:alnum:]_]+=)'
awk 'BEGIN{srand();} {printf "%06d %s\n", rand()*1000000, $0;}'
sort -n
cut -c8-
sudo chown -Rf www-data *
ruby -e "$(curl -fsSL https://raw.github.com/Homebrew/homebrew/go/install)"
read -u 4 -N $char -r -s line
read -rsp $'Press enter to continue...\n'
read -s -p "Enter your password: " passwd
read -rsp $'Press any key or wait 5 seconds to continue...\n' -n 1 -t 5
read -rsp $'Press any key to continue...\n' -n 1 key
read -n1 -s
read -s -N 1 SELECT
read -rsp $'Press escape to continue...\n' -d $'\e'
su -
sleep $(($(date -f - +%s- <<< $'tomorrow 21:30\nnow')0))
sort -o $file $file
sort -u -t, -k1,1 file
sort -u -t : -k 1,1 -k 3,3 test.txt
sort -S 50% file
sort -o file1.txt file1.txt
sort -k1,1 -k2,2 -t';' --stable some_data
sort -k1,1 -k2,2 -t';' --stable --unique some_data
sort -u -o file !#$
find -type d -printf '%T+ %p\n'
sort
cd $(find . -maxdepth 1 -type d -name "folder_*"
sort -t_ -k2 -n -r
head -1)
find -mindepth 1 -printf "%T@ %P\n"
sort -n -r
cut -d' ' -f 2-
tail -n +7
diff <(sort $def.out) <(sort $def-new.out)
find / -type f -printf "\n%Ab %p"
head -n 11
sort -k1M
cat myfile.txt
sort
uniq
finger
sort -u
ps aux
awk '{print $2, $4, $11}'
sort -k2rn
head -n 10
cat file1 file2
sort -t. -k 2.1
tac a.csv
sort -u -t, -r -k1,1
tac
sort file -o !#^
sort foo.txt
rev $filename
sort
uniq -f=N
rev
sort file.txt
rev
uniq -f 10
rev
diff <(sort file1 -u) <(sort file2 -u)
sort -u FILE
sort -u set1 set2
diff <(sort -n ruby.test) <(sort -n sort.test)
sort
sort temp.txt > temp.txt.sort
mv temp.txt.sort temp.txt
rev   test.txt
sort  -k2
rev
sort -t$'\t' -k6V -k7n file
sort ips.txt
uniq -c
sort inputfile
uniq
sort -o inputfile
sort temp.txt -o temp.txt
sort temp.txt -otemp.txt
sort $tmp
grep -v ':0'  #... handle as required
source "$( dirname "$( which "$0" )" )/lib/B"
source `which virtualenvwrapper.sh`
source "`brew --prefix`/etc/grc.bashrc"
source "$( dirname "${BASH_SOURCE[0]}" )/incl.sh"
source $(dirname $0)/incl.sh
screen -d -m sh -c "while :; do ./myCommand; done;"
split -l ${2:-10000} -d -a 6 "$1"
split -l ${2:-10000} -d -a 6 "$1" "${tdir}/x"
split -l 20 $FILENAME xyz
split -d -l $SPLITLIMT $INFILE x_
split -l $MAX_LINES_PER_CHUNK $ORIGINAL_FILE $CHUNK_FILE_PREFIX
split -l 100 "$SOURCE_FILE"
split -a 5 $file
awk '{if (NR!=1) {print}}' $in_file
split -d -a 5 -l 100000 - $in_file"_"
split --number=l/6 ${fspec} xyzzy.
split -n 1000000 /etc/gconf/schemas/gnome-terminal.schemas
split --lines=50000 /path/to/large/file /path/to/output/file/prefix
split /tmp/files
split -n 10000 /usr/bin/cat
split -n 1000 /usr/bin/firefox
split -n 100000 /usr/bin/gcc
split -l 50000000 --filter=./filter.sh 2011.psv
split -b 1024k <file_name>
split -b 1024m <file_name>
split -l20 ADDRESSS_FILE temp_file_
split -b 500M -d -a 4 INPUT_FILE_NAME input.part.
split --bytes=1500000000 abc.txt abc
split bigfile /lots/of/little/files/here
zcat biglogfile.gz
split -l500000 --filter='gzip > $FILE.gz'
split --lines $lines_per_file complete.out
split --numeric-suffixes=1 --additional-suffix=.csv -l100 data.csv data_
split -C 100m -d data.tsv data.tsv.
split -l5000000 data.tsv '_tmp';
split -l 100000 database.sql database-
split -l 100 date.csv
split -a 4 -d -l 50000 domains.xml domains_
split -n l/10 file
split -b 1024m file.tar.gz
split -b 1024m "file.tar.gz" "file.tar.gz.part-"
tail -n +2 file.txt
split -l 4 - split_
tail -n +2 file.txt
split -l 20 - split_
split -b 1M -d  file.txt file
split -b 1M -d  file.txt file --additional-suffix=.txt
split -l 20 file.txt new
split -l 200000 filename
split --suffix-length=5 --lines=1 foo.txt
split -a4 -d -l100000 hugefile.txt part.
split -n2 infile
split -b 10 input.txt /tmp/split-file
split -b 10 input.txt xxx/split-file
split --lines=1 --suffix-length=5 input.txt output.
split -l 100 input_file output_file
split -l 600 list.txt
split -l 200000 mybigfile.txt
split -l5000000 randn20M.csv '_tmp';
split -b 10M -d  system.log system_split.log
split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t
split -l9 your_file
split -b 1024m "file.tar.gz" "file.tar.gz.part-"
split -b 1024m file.tar.gz
split -l20 ADDRESSS_FILE temp_file_
find /dev/shm/split/ -type f -exec split -l 1000 {} {} \;
cat afile
split -l 2 --filter='bzip2 > "$FILE.bz2"'
split
split -l 3400000
split --lines=75
cat file1 file2 ... file40000
split -n r/1445 -d - outputprefix
cat *.txt
tail -n +1001
split --lines=1000
sed 100q datafile
split -C 1700 -
ls
split -l 500 - outputXYZ.
my_program
split -d -b 100000 -
tar [your params]
split -b 500m - output_prefix
sort --unique emails_*.txt
split --numeric-suffixes --lines=200 --suffix-length=4 --verbose
ssh user@server 'DISPLAY=:0 nohup xeyes < /dev/null > std.out 2> std.err &'
top
matlab -nodisplay
nohup vlc -I dummy --quiet ~/mp3_directory/* &
env -i bash --norc
env - scriptname
(chromium --user-data-dir=$(mktemp -d) &)
tmux new-session -s vims -n vim0 -d "vim foo"
tmux new -d "bash -c '$CMD'"
tmux new -d "bash -c \"$CMD\""
tmux -2
tmux new-window -t vims -d -n "win0" "vim foo"
tmux -2 new-session -s name "another_script.sh $1"
read -N $BUFSIZE buffer
reads=$(zcat $file.fastq)
a=$( df -H )
set lastdaymonth=`cal $month $year
tr -s " " "\n"
tail -1`
proc_load_average=$(w
head -1
cut -d" " -f13
cut -d"," -f1-2
tr ',' '.')
proc_load_average=`w
head -1
cut -d" " -f13
cut -d"," -f1-2
tr ',' '.'`
output=$(echo "$output"
tr -d '\'
tr -d '\n')
echo $(basename $(dirname $pathname))
echo $(basename $(dirname $(dirname $pathname)))
awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1
rev
column -t
rev
awk 'FNR==NR { for(i=2;i<=NF;i++) a[$1][i]=$i; next } { for(j=2;j<=NF;j++) $j-=a[$1][j] }1' File2 File1
rev
column -t
rev
ls
xargs -I {} mv {} {}_SUF
tar tzvf archive.tar.gz
sed 's/ \+/ /g'
cut -f3 -d' '
sed '2,$s/^/+ /'
paste -sd' '
bc
mv new old -b
mv old~ new
brew link bash-completion
brew link --overwrite python
rsync -av /home/user1/ wobgalaxy02:/home/user1/
rsync -rtuv /path/to/dir_b/* /path/to/dir_a
rsync -rtuv /path/to/dir_a/* /path/to/dir_b
rsync -ur dir_a dir_b
rsync -ur dir_b dir_a
rsync -urv --progress dir_a dir_b
rsync -urv  --progress dir_b dir_a
rsync -pogtEtvr --progress --bwlimit=2000 xxx-files different-stuff
rsync -avz -e ssh --progress user@source-server:/somedirA/ somedirB/
xargs -I '{}' rm '{}'
xargs -i rm '{}'
cut -d' ' -f1 file.txt
xargs dig +short
NAME=`basename "$FILE"`
NAME=`basename "$FILE"
cut -d'.' -f-1`
awk '{print $1}' file.txt
xargs dig +short
basedir=$(cygpath -am "$(dirname "$0")")
basedir=$(cygpath -m "$(dirname "$0")")
basedir=$(dirname "$(echo "$0"
sed -e 's,\\,/,g')")
mkdir -p `dirname /path/to/copy/file/to/is/very/deep/there` \
cut -d / -f 4- .exportfiles.text
xargs -n 1 dirname
kill -9 $(pgrep amarok)
echo $(false; echo foo)
gunzip -t file.tar.gz
find file -chour +1 -exit 0 -o -exit 1
find file -prune -cmin +60 -print
grep -q .
[[ ! -z `find 'Dir/' -name 'something'` ]] && echo "found"
echo "not found"
[[ ! -z `find 'YOUR_DIR/' -name 'something'` ]] && echo "found"
echo "not found"
gunzip -c file.tar.gz
tar t > /dev/null
find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
find .
cpio -pdumv /path/to/destination/dirrectory
touch `cat files_to_find.txt`
find . -mmin -15 \( ! -regex ".*/\..*" \)
find . -type f -iname "*.py"
find /root/Maildir/ -mindepth 1 -type f -mtime +14
xargs rm
ping -D -n -O -i1 -W1 8.8.8.8
set -g mouse on
find .  -maxdepth 1 -type d -iname ".[^.]*" -print0
xargs -I {} -0 rm -rvf "{}"
find /nas01/backups/home/user/ -type d -name ".*" -print0 -exec ls -lrt {} \;
find /       \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \              \( -size +100M -fprintf /root/big.txt  '%-10s %p\n' \)
find /       \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \( -size +100M -fprintf /root/big.txt  '%-10s %p\n' \)
column list-of-entries.txt
set -o nounset
var=`echo $var
awk '{gsub(/^ +
+$/,"")}1'`
find . -type f -maxdepth 1 -not -empty -print0
xargs -0i cp /dev/null {}
find . -type f -maxdepth 1 -not -empty -print0
xargs -0i sh -c "cat /dev/null > \"{}\""
find . -type f -maxdepth 1 -exec sh -c 'cat /dev/null > {}' \;
find . -type f -maxdepth 1 -print0
xargs -0i sh -c "cat /dev/null > \"{}\""
tail -n 1 "$file"
tee >(wc -c
xargs -I {} truncate "$file" -s -{})
tail -n 1 "$file"
wc -c
xargs -I {} truncate "$file" -s -{}
file ~/myfile
ssh -X -C -L 5900:localhost:5900 remotehost x11vnc -localhost -display :0
ifconfig eth0 up
find /home/ -name 'myfile' -type f
rev
cut -d "/" -f2-
rev
sort -u
crontab -l
sed '/# *\([^ ][^ ]*  *\)\{5\}[^ ]*test\.sh/s/^# *//'
crontab -
gzip -dc archive.tar.gz
tar -xf - -C /destination
zcat $(cat list.txt)
./a.out
gzip -dc data.tar.gz
tar -xvf -
cat dbdump.sql.gz
gzip -cd
mysql
cat www-backup.tar.*
gunzip -c
tar xvf -
find . -maxdepth 1 -type f -name '\.*'
sed -e 's,^\./\.,,'
sort
xargs -iname mv .name name
brew reinstall git
find . -name '*.gz' -print0
xargs -0 gunzip
unset `env
awk -F= '/^\w/ {print $1}'
xargs`
IFS= read -t 0.01 -d '' -n1 keypress
IFS= read -s -n 1 SELECT
IFS= read -d $'\0' -r file
tmux set-environment -u RBENV_VERSION
tmux set-environment -gu RBENV_VERSION
tmux set-environment -t sessname -u RBENV_VERSION
unset DISPLAY
find arch etc lib module usr xpic -type f
xargs chmod -x
shopt -u -o history
unset DUALCASE
unset GIT_DIR
unset GNUPLOT_DRIVER_DIR
unset $(printenv
grep G4
awk 'BEGIN{FS="=";}{print $1;}')
unset `printenv
grep G4
awk 'BEGIN{FS="=";}{printf("%s ",$1);}'`
unset $(/usr/bin/env
/usr/bin/cut -d = -f 1
/usr/bin/xargs)
unset `env
awk -F= '/^\w/ {print $1}'
xargs`
unset $(locale
cut -d= -f1)
unset array[2]
unset z
unset $(echo "$a"
/usr/bin/cut -d = -f 1)
unset array[`shuf -i 0-4 -n1`];
unset array[$RANDOM%4]
unset array[`shuf -i 0-3 -n1`]
unset -f z
unset -f ls /bin/ls
shopt -u extglob
unset -v latest
unset -v penultimate
gunzip -c -d $ip
pax -r
zcat archive.tgz
tar -x --wildcards apri/fls/filename
gunzip -c bigfile.txt.gz
grep -f patterns.txt
sort
uniq -c
zcat daily_backup.sql.gz
grep -E "'x'
/x/"
zcat doc.gz
split -l 1000 --filter='gzip > $FILE.gz'
zcat a.csv.gz
gawk '$2>5' FPAT='[^"
]+'
zcat file.gz
awk -F'[
"]' '$5>5'
gzip -d --stdout file.gz
bash -s -- "-n wordpress localhost"
gzip -d --stdout file.gz
bash /dev/stdin "arguments"
zcat file.gz
zcat file.gz
cut -f1 -d,
sort
uniq -c
sort -n
zcat file.gz
grep -o '"searchstring":"[^"]*"'
sort
uniq -c
sort -n
gzcat large.csv.gz
split -l 1000 - xxx
gzip -cd myDB.sql.gz
pg_restore ...
gzip -cd path/to/test/file.gz
awk 'BEGIN{global=1}/my regex/{count+=1;print $0 >"part"global".txt";if (count==1000000){count=0;global+=1}}'
gunzip < some.file.gz
find . -name '*.gz' ! -name '*dvportgroups*' ! -name '*nsanity*' ! -name '*vcsupport*' ! -name '*viclient*' ! -name 'vsantraces*' -exec gunzip -vf {} \;
find . -name "*.gz" -execdir gunzip '{}' \;
find -name '*.zip'
xargs -n 1 unzip
find . -name '*.zip' -exec unzip '{}' ';'
find . -name '*.zip'
xargs -n1 unzip
ls /homes/ndeklein/mzml/*.gz
xargs -I {} gunzip {}
find -name 'file_*' -follow -type f -exec zcat {} \;
agrep -dEOE 'grep'
find . -name "file_*" -follow -type f -print0
xargs -0 zcat
agrep -dEOE 'grep'
gunzip test1/*/*.gz
find . -name "*.gz" -exec zcat "{}" +
grep "test"
zcat compressFileName
tar xvf -
zcat input.gz
sed -n 's/.*\(userAgent=[^=]*\) [^ =][^ =]*=.*/\1/p'
zcat input.gz
sed -n 's/.*\(userAgent=[^=]*\) [^ =]\+=.*/\1/p'
zcat input.gz
grep -o 'userAgent=[^=]*'
sed 's/ [^ ]*$//'
zcat small-*.gz
split -d -l2000000 -a 3 - large_
gunzip -c 4.56_release.tar.gz
tar xvf -
zcat file.tar.gz
tar x
gunzip -c myarchive.tar.gz
tar -tvf -
gunzip -c openssl-fips-2.0.1.tar.gz
tar xf ­-
zcat tarball.tar.gz
tar x
cat backup.img.gz
gunzip
dd of=/dev/sdb
gunzip *.gz
find . -name "*.gz"
xargs gunzip
find . -name '*.gz' -exec gunzip '{}' \;
gunzip $empty_variable
command -1 <(gzip -dc file1.gz) -2 <(gzip -dc file2.gz)
sudo yum --releasever=2013.09 update openssl
find data/ -name "filepattern-*2009*"
cpio -ov --format=ustar > 2009.tar
find data/ -name filepattern-*2009* -exec tar uf 2009.tar {} ;
find data/ -name filepattern-*2009* -print0
xargs -0 tar uf 2009.tar
find ~/ -newer alldata.tar -exec tar uvf alldata.tar {} ;
history -w
touch -t `date +%m%d0000` /tmp/$$
touch filename
find . -exec touch {} \;
find . -print -exec touch {} \;
find . -print0
xargs -0 touch
find /path/to/dir -print0
xargs -0 touch
find / ! -newer /tmp/timestamp -exec touch {} \;
find /your/dir -type f -exec touch {} +
sudo yum update openssl --skip-broken
sudo yum --disablerepo epel update openssl
yum update
yum -y update
find-repos-of-install
grep rpmfusion
xargs yum update
yum update $(find-repos-of-install
grep rpmfusion)
sudo yum update --skip-broken
yum update
tee mylogfile
sudo yum update openssl
yum --enablerepo=remi upgrade php-mbstring
cat <(yes
tr \\n x
head -c $BYTES) <(sleep $SECONDS)
grep n
yes
tr \\n x
head -c $BYTES
pv
grep n
yes
tr \\n x
head -c $BYTES
grep n
who --ips /var/log/wtmp
grep '^msw.*127.0.0.1'
find . -type f -name "composer.json" -exec composer validate {} \;
ssh -F vagrant-ssh default
grep -b -o $'\x0c' filename
less
echo 'Hello World!'
sed $'s/World/\e[1m&\e[0m/'
gzip -dc input1.vcf.gz input2.vcf.gz
awk 'FNR==NR { array[$1,$2]=$8; next } ($1,$2) in array { print $0 ";" array[$1,$2] }'
awk '{ ... }' <(gzip -dc input1.vcf.gz) <(gzip -dc input2.vcf.gz)
source <(metaflac --show-tag ARTIST myfile.flac)
find . -name "*.txt" -exec echo {} \; -exec grep banana {} \;
nohup php -r 'while (true) { echo "a";}' &
command $(zcat input1.txt.gz) $(zcat input2.txt)
set -o pipefail
tail -n 100 file1
bar
wc -l
tail -n 100 file1
pv
wc -l
find . -perm 040 -type f -exec ls -l {} \;
ping google.com
awk -f packet_loss.awk
cat blah.gz
gunzip
some_command
gunzip -c blah.gz
some_command
pv data.gz
gunzip -c
./complicated-perl-script-that-reads-stdin
yes
tr \\n x
head -c $((1024*1024*1024))
pv -L $((1024*1024))
grep n
\time -o time.log command
/usr/bin/time -f%e ls >/dev/null
kill -0 $PID
kill $PID
chown -v root "$file"
bzip2 -kv */*/*/*/*/*
bzip2 -kv */*/*/*/*
bzip2 -kv */*
bzip2 -kv */*/*/*/*/*/*/*
bzip2 -kv */*/*/*/*/*/*
bzip2 -kv */*/*
bzip2 -kv */*/*/*
zcat /usr/share/doc/mysql-server-5.0/changelog*.gz
less
gzip --help
less
history
less
history
more
history
vim -
vim <(history)
history
vim -R -
zcat bigfile.z
sed -ne '500,1000 p'
zcat bigfile.z
tail -n +500
head -501
history
head -n 120
tail -n 5
man find
man find
man bash
less -p BASH_SOURCE
cat -n file.txt
less
man find
tar -xOf TarFile FileB.gz
zless
tmux set-option -g renumber-windows on
find ./ -type f -print0
xargs -0 -n1 md5sum
sort -k 1,32
uniq -w 32 -d --all-repeated=separate
sed -e 's/^[0-9a-f]*\ *//;'
fold file
wc -l
fold -w 76 -s file.txt
pr -T --indent=4
cat file.txt
fold
fold -w 80 file.txt
fold -w30 longline
fold -w30 -s longline
fold -w79 yourfile
sed -e :a -e 's/^.\{0,78\}$/& /;ta'
fold -w 10
echo 127.0.0.1 ad.doubleclick.net
sudo tee -a /etc/hosts
echo '2-1'
sudo tee /sys/bus/usb/drivers/usb/unbind
echo '2-1.1.1'
sudo tee /sys/bus/usb/drivers/usb/unbind
echo "Australia/Adelaide"
sudo tee /etc/timezone
echo "Hello, world"
tee /tmp/outfile
echo "Some console and log file message"
tee /dev/fd/3
echo "[some repository]"
sudo tee -a /etc/apt/sources.list
echo -e "\n/usr/local/boost_1_54_0/stage/lib"
sudo tee -a /etc/ld.so.conf
echo 'deb blah ... blah'
sudo tee --append /etc/apt/sources.list
sudo echo "deb http://downloads-distro.mongodb.org/repo/ubuntu-upstart dist 10gen"
sudo tee -a /etc/apt/sources.list.d/10gen.list
echo 'ee'
tee /dev/stderr
foo
echo 'ee'
tee /dev/tty
foo
echo 'ee'
tee >(foo)
t=$(tty) echo ee
tee $t
foo
echo ee
tee /dev/pty/2
foo
echo "error"
tee -a log 1>&2
echo "error" 1>&2
tee -a log
echo "error"
tee
echo "fifo forever"
cat - fifo
tee fifo
echo foo
readlink /proc/self/fd/1
echo foo
readlink /proc/self/fd/0
echo "hello world"
tee >(wc)
echo "hey hey, we're the monkees"
tee >(gzip --stdout > my_log.gz)
echo "hey hey, we're the monkees"
tee /dev/tty
gzip --stdout > my_log.gz
echo "hey hey, we're the monkees"
(exec 1>&3 && tee /proc/self/fd/3
gzip --stdout > my_log.gz)
echo "some output"
sudo -u some_user tee /some/path/some_file
echo suspend
sudo tee /sys/bus/usb/devices/usb3/power/level
echo "myname=\"Test\""
sudo tee --append $CONFIG
yes
head -n10 > 10lines.txt
yes "this is the text I want to add to a file"
head -200>myFile.txt
seq 1 10
sort -R
tee /tmp/lst
cat <(cat /tmp/lst) <(echo '-------') **...**
sudo cat /sys/kernel/debug/tracing/trace_pipe
tee tracelog.txt
ls
& tee files.txt
diff -a --suppress-common-lines -y a.txt b.txt > c.txt
diff -u file1 file2 > file3
cat infile
paste -sd ',\n'
cat infile
paste -sd '  \n'
head -16482 < file.in
tail -259 > file.out
diff -r dir1 dir2
grep 'Only in'
grep dir1
awk '{print $4}' > difference1.txt
svn status
grep '\!'
cut -d' ' -f2- > removedProjs
find .
find . -print
ant 2>&1
tee build.log
bash myscript.sh 2>&1
tee output.log
command 2>&1
tee /path/to/logfile
update-client 2>&1
tee my.log
command
tee -a /path/to/logfile
command
tee /path/to/logfile
command_that_writes_to_stdout
tee >(command_that_reads_from_stdin)
foo
tee output.file
ls -a
tee output.file
ls -hal /root/
sudo tee /root/test.out
ls -lR /
tee -a output.file
ls -lR /
tee output.file
sudo ls -hal /root/
sudo tee /root/test.out > /dev/null
whatever
tee logfile.txt
yourcommand
tee output.txt
tee /tmp/arjhaiX4
tee foobar.txt
./a.out 2>&1
tee output
./a.out
& tee output
./aaa.sh 2>&1
tee -a log
./aaa.sh
& tee -a log
command > >(tee -a stdout.log) 2> >(tee -a stderr.log >&2)
diff -r dir1 dir2
grep dir1
awk '{print $4}' > difference1.txt
comm -12 <(cut -d " " -f 3 file1.sorted
uniq) <(cut -d " " -f 3 file2.sorted
uniq) > common_values.field
echo $(date) "0"
tee -a log.csv
echo $(date) "1"
tee -a log.csv
tail -n 1 "$file"
tee >(wc -c
xargs -I {} truncate "$file" -s -{})
tail -F xxxx
tee -a yyyy &
find  /   -print > masterfilelist.out
find ./ -type f
tee /tmp/grep1 /tmp/grep2 >/dev/null
./program
tee a.txt
false
tee /dev/null
input_prog 2>&1
tee /dev/tty
my_editor
proc1
tee >(proc2) ... >(procN-1)
procN
someCommand
tee someFile
mongo
tee somefile
set -v
ls 2>&1
tee /tmp/ls.txt
ls 2>&1
tee --append /tmp/ls.txt
ls 2>&1
tee -a /tmp/ls.txt
progam.sh 2>&1
tee -a log
someCommand 2>&1
tee someFile
someCommand 2>&1
tee -a someFile
set -x
python -u client.py
tee logfile
find . -name "*rc.conf" -exec chmod o+r '{}' \;
find . -perm 600 -print
xargs chmod 666
find . -mtime -7 \( '*.jpg' -o -name '*.png' \)
find . -name '*.mp3' -name '*.jpg' -print
tar czvf mytarfile.tgz `find . -mtime -30`
find . -mtime -1 -type f -exec tar rvf "$archive.tar" '{}' \;
sudo find / -name file.txt
find /mydir -atime +100 -ok rm {} \;
tac error.log
awk '{if(/2012/)print;else exit}'
tail -n `tac biglogfile
grep -vnm1 2012
sed 's/:.*//'
xargs expr -1 +` biglogfile
bind '"\C-i":complete'
bind $'"\x61"':self-insert
bind '"\e[24~":"foobar"'
bind '"\e[24~":"pwd\n"'
find ~/tmp -mtime 0 -exec du -ks {} \;
cut -f1
find . -name "*jpg" -exec du -k {} \;
awk '{ total += $1 } END { print total/1024 " Mb total" }'
find htdocs cgi-bin -name "*.cgi" -type f -exec chmod 755 {} \;
find htdocs cgi-bin -name "*.cgi" -type f -exec chmod 755 {} \;
chown -R :daemon /tmp/php_session
chown -R :lighttpd /var/lib/php/session
chown :friends myfile
find /usr/local -name "*.html" -type f -exec chmod 644 {} \;
find . -maxdepth 1 -not -name "." -print0
xargs --null chown -R apache:apache
find ~ -group vboxusers -exec chown kent:kent {} \;
chown -R andrewr:andrewr *
chown $(stat -f%u:%g "$srcdir") "$dstdir"
chown -v root:root /path/to/yourapp
chown user:group file ...
chown root:specialusers dir1
chown root:root it
chown root:root script.sh
sudo chown root:root uid_demo
find . -not -iwholename './var/foo*' -exec chown www-data '{}' \;
chown user_name file
sudo chown root /home/bob
chown user destination_dir
$sudo chown root file.sh
sudo chown el my_test_expect.exp     //make el the owner.
sudo chown root process
find /mydir -type f -name "*.txt" -execdir chown root {} ';'
find /mydir -type f -name "*.txt" -print0
xargs -0 chown root $(mktemp)
find dir_to_start -name dir_to_exclude -prune -o -print0
xargs -0 chown owner
find / -type f -perm 0777 -print -exec chmod 644 {} \;
find / -type f -perm 0777 -print -exec chmod 644 {} \;
chmod 751 `find ./ -type d -print`
find /home/john/script -name "*.sh" -type f -exec chmod 644 {} \;
find /path/to/directory -type f -mtime +30 -exec chmod 644 {} +
(cd A
find .) > tmp.txt
cd B
find . >> ../tmp.txt
cd "/some/dir"
find . -type f
cd `find a
sed '$!d'`
find /the/path -depth -name "*.abc" -exec rename 's/\.abc$/.edefg/' {} +
find /the/path -depth -name "*.abc" -exec sh -c 'mv "$1" "${1%.abc}.edefg"' _ {} \;
find /the/path -depth -type f -name "*.abc" -exec sh -c 'mv "$1" "$(dirname "$1")/$(basename "$1" .abc).edefg"' _ {} \;
find /the/path -type f -name '*.abc' -execdir rename 's/\.\/(.+)\.abc$/version1_$1.abc/' {} \;
find -name ‘*.lst’ -exec rename .lst a.lst {} \;
find . -xtype f \! -iname *.html   -exec mv -iv "{}"  "{}.html"  \;
find . -name '*.txt' -exec sh -c 'mv "$0" "${0%.txt}.txt_bak"' {} \;
find . -type d -exec chgrp usergroup {} \;
find . -type f -exec chgrp usergroup {} \;
find / -group 999 -exec chgrp NEWGROUP {} \;
find /u/netinst -print
xargs chgrp staff
find / -user edwarda -exec chgrp pubs "{}" \;
find . -name "*" -exec chgrp -v new_group '{}' \; -exec chmod -v 770 '{}' \;
find . -name "*" \( -exec chgrp -v new_group {} \; -o -exec chmod -v 770 {} \; \)
find . -name "*" -exec sh -c 'chgrp -v new_group "$0" ; chmod -v 770 "$0"' {} \;
find . /home/admin/data/ -type d -exec chown admin.admin {} \;
find /usr/lpp/FINANCIALS -print
xargs chown roger.staff
find . /home/admin/data/ -type f -exec chown admin.admin {} \;
find /u/netinst -print
xargs chown netinst
find . -exec chown myuser:a-common-group-name {} +
find / -user 999 -exec chown NEWUSER {} \;
find .-type f -user root -exec chown tom {} \;
find -gid 1000 -exec chown -h :username {} \;
find . -type d -exec chown username {} \;
find . -type f -exec chown username {} \;
find . -type f
xargs chown username
find . -type f -ok chown username {} \;
find . -type f -print0
xargs -0 chown username
find / -user edwarda -exec chown earnestc "{}" \;
find / -user edwarda -print
xargs chown earnestc
find . -type d -exec chmod 755 {} \;
find . -name "*.php" -exec chmod 755 {} \;
find . -name "*.php" -print0 -fprint >(pv --line-mode)
xargs -0 chmod 755
find . -name "*.php" -exec chmod 755 {} +
find -type d -exec chmod 755 {} \;
find . \( -type f -exec sudo chmod 664 "{}" \; \) , \( -type d -exec sudo chmod 775 "{}" \; \)
find /home/user/demo -type f -perm 777 -print -exec chmod 755 {} \;
find -type f -exec chmod 644 {} \;
find /var/www/ -type f -iname "*.php" -exec chmod 700 {} \;
find /home -type f -perm 0777 -print -exec chmod 700 {} \;
find . -type f -perm 777 -exec chmod 755 {} \;
find / -name *.rpm -exec chmod 755 '{}' \;
sudo find . -type d -exec chmod 755 {} +
find . -type f -exec chmod 664 {} \;
find . -type f
xargs chmod 664
find . -type f -print0
xargs -0 chmod 664
chmod 640 `find ./ -type f -print`
find . -type d -exec chmod 775 {} \;
chmod 751 `find ./ -type d -print`
find . -type d -exec chmod 2775 {} \;
find . -type d
xargs chmod 2775
find . -type d -print0
xargs -0 chmod 2775
sudo find /path/to/someDirectory -type d -print0
xargs -0 sudo chmod 755
find root_dir -type d -exec chmod 555 {} \;
find /home/nobody/public_html -type d -exec chmod 755 {} \;
find /store/01 -name "*.fits" -exec chmod -x+r {} \; \
find /store/01 -name "*.fits" -exec chmod -x+r {} \; -exec ls -l {} \;
tee ALL_FILES.LOG
find /path/to/dir/ -type f -print0
xargs -0 chmod 644
find . -type f -exec chmod 500 {} ';'
find root_dir -type f -exec chmod 444 {} \;
chmod 640 `find ./ -type f -print`
sudo find . -type f -exec chmod 644 {} +
sudo find /path/to/someDirectory -type f -print0
xargs -0 sudo chmod 644
find /home/nobody/public_html -type f -exec chmod 644 {} \;
find . -type f -exec chmod 664 {} \;
find /var/ftp/mp3 -name '*.mp3' -type f -exec chmod 644 {} \;
find /var/www/html -type d -perm 777 -print -exec chmod 755 {} \;
find . -name '*-GHBAG-*' -exec bash -c 'mv $0 ${0/GHBAG/stream-agg}' {} \;
find . -name '*-GHBAG-*' -exec rename 's/GHBAG/stream-agg/' {} +
cd /nfs//office/
find . -name '.user.log'
sudo chown root:dockerroot /var/run/docker.sock
chown amzadm.root  /usr/bin/aws
sudo chown root:wheel bin
chown owner:nobody public_html
find --version
screen -list
awk '{print $1}'
grep -q "$1$"
find myfile -perm 0644 -print
screen -list
grep -q "myscreen"
find . -type l -! -exec test -e {} \; -print
find . -path ./.git -prune -o -print -a \( -type f -o -type l -o -type d \)
grep '.git'
bind -p
grep $'"\x61"'
find . -type f -exec file {} \; > /tmp/filetypes.log
alias
grep my_previous_alias
find /usr/bin
xargs file
find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
find . \! -name "*.Z" -exec compress -f {} \;
find . -depth -print
cpio -dump /backup
head -n99999999 file1.txt file2.txt file3.txt
find . -name *.txt
xargs dos2unix
find . -type f -exec dos2unix {} \;
find . -type f -exec dos2unix {} {} \;
find . -iname '*.png'
while read i; do mogrify -format jpg "$i" && rm "$i"; echo "Converted $i to ${i%.*}.jpg"; done
find . -name "*" -type f -exec dos2unix {} \;
date -d @1278999698 +'%Y-%m-%d %H:%M:%S'
find . -lname "`pwd`*" -exec sh -c 'ln -snvf `python -c "from os.path import *; print relpath(\"$(readlink {})\",dirname(\"{}\"))"` {}' \;
find . -type f -name "*.mp3" -exec cp {} /tmp/MusicFiles \;
find /raid -type d -name ".local_sd_customize" -ok cp /raid/04d/MCAD-apps/I_Custom/SD_custom/site_sd_customize/user_filer_project_dirs {} \;
cp `find -perm -111 -type f` /usr/local/bin
find . -name "*.java" -print0
xargs -0 -J % cp % destinationFolder
find "$sourcedir" -type f -name "*.type" -exec sh -c 'for f; do cp "$f" "$0"; done' "$targetdir" {} +
find "$sourcedir" -type f -name "*.type"
xargs cp -t targetdir
find . -type f -mtime +30 -name "*.log" -exec cp {} old \;
find . -name '*.mp3' -exec cp -a {} /path/to/copy/stuff/to \;
find . -type f -exec cp {} /tmp +
find /tmp -type f -mtime -30 -exec cp {} /tmp/backup \;
find .
cpio -pdumv /path/to/destination/dir
find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
find dir1 dir2 dir3 dir4 -type d -exec cp header.shtml {} \;
find /usr/src -name "*.html" -exec grep -l foo '{}' ';'
wc -l
find . -type f
wc -l
jobs
wc -l
find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name "*.m" \) -print0
xargs -0 wc
find . \( -name "*.c" -or -name "*.cpp" -or -name "*.h" -or -name "*.m" -or -name '*.java' \) -print0
xargs -0 wc
find . -name "*.java" -print0
xargs -0 wc
find . -type f -exec wc -l {} \;
awk '{total += $1} END{print total}'
find etc home apps -depth -print
cpio -ov > dev/rmt0
find /path/to/files/ -newermt 20131204 -not -newermt 20131205 -type f -print0
cpio --create --null  --format=ustar
gzip > /tmp/dec-4.tar.gz
find . -name .snapshot -prune -o \( \! -name *~ -print0 \)
cpio -pmd0 /dest-dir
find . -cpio /dev/fd0 -print
tee /tmp/BACKUP.LOG
find / -user edwarda -print
cpio -ovBc > /dev/rfd0
timex find /tmp -print
backup -ivqf/dev/null
find /home -depth -print
cpio -ov -0 /dev/rmt0
tee -a tape.log
find source/directory -ctime -2
cpio -pvdm /my/dest/directory
tar -zcvf compressFileName.tar.gz folderToCompress
tar -cvzf filename.tar.gz folder
tar -czf backup.tar.gz --exclude=PATTERN1 --exclude=PATTERN2 ... /path/to/backup
tar -czf backup.tar.gz --exclude-tag-all=exclude.tag /path/to/backup
tar -C my_dir -zcvf my_dir.tar.gz .[^.]* ..?* *
tar cfvz --exclude='<dir1>' --exclude='<dir2>' target.tgz target_dir
tar -N '2014-02-01 18:00:00' -jcvf archive.tar.bz2 files
find . -depth -print
cpio -o -O /target/directory
gzip `find . \! -name '*.gz' -print`
find . \! -name "*.gz" -exec gzip {} \;
sudo  ln  -d  existing_dir  new_hard_link
find \( -name "*.htm" -o -name "*.html" \) -a -ctime -30 -exec ln {} /var/www/obsolete \;
find . -type f -exec md5 {} \;
find -iname "MyCProgram.c" -exec md5sum {} \;
find /media/Movies -type f -mtime -30 -exec ln -s {} /media/Movies/New/ \;
sh -c "find / -name myfile -type f -print 2> /dev/null"
ln -s "../config/environments"
ln /media/public/xampp/mysql/data/my_db -s
sudo ln -s /usr/include/oracle/11.2/client $ORACLE_HOME/include
ln -s -- ./local--pdf-kundendienst -pdf-kundendienst
ln -s /usr/share/my-ditor/my-editor-executable /usr/bin/my-editor
ln -s "/usr/local/ssl/bin/openssl /usr/bin/openssl
sudo ln -s /usr/lib/jvm/java-7-oracle /usr/lib/jvm/default-java
ln -s `canonical.bash foo` bar
ln -s `cd \`dirname $2\`; pwd`/`basename $2` $1/link
ln -s .bashrc test
ln -s www1 www
ln -s "/cygdrive/c/Program Files" /cygdrive/c/ProgramFiles
ln -sf '/cygdrive/c/Users/Mic/Desktop/PENDING - Pics/' /cygdrive/c/Users/Mic/mypics
find . -name '*.pdf' -print0
tar czvf pdf.tar --null -T -
find . -name *.pdf
xargs tar czvf /root/Desktop/evidence/pdf.tar
tar cvf - `find . -print` > backup.tar
find . \( -iname "*.png" -o -iname "*.jpg" \) -print -exec tar -rf images.tar {} \;
tar cvf - `find . -print` > backup.tar
find . -name -type f '*.mp3' -mtime -180 -print0
xargs -0 tar rvf music.tar
find . \( -iname "*.png" -o -iname "*.jpg" \) -print -exec tar -rf images.tar {} \;
find / -name *.jpg -type f -print
xargs tar -cvzf images.tar.gz
find $directory -type -f -execdir zip -j $ZipFileName {}\;
find . -maxdepth 2 -size +100000 -exec bzip2 {} \;
find . -name '*.log' -mtime +3 -print0
xargs -0 -P 4 bzip2
find . -name '*.log' -mtime +3 -print0
xargs -0 -n 500 -P 4 bzip2
alias subs="du -sch `find ./ -maxdepth 1 -type d`"
tar -c --checkpoint=.1000 /var
tar -c --checkpoint=1000 --checkpoint-action=dot /var
tar --exclude={*.png,*.mp3,*.wav,.git,node_modules} -Jcf ${target_tarball}  ${source_dirname}
tar -czf backup.tar.gz -X /path/to/exclude.txt /path/to/backup
tar -c --use-compress-program=pigz -f tar.file dir_to_zip
tar -I 7zhelper.sh -cf OUTPUT_FILE.tar.7z paths_to_archive
tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 /DIR_TO_ZIP/
tar -I pbzip2 -cf OUTPUT_FILE.tar.bz2 paths_to_archive
tar cf - $PWD
tar tvf -
tar cf - $PWD
tar tvf -
awk '{print $6}'
grep -v "/$"
tar czfP backup.tar.gz /path/to/catalog
find -name "*.txt" cp {} {}.bkup \;
mkdir a b c d e
mkdir bravo_dir alpha_dir
mkdir foo bar
mkdir mnt point
mkdir .hiddendir
mkdir /cpuset
sudo mkdir /data/db
mkdir /etc/cron.15sec
mkdir /etc/cron.5minute
mkdir /etc/cron.minute
mkdir /path/to/destination
mkdir /tmp/foo
mkdir /tmp/new
sudo mkdir /var/svn
mkdir TestProject
mkdir aaa
mkdir aaa/bbb
mkdir backup
mkdir certs/
mkdir destdir
mkdir -p dir
mkdir dir1
mkdir -m 777 dirname
mkdir -p es/LC_MESSAGES
mkdir -p foo
mkdir foo
mkdir ~/log
mkdir new_dir
mkdir ~/practice
mkdir ~/public_html
mkdir saxon_docs
mkdir subdirectory
mkdir tata
mkdir ~/temp
mkdir testExpress
cd bar1 find . -maxdepth 1 -name '*foo*' -not -name '*.cc'  -exec echo ln -s $PWD/{} ../bar2
find dir -name \*.jpg -print0
xargs -0 -N1 ln -s
find /original -name '*.processme' -exec echo ln -s '{}' . \;
ln -s $(echo /original/*.processme) .
find /incoming -mtime -5 -user nr -exec ln -s '{}' /usr/local/symlinks ';'
find /your/source/dir/ -iname '*.txt.mrg' -exec ln -s '{}' /your/dest/dir/ \;
(IFS=$'\n'; for t in `find -type f -name "*txt*"
sed 's
.*/
'`; do ln -s $t ../folder2/$t; done)
find / -name *.jpg -type f -print
xargs tar -cvzf images.tar.gz
Prints what month it was 222 days ago
ln -sf "$(readlink -f "$link")" "$link"
find . -empty -exec rm '{}' \;
find "$DIR" -type f -atime +5 -exec rm {} \;
find ~/ -name 'core*' -exec rm {} \;
find . -name "*.bam"
xargs rm
find . -name bad -empty -delete
find . -type f -empty -delete
find . -type f ! -iname "*.txt" -delete
find / -type f -name "*.txt" -print
xargs rm
find $HOME/. -name "*.txt" -ok rm {} \;
find kat -type f \( -name "*~" -p -name "*.bak" \) -delete
find . -name '*.doc' -exec rm "{}" \;
find . \( -name '*.wmv' -o -name '*.wma' \) -exec rm {} \;
find . -name "*.bak" -delete
find -L /usr/ports/packages -type l -exec rm -- {} +
find /prog -type f -size +1000 -print -name core -exec rm {} \;
find . -type d -empty -delete
find . -type d -empty -exec rmdir {} \;
find / -size 0 -ok rm { } \;
find . -empty -exec rm {}\;
find . -empty -ok rm {}\;
find . -empty -delete -print
find . -depth -type d -empty -exec rmdir {} \;
find . -maxdepth 1 -type d -empty -exec rm {} \;
find -name '*~' -delete
find -name '*~' -print0
xargs -0 rm
find . -name "*~" -print
xargs rm
find . -delete
find . -print0
xargs -0 rm
find / -nouser -exec rm {}\;
find . -size +1024 ?print
xargs -i rm \;
find . -nouser
xargs rm
find . ( -name '*.bak' -o -name *.backup ) -type f -atime +30 -exec rm '{}' ;
find . -mtime -14 -print
xargs -i rm \;
find / -user edwarda -exec rm "{}" \;
find / -user edwarda -ok rm "{}" \;
find . -type f -name "Tes*" -exec rm {} \;
find Música/* -type f -name ".*" -exec /usr/bin/rm -i {} \;
find -name '*.log' -delete
find ./ -name '*.log' -print0
xargs -0 rm
find ./ -name '*.log'
xargs rm
find . — name "*.LOG" — mtime +5 -ok rm {} \;
find . -type f -name "*.mp3" -exec rm -f {} \;
find /home/ -exec grep -l “mp3” {} \;
xargs rm
find /home -type f -name *.mp4 -size +10M -exec rm {} \;
find / -type f -print0
xargs -0 grep -liwZ GUI
xargs -0 rm -f
find . -maxdepth 1 -type f -delete
find . -type f -print -delete
find /var/www/*.php -type f -exec rm {} \;
find /tmp/ -ctime +15 -type f -exec rm {} \;
find /tmp/ -type f -mtime +1 -delete
find /tmp/ -type f -mtime +1 -exec rm {} \;
find /tmp/ -type f -mtime +1 -print0
xargs -0 -n1 rm
find /tmp/ -type f -mtime +1 -exec rm {} +
find . -name "*.txt" -ok rm {} \;
find . -type f -name "*.txt" -delete
find . -type f -name "*.txt" -exec rm -f {} \;
find / -name "oldStuff*.txt" -delete
find /tmp -name "*.tmp"
xargs rm
find /tmp -name "*.tmp" -print0
xargs -0 rm   find /tmp -name "*.tmp" -print0
xargs -0 rm
find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7 -exec rm {} \;
find /dirpath \( -name \*.trc -a -mtime +30 \) -exec rm {} \;
find . -iname .svn -exec rm -rf {} \;
find . -iname .svn -print
xargs rm -rf
find . -iname .svn -print0
xargs -0 rm -rf
bind '"\e[24~":"\C-k \C-upwd\n"'
find / -name 'program.c' 2>/dev/null
find / -path /proc -prune -o -user <account> -ls
find . -size +100000 -ls
find /home -size +100000 -ls 2>/dev/null
find . -mtime -14 -ls
find . -type f -empty
find $@ -ls
find . \( -name '*jsp' -o -name '*java' \) -type f -ls
find . -type f -ls
find ~ -type f -mtime 0 -ls
find / -nogroup \( -fstype jfs -o -fstype jfs2 \) -ls
find / -nouser \( -fstype jfs -o -fstype jfs2 \) -ls
find / -path /proc -prune -o -type f -perm +6000 -ls
find / -size +1000 -mtime +30  -exec ls -l {} \;
find . -type f -name “k*.*” -mmin -360 -exec ls -l ‘{}’ ;
xargs -0 /bin/rm -f
find / -type f -user root -perm -4000 -exec ls -l {} \;
find "$STORAGEFOLDER" -name .todo -printf '%h\n'
uniq
xargs ls -l
find "$STORAGEFOLDER" -name .todo -printf '%h\n'
xargs ls -l
find /mydir \(-mtime +20 -o -atime +40\) -exec ls -l {} \;
find . -size +10k -exec ls -l {} \;
find . -size +10k -type f -maxdepth 1 -exec ls -lh {} \; > myLogFile.txt
find ~ -iname '*.jpg' -exec ls {} \;
find ~ -iname '*.jpg' -exec ls {} +
find -exec grep -q fuddel {} ";" -exec grep -q fiddel {} ";" -ls
find / -size +1000k -exec ls -l {} \; -print
find . -mmin -60 -ls
find . -iname "Articles.jpg" -exec ls -l {} \;
find . -iname "Articles.jpg" -print0
xargs -0 ls -l
find /path-to-directory -type f -mtime +60 -exec ls -l {} \; > /path-to-directory/filenames.txt
find . -mmin -60 -type f -exec ls -l {} \;
find . -mmin -60 -type f -ls
find . -mmin -60 -type f
xargs ls -l
find ./ -type f -ctime -7 -exec ls {} \; > new.files
find /home -name Trash -exec ls -al {} \;
find . -type d -ls
find . -type d -exec ls -algd {} \;
find / -print0 -type d
xargs -0 ls -al
find / -type f -size 0 -exec ls -l {} \;
find /var -size +10000k -print0
xargs -0 ls -lSh
find . -name  * -exec ls -a {} \;
find . — type f -exec ls -1 {} \;
find . -size +10k -exec ls -ls {} \+
sort -nr
find -daystart   -atime 0 -ls
find . -size +10k -exec ls -lh {} \+
find . -mtime -1 -ls
find . -mtime -1
xargs ls -ld
find . -name "filename including space" -print0
xargs -0 ls -aldF > log.txt
find /home -size +200M -exec ls -sh {} \;
find / -name 'Metallica*' -exec ls -l {} \;
find . -type f -name '*.java' -ls
sort -k +7 -r
find . -size +1000k -name *.log -print0
xargs -0 ls –lSh
find . -type f -print0
xargs -0 ls -l
find . -maxdepth 1 -type f -exec ls -l {} \;
less
find . -type f -ls
find . -type f -exec sh -c 'printf "%s %s \n" "$(ls -l $1)" "$(md5sum  $1)"' '' '{}' '{}' \;
awk '{$8=""; print $0}'
find . -type f -exec sh -c 'printf "%s %s \n" "$(ls -l $1)" "$(md5sum $1)"' '' '{}' '{}' \;
find / -type f \( -perm -4000 -o -perm -2000 \) -exec ls -l {} \;
find /tmp -size 0 -atime +10 -exec ls -l {} \; > /tmp/checkold.txt
find / -regex ".*\.\(xls\
csv\)"
find / -type f \( -name "*.xls" -o -name "*.csv" \) -exec ls -l {} \;
find . -mmin 60 -print0
xargs -0r ls -l
find . -mmin -60 -type f -exec ls -l {} +
find . -mmin -60
xargs ls -l
find /etc -type d -print
find -type d
find . -type d -print0
find . -maxdepth 1 -mindepth 1 -type d
find . -iregex '.*/.git/.*' -prune -o -type d -name 'CVS'
find . -type d ! -perm -g+r,u+r,o+r -prune -o -print > files_and_folders
find -type d
find / -type d -print
find "$ORIG_DIR" -name "*" -type d
find /myfiles -type d
find /PROD -maxdepth 1 -type d
find Symfony -type d
find .vim/ -maxdepth 1 -type d
find -type d -and -atime +3
find . -size 0k
find ~ -empty
find /home -perm /a=x
find /dir/to/search/ -not -name "*.c" -print
find /dir/to/search/ \! -name "*.c" print
find $HOME -not -iname "*.c" -print
find $HOME \! -iname "*.c" print
find . -printf '%p '
find . ! — type d -print
find . -name \*.ext
cat - list.txt
sort
uniq -u
find . -type f -name '*.ini'
find "/proc/$pid/fd"
find . > files_and_folders
find . 2>&1
grep -v 'permission denied' > files_and_folders
find . 2>/dev/null > files_and_folders
find .
find -L .
find -regex "^.*~$\
^.*#$"
find . \! -name '.'
find . ! -name "*.txt"
find . ! -name '*git*'
grep git
find folder1/ -type f -printf "%d\t%p\n"
sort -n
sed -e "s
[0-9]*\t
"
find -regex "$rx"
find . -size +1M
find . -size +100k -a -size -500k
find -mmin 60
find -mmin +60
find . -print0
find .
xargs -I{} printf "%s%s\n" {} {}
(find /boot
sed s'/^/STDOUT:/' ) 3>&1 1>&2 2>&3
sed 's/^/STDERR:/'
find * -maxdepth 0 -name "efence*" -prune -o -print
find .
find . -print
find . -iname "*$@*" -or -iname ".*$@*"
find . -prune -print
find . -printf "%h/%f : dernier accès le %Ac\n"
find . -printf "%h/%f : dernier accès le %AA %Ad %AB %AY à %AH:%AM:%AS\n"
find . -maxdepth 0
find . -name "*.txt" -prune -o -print
find . -name \? -mtime -1
find . ! -size 0k
find . ! -user john
find . -not -regex ".*test.*"
find . -\( -name "myfile[0-9][0-9]" -o -name "myfile[0-9]" \)
find . -regextype sed -regex '.*myfile[0-9]\{1,2\}'
find . -regex '.*myfile[0-9][0-9]?'
find -name met*
find . 2>/dev/null >files_and_folders
find . -name test -prune -o -print
find . -name test -prune
find /dir -amin -60
find /dir -cmin -60
find /
find / -noleaf -wholename '/proc' -prune -o -wholename '/sys' -prune -o -wholename '/dev' -prune -o -perm -2 ! -type l  ! -type s ! \( -type d -perm -1000 \) -print
find / -name /transfer -prune -o -print
find / -size +50M -iname "filename"
find /usr -maxdepth 1 -print
find /usr/src ! \( -name '*,v' -o -name '.*,v' \) '{}' \; -print
find bar -path /foo/bar/myfile -print
find . -type f -newermt "2014-01-01" ! -newermt "2014-06-01"
find . -type f -name ".*"
find -name "*.htm" -print
find -name "*.htm"
while read file; do sed "s
<title>sometext</title>
<title>${file##*/}</title>
g" -i $file; done
find /usr -name tkConfig.sh
find . -name 'foo.cpp' '!' -path '.svn'
find / -name .profile -print
find -iname "*.jpg"
find / -name “*.mp3” -atime +01 -type f
find . \! -empty -type d
find . -type f
tac
find /home/the_peasant -type f
find teste1 -type f
find . -type f
find . -type f
find . -type f -print0
find . -type f
find . -type f -print0
find . -type f print0
sort -r
find . -type f -readable
find "$ORIG_DIR" -name "*" -type f
find pathfolder -type f
find "$ORIG_DIR" -name "*" -type d -o -name "*" -type f
find . -name *.pdf
find . -name '*.php' -o -name '*.xml' -o -name '*.phtml'
find . \( -type d -regex '^.*/\.\(git\
svn\)$' -prune -false \) -o -type f -print0
find -ds . -mindepth 1 -type f -print0; printf '\0';
find -type f -name "* *"
find image-folder/ -type f
find $directory -type f
find . -type f
find tmp -type f -printf "f %s %p\n"
find -type f -name *ummy
find . -type f -atime 7
find . -type f -atime -7
find . -type f -atime +7
find -type f -name dummy
find / -type f -name dummy 2>/dev/null
find dir -type f -printf "f %s %p\n"
find /Users/david/Desktop/-type f
find Symfony -type f
find -type f -and -mmin -30
find . -path "*src/main*" -type f -iname "*\.scala*"
find . -type f -path "*src/main/*\.scala"
find . -type f -regex ".*src/main.*\.scala$"
find . -name "*.sh"
find . -type l
find ./ -name "*.sqlite" -printf '%Tc %p\n'
find . -lname "*"
find /myfiles -type l
find -L /myfiles
find $target -type f -iname "*.txt"
find . -name "*.txt"
find . -name ".txt"
find . -type f -name "*.txt"
find /home/you -iname "*.txt" -mtime -60 -print
find "/tmp/1" -iname "*.txt"
find /tmp/1 -iname '*.txt' -not -iname '[0-9A-Za-z]*.txt'
find /user/directory/* -name "*txt" -mtime 0 -type f
find /Users/david/Desktop -type f \( -name '*.txt' -o -name '*.mpg' -o -name '*.jpg' \)
find . -name \*.c -print
find . \( ! -name . -prune \) -name "*.c" -print
find .  -name .svn -prune -o -name "*.c" -print
find /home/david -atime -2 -name '*.c'
find /home/david -amin -10 -name '*.c'
find . -name "*.mov"
find . -iname "*.mov" -printf "%p %f\n"
find -name *.sh
find . -name "*.c"
find . -type f \( -iname "*.sh" -or -iname "*.pl" \)
find . -type f \( -name "*.[sS][hH]" -o -name "*.[pP][lL]" \)
find /usr -name '*.sh'
find /usr -name \*.sh
find euler/ -iname "*.c*" -exec echo {} \; -or -iname "*.py" -exec echo {} \;
find kat -type f \( -name "*.c" -o -name "*.cpp" -o -name "*.h" \)
find /some/dir -maxdepth 1 \( -name '*.c' -o -name '*.h' \) -print
find /etc -name "*.conf" -printf "%f accessed %AF %Ar, modified %TF %Tr\n"
find .  -path '*/*config'
find /etc -name '*.conf'
find . -size 0 -printf '%M %n %u %g %s %Tb\n \b%Td %Tk:%TM %p\n'
find $x -type d -wholename '*' ! -wholename */@eaDir* > /tmp/mediaindex/$nn.dir
find . -type d
find . -type d -print
find -type d
sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\./mkdir -p &/}'
find -type d -path '.svn' -prune -o -print
find . -type d -name aa -prune
find . -type d -name aa -prune -o -print
find . -name secret -type d -prune -o -print
find . ! -name "node_modules" -type d
find . -type d -atime +2
find . -mindepth 1 -type d -print0
find . -type d -regextype posix-egrep -regex '\./processor[0-9]*/10\.(1
2)'
find . -type d -regextype posix-egrep -regex '\./processor[[:digit:]]*/10\.(1
2)'
find /path/to/dest -type d \( ! -name tmp \) -o \( ! -name cache \) -print
find /path/to/dest -type d \( ! -name tmp \) -print
find /usr/share -type d
find /var -maxdepth 2 -type d;
find master -type d
sort
find . -name '*.doc'
find . -empty
find . -empty
find / -size 0 -print
find /opt -type f -empty
find /home/david -name 'index*'
find /home/david -iname 'index*'
find . -maxdepth 1 -type d \( ! -name . \)
find . -not -name "*.pl"
find  .  -path  './src/emacs'  -prune  -o -print
find . -name "*:*"
find /home ! -group test -printf "%p:%g\n"
find /usr/src -name CVS -prune -o -depth +6 -print
find . -name .snapshot -prune -o -name '*.foo' -print
find . \( -name .snapshot -prune -o -name '*.foo' \) -print
find /var/adm/logs/morelogs/* -type f -prune -name "*.user" -print
find /var/adm/logs/morelogs/* -type f -prune \( -name "admin.*" -o -name "*.user" -o -name "*.user.gz" \) -print
find . -name \*.c -print0
find . -name "filename including space"
find . -name "filename including space" -print0
find . -type f -name "*searched phrasse*" ! -path "./tmp/*" ! -path "./var/log/*"
find .
sed 's/.*/& &/'
find .
find . -size +10k
find . -atime -15
find . -cmin +2 -cmin -6
find . -ctime -1 -print
find . -mtime +7
find . -perm /222
find . -name "file2015-0*"
find /usr -perm 0777 -print
find . -maxdepth 1 -print0
find . -maxdepth 0 -print
find . \( ! -path "*target*" -a ! -path "*tools*" -a ! -path "*.git*" -print \)
find . -name 'secret' -prune -o -print
find .
find . -print
find .
awk '{ print "FILE:" $0 }'
find .
xargs echo
find ./
find . -type f -printf "%C@ %p\n"
sort -rn
head -n 10
find . — name "*" — print -о -name ".*" — print -depth
find . -type f -printf '%T@ %p\n'
sort -n
tail -10
cut -f2- -d" "
find -printf '%p %T@\n'
sort > file1
find . -maxdepth 1 -type f
xargs -I ‘{}’ sudo mv {} /directory1/directory2
find . -type d -depth
find . -name PERSONAL -prune -o -print
find . ! -path *mmm*
find . -type d ! -name aa
find . \! -path "./.git*" -a \! -name states_to_csv.pl
find . -name mmm -prune -o -print
find /target/
grep -v '\.disabled$'
sort
find . \( -name 'secret' -a -prune \) -o -print
find . ! -wholename "./etc*"
find . \( -type d -name aa -prune \) -o \( -type f -name 'file*' -print \)
find . ! -path  "*.git*" -type f -print
find . -not -name "*.pl" -not -name "*.sh" -not -name "*.py"
find . -type f -atime -1
find . -type f -atime +1
sudo find . -print0
find . -mtime +30 -a -mtime -7 -print0
find . -name "*.ksh" -prune
find  -mtime -1
find \( -size +100M -fprintf /root/big.txt %-10s %p\n \)
find . -path './sr*sc'
find .  -path '*f'
find . -path './sr*sc'
find . -path './src/emacs' -prune -o -print
find .
xargs grep -PL "\x00"
xargs grep -Pl "\x0c"
find . -nogroup
find . -nouser
find . -name "*.bash"
find . -path './kt[0-9] '
find . -size +1024 -print
find . -amin -60
find . -newer /bin/sh
find . -newermt “Sep 1 2006” -and \! -newermt “Sep 10 2006”
find .  -newermt "1 hour ago"
find . -mtime -14 -print
find . -mtime -2
find . -mtime -1
find . -mtime -1 -print
find . \( -type d ! -name . -prune \) -o \( -mtime -1 -print \)
find . -mtime -5
find -mtime +7 -print
grep -Fxvf file.lst
find -mtime +7 -print
grep -vf file.lst > found.lst
find . -perm 777  -mtime 0 -print
find . -perm 777 -a -mtime 0 -a -print
find . -name '*bills*' -print
find . -name 'fileA_*' -o -name 'fileB_*'
find .
find . -name modules
find / -name "*" — print
find / -type f -exec echo {} \;
find / -size +10000k
find / -name "apache-tomcat*"
find / -perm -u+s -print
find / \! -name "*.c" -print
find / -newerct '1 minute ago' -print
find / -fstype nfs -print
find / -size 20
find / -nogroup staff -print
find / -nouser -print
find / -group lighttpd -print
find / -user user1
find / -newer ttt -user wnj -print
find / \( -newer ttt -or -user wnj \) -print
find / -uid 1005
find / \! \( -newer ttt -user wnj \) -print
find / -mmin -10
find "$ORIG_DIR"
find /Users/Me/Desktop -user popo -perm 777
find /Users/Me/Desktop -readable
find /dev -user "peter"
more
find /home/mywebsite -type f -ctime -7
find /etc /srv \! -path "./srv/tftp/pxelinux.cfg*" -a \! -name /etc/mtab
find /home ! -group test
find /home -not -group test
find /home -perm /u=s
find /mp3-collection -name 'Metallica*' -or -size +10000k
find a
find /etc /srv \( -path /srv/tftp/pxelinux.cfg -o -path /etc/mtab \)  -prune -o -print
find /mydir1 /mydir2 -size +2000 -atime +30 -print
find $HOME -print
find /home ! -name "*.txt"
find /home/ -mtime -1 \! -type d
find $HOME -mtime -1
find $HOME -mtime -7
find $HOME -size -500b
find ~ -size -500b
find ~ -name 'arrow*'
find ~ -name 'arrow*.xbm'
find /home -type f -name *.sxw -atime -3 -user bruno
find ~ -name '*.xbm'
find $HOME -mtime +365
find /home -perm /u=r
find kat -printf "%f\n"
find /usr -newer /tmp/stamp$$
find /usr/ -path "*local*"
find /usr -newermt "Feb 1"
find . -path ./src/emacs -prune -o -print
find . -path "./sr*sc"
find . -maxdepth 1 -name "name1" -o -name "name2"
find . -name \*.h -print -o -name \*.cpp -print
find . -regex '.*\.\(cpp\
h\)'
find \( -name '*.cpp' -o -name '*.h' \) -print
find /dir/to/search -path '*/.*' -print
find /dir/to/search/ -name ".*" -print
find /home -name ".*"
find /home -type f -name "*.sxw" -atime -3 -user bruno
find . -name "*.html" -print
find . -name \*.html
find . -path "./foo" -prune -o -type f -name "*.html"
find . -path "./foo" -prune -o -path "./bar" -prune -o -type f -name "*.html"
find . -mtime 7 -name "*.html" -print
find . -mtime -7 -name "*.html" -print
find . -mtime +7 -name "*.html" -print
find /var/www -type f -name "*.html"
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find /etc -type f -exec cat '{}' \;
tr -c '.[:digit:]' '\n'
grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
find . -iname '*.jar'
find src/js -name '*.js'
find . -name "*.js"
find dir1 -type f -a \( -name "*.java" -o -name "*.as" -o -name "*.xml" \)
find . -maxdepth 1 -mindepth 1 -iname '*.jpg' -type f
find . -name *.jpg -user nobody
find . -type f -iregex '.*\.jpe?g'
find /var/log -name "*.log" -print0
find /var/log -name "*.log" -print0 2>/dev/null
find /storage -type f \( -name '*.mp4' -o -name '*.flv' \) -printf '%T@ %p\0'
sort -zn)
find $dir -type f -name $name -print
find . -type f
find . -maxdepth 3 -type f
find . -type f -empty
find FOLDER1 -type f -print0
find "/path/to/pdfs/" -type f -name "$1*.pdf" -printf "%TY/%Tm/%Td %TH:%TM %p\n"
sort -n -k1.1,1.2 -k1.3,1.4 -k1.6,1.7 -k1.9,1.10 -k2.1,2.2 -k2.4,2.5 -k3  > remoteuser@remoteserver:/u/tmp/CustTmp/zzz_pdfs.txt
find . -type f -name "*.php" ! -perm 644
find / -name "*.php"
find . -type f
find . \( \( -path "\.?.*" -type d \) -o -path "*normal*" \) -prune -o \( -type f \) -print
find . -type f -user tom
find "$dir" -maxdepth 1 -type f
find . -path "*.git" -prune -o -type f -print
find . -path "*.git*" -prune -o -type f -print
find . -type f -size +10k
find . -type f -size 10k
find . -type f -size -10k
find . -type f -newer file.log
find . -type f ! -perm 777
find . -type f -perm 777
find ${FOLDER} -type f ! -name \".*\" -mtime -${RETENTION}
find src/js -type f
find "$dir" -name "*.mod" -type f -print0
find $FILES_PATH -type f
find ./subdirectory/ -type f
find ./subdirectory -type f 2>>error.log
find -type f -printf '"%p"
find . -type f
find . -type f -name \*
find . -type f -print0
find . -mmin 60 -type f
find /root -type f -size +500M -printf "The %p file is greater than 500MB\n"
find . -type f
find . -mindepth 2 -type f
find . \( -name bbb -o -name yyy \) -prune -o -type f -print
find . -name mmm -prune -o -type f -print
find . -type f -amin +10
find . -type f -newer "$FILE"
find -maxdepth 1 -type f newermt "$timestamp"'
find . -mtime 0 -type f
find / -type f -exec echo {} \;
find /home/user/demo -type f -perm 777 -print
find /path/ -type f -daystart -mtime +0
find ~/ -daystart -type f -mtime 1
find -L /target ! -type l
find . -type f -exec stat {} \; > /dev/null
find . -type f -exec stat {} + > /dev/null
find . -type l
find ./ -type l
find . -name "*.tex"
find . -name \*.tex
find . -regex ".*\(\.txt\
\.pdf\)$"
find . -name "*.txt" -print
find ~ -name "*.txt" — print -o -name ".*" — print
find . \( -name "*.txt" -o -name "*.pdf" \)
find . \( -name skipdir1 -prune , -name skipdir2 -prune -o -name "*.txt" \) -print
find $1 -type f -name '*'$n'.txt'
find . -name "*.txt"
find . -name "*.txt" -printf "%f\n"
find . -name "*.txt" -printf "%f\n" > /tmp/a
find -name “*.txt”
find . -name bin -prune -o -name "*.txt" -print
find -name "*.txt" 2>>/dev/null
find . -type f -name "*.txt" ! -name README.txt -print
find . -mmin 0.5
find /home -name "*.txt"
find /home -iname "*.txt"
find /tmp -name *.txt
find $DBA/$ORACLE_SID/bdump/*.trc -mtime +7
find . -type f -group sunk
find . ! -user root
find -type f -name '*.ext'
grep -vFf list.txt
find . -type f -name "*.ext" $(printf "! -name %s " $(cat list.txt))
find . -type f -name "*.ext" -exec grep -v "^{}$" list.txt
echo {} \;
find . -type f -name \*.ext
xargs grep foo
find . -name '*.pdf' -or -name '*.PDF'
find . -size +10k -ls
find . -name '*.c' -ls
find /tmp/ -exec ls "{}" +
find
xargs ls
find -print0
xargs -0 ls
find . -size 0 -ls
find /dir/to/search -path '*/.*' -ls
find /dir/to/search/ -type d -iname ".*" -ls
find /dir/to/search/ -name ".*" -ls
find $HOME/projects/ -name ".*" -ls > foo.txt
find $HOME -name ".*" -ls
find /dir/to/search/ -type f -iname ".*" -ls
find . -name 'my*' -type f -ls
find /home/ -type f -size +512k -exec ls -lh {} \;
find /home/ -type f -size 6579c -exec ls {} \;
find /home/peter -nouser -exec ls -l {} \; -ok chown peter.peter {} \;
find . -name "*.pl" -ls
find . -size -26c -size +23c -exec ls -l '{}' \;
find . -size -26c -size +23c -ls
find . -mtime -2 -type f -name "t*" -exec ls -l '{}' \;
find /usr/bin -type f -size -50c -exec ls -l '{}' ';'
find . -empty -exec ls -l {} \;
find /myfiles -exec ls -l {} ;
find / -dev -size +3000 -exec ls -l {} ;
find . -daystart -ctime 4 -ls -type f
find Música/* -type f -name ".*" -exec ls -l {} \;
find . -type l -exec ls -l {} \;
find . -name "*.txt" -exec ls -la {} \;
find . -name "*.txt" -exec ls -la {} +
find . -name "*.txt" -exec ls -la {} \; -exec ./myScript.sh {} \;
find . -type d -ls
head
find /usr/share/man/ -type f -exec ls -S {} + 2>/dev/null
head
find . -name '*.deb' -printf "%f\n"
find . -printf 'Name: %f Owner: %u %s bytes\n'
find
head
find /tmp
head
find /usr/local/apache/logs/ -type f -name "*_log"
xargs du -csh
find . -name "*.NEF" -exec basename \{\} .NEF \;
find . -name "*.flac" -exec basename \{\} .flac \;
find . -type f -exec echo chown username {} \;
find . -maxdepth 1 -name "*.jpg" -size -50k
xargs echo rm -f
find / -type f -name lilo.conf 2>/dev/null -exec cat {} \; >lilo.txt
find / -type f -name lilo.conf 2>/dev/null -exec cat {} \; >lilo.txt
cat $(find src/js -type f -name "*.js" -printf "%d\t%p\n"
sort -n
sed -e "s
[0-9]*\t
")>min.js
find src/js -type f -name "*.js" -exec cat {} >> ${jsbuild}$@ \;
find . -name "*.fq"  -exec cat '{}' ';'
fastqc  /dev/stdin
find / -type f -name dummy 2>/dev/null -exec cat {} \;
find / -type f -name dummy 2>/dev/null -exec cat {} \; >tesst.txt
find . -iname '*test*' -exec cat {} \;
find . -iname '*test*' -exec cat {} \;
cat `find . -type f` > out.txt
find . -type f -exec cat {} \; > out.txt
find . -type f -print0
xargs -0 cat > out.txt
find . -type f
xargs cat > out.txt
find / -type f -name dummy 2>/dev/null -exec cat {} \;
find / -type f -name dummy 2>/dev/null -exec cat {} \; >tesst.txt
find . -name  '*.txt' -exec cat {} \;
find . -type f -name "*.txt" -exec cat {} \;> all.txt
find /path/to/directory -type d \! -name . -prune -exec printf x \;
wc -c
find . -type f
wc -l
find . -type d –print
wc -l
find /mount/point -type d
wc -l
find . -print
wc -l
find . -type f
wc -l
find . -name "*.html" -print
xargs -l -i wc {}
find
wc -l
find . -maxdepth 1 -type f
wc -l
find /path/to/dir -type f -exec printf %.sX {} +
wc -c
find . -type f -empty
wc -l
find . -type f -not -empty
wc -l
find /home/you -iname "*.txt" -mtime -60
wc -l
find /var -maxdepth 2 -type d -printf "%p %TY-%Tm-%Td %TH:%TM:%TS %Tz\n"
find /var -maxdepth 2 -type d -exec stat  -c "%n %y" {} \;
find / -type f -printf "\n%Ab %p"
head -n 11
find . -printf "%y %p\n"
find / -type f -size +20000k -exec ls -lh {} \;
awk '{ print $8 ": " $5 }'
find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
find . -size +100M -exec ls -s {} \;
find /dir/dir -type f -mtime +540 -mtime -720 -printf \”%p\”,\”%s\”,\”%AD\”,
”%TD\”\\n > /dir/dir/output.csv
find --help
find . -type f \( -name "*.htm*" -o -name "*.js*" -o -name "*.txt" \) -exec sh -c 'echo "$0"' {} \;
find . -type f \( -name "*.htm*" -o -name "*.js*" -o -name "*.txt" \) -print0
xargs -0 -n1 echo
find . -type f \( ! -iname ".*" \) -mtime +500 -exec ls {} \;
find . -type f -not -name ‘.*’ -mtime +500 -exec ls {} \;
find . -type f -name "*.txt" ! -path "./Movies/*" ! -path "./Downloads/*" ! -path "./Music/*" -ls
find ~/junk   -name "*" -exec ls -l {} \;
find /var/log/ -mtime +60 -type f -exec ls -l {} \;
man find
find . -type f -size +50000k -exec ls -lh {} \;
awk '{ print $9 ": " $5 }'
find /var/log -type f -size +100000k -exec ls -lh {} \;
awk '{ print $9 ": " $5 }'
find . -type d -maxdepth 1 -exec basename {} \;
find . -type d -maxdepth 1 -mindepth 1 -exec basename {} \;
find . -maxdepth 1 -name '*.dat' -type f -cmin +60 -exec basename {} \;
find . -prune -name "*.dat"  -type f -cmin +60
xargs -i basename {} \;
find ./ -name "*.dat" -type f -cmin +60 -exec basename {} \;
find . -name "*.c" -exec wc -l {} \;
find . -name "*.c" -print
xargs wc -l
find . -name "*.c" -print0
xargs -0 wc -l
find . -exec wc -l {} \;
find . -name '*'
xargs wc -l
find . -name "*.h" -print
xargs wc -l
1 down vote wc -cl `find . -name "*.php" -type f`
find -name '*php'
xargs cat
wc -l
find ${START_DIR} -mtime -${DAYS}
xargs stat -c "%s"
awk '{sum += $1}END{print sum}'
find /var/www/ -type f -name «access.log*» -exec du -k {} \;
awk '{s+=$1}END{print s}'
find . -type f -exec ls -s {} +
sort -n -r
head -3
find /etc/ -type f -exec ls -s {} +
sort -n
head -3
find . -xdev -printf ‘%s %p\n’
sort -nr
head -20
find / -type f -print
xargs file
find --version
find --version
find -version
find / -type f -printf "\n%AD %AT %p"
head -n 11
find .
find .
curl -L -C - -b "oraclelicense=accept-securebackup-cookie" -O http://download.oracle.com/otn-pub/java/jce/8/jce_policy-8.zip
curl http://127.0.0.1:8000 -o index.html
curl http://example.com/textfile.txt -o textfile.txt
curl -s http://page.that.serves.json.com/json/
json_xs
curl -s http://search.twitter.com/search.json?q=node.js
json
curl -x http://proxy_server:proxy_port --proxy-user username:password -L http://url
curl --socks5 125.119.175.48:8909 http://example.com/
curl http://www.example.com --proxy http://125.119.175.48:8909
curl https://raw.github.com/creationix/nvm/master/install.sh
sh
curl https://www.npmjs.com/install.sh
sh
curl --data-urlencode "paramName=param" www.example.com
curl http://example.com/
curl -L https://get.scoop.sh
curl -o- https://raw.githubusercontent.com/creationix/nvm/v0.31.0/install.sh
bash
find .
shopt -s extglob; cd bar2; ln -s ../bar1/foo!(*.cc) .
find . -path "./dirtoexclude" -prune \     -o -exec java -jar config/yuicompressor-2.4.2.jar --type js '{}' -o '{}' \;
find . -name *.php -or -path "./vendor" -prune -or -path "./app/cache" -prune
find originals -name '*.jpg'
xargs -1 -P 2 makeallsizes
find originals -name '*.jpg'
xargs -1 makeallsizes
true
sleep 10
bind -x '"\eW":"who"'
find . -print
tar -xzvf backup.tar.gz
$ tar xvfJ filename.tar.xz
tar -xvzf passwd.tar.gz
sudo tar xvf phantomjs-1.9.0-linux-x86_64.tar.bz2
gzip -dc archive.tar.gz
tar -xf - -C /destination
tar xzf archive.tar.gz -C /destination
tar xpvf /path/to/my_archive.tar.xz -C /path/to/extract
tar --strip-components 1 -xvf my_directory.tar.gz
tar -zxvf $1
zcat doc.gz
split -l 1000 --filter='gzip > $FILE.gz'
gzcat large.csv.gz
split -l 1000 - xxx
tac infile
sed -ne '/pattern2/,/pattern1/ p'
tac -
find / -perm 1551
join -t, file1 file2
awk -F, 'BEGIN{OFS=","} {if ($3==$8 && $6==$9 && $7==$10) print $1,$2,$3,$4,$6,$7}'
join file{1,2}.txt
awk '$2 != $3 { print "Age of " $1 " is different" }'
find /usr/share \! -type d wc -l
bind -p
grep -a forward
find . -type f -name "*.java" -exec grep -il string {} \;
find . -iname foo -type d
find . -iname foo
find foo -path /tmp/foo/bar -print
find /tmp/foo -path /tmp/foo/bar -print /tmp/foo/bar
find foo -path /tmp/foo/bar -print
find foo -path /tmp/foo/bar -print
find foo -path foo/bar -print
find . -name '*.js' -\! -name 'glob-for-excluded-dir' -prune
find . -lname '*sysdep.c'
find ./ -regex "./cmn-.\.flac"
find . -type f -name "*.txt" -exec sed '/\-/s /\-.*//g'  {} \;
find . -name *.gif -exec ls {} \;
find -name "*.txt" 2>>/dev/null
find -name '*.js' -not \( -path './node_modules/*' -o -path './vendor/*' \)
find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
find /var/www -name *.gif -ctime +90 -ctime -180
find . -type f ( -iname '.cpp' -o -iname '.hpp' -o -iname '.c' -o -iname '.h' -o -iname '.cc' -o -iname '.hh' ) -print
xargs etags -a
find . \! -path "*CVS*" -type f -name "*.css"
find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
find . -type f -name "*.java" -exec grep -il string {} \;
find /usr/local/doc -name '*.texi'
find foo -path foo/bar -print
find /opt /usr /var -name foo.scala -type f
diff <(curl -s http://tldp.org/LDP/abs/html/) <(curl -s http://www.redhat.com/mirrors/LDP/LDP/abs/html/)
find /. -name 'toBeSearched.file' 2>/dev/null
find /. -name 'toBeSearched.file' 2>&1
grep -v 'Permission denied'
find ./ -name "foo.mp4" -exec echo {} \;
find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
find -daystart -mtime 2
find . -atime +6 -exec ll
more
find . -type d -name tmp -prune -o -print
cpio -dump /backup
find /home/archive -type f -name "*.csv"  -mtime -2 -exec gzip -9f {} \;
find . *
grep -P "[a-f0-9\-]{36}\.jpg"
find . \( -name a.out -o -name '*.' -o -name  'core' \) -exec rm {} \;
find . -name 'cmn-*.flac'
find . -name 'cmn-*.flac' -print
grep -P '[\x4e00-\x9fa5]'
find . -name 'cmn-*\.flac' -print
grep -P './cmn-[\x4e00-\x9fa5]\.flac'
(find $DIR/tmp/daily/ -name *.tar.gz
sort -n
head -2
find $HOME -name '*.c' -print
xargs grep -l sprintf
find . -name '*.js' -not -path '*exclude/this/dir*'
find . -name  "*.java"
find . -name  \*.java
find . -name "*.sh" -print0
xargs -0 -I {} mv {} ~/back.scripts
find /usr/tom
egrep '*.pl
*.pm'
xargs cat
grep <PATTERN>
find /users/tom -name '*.p[lm]' -exec grep -l -- '->get(' {} +
xargs grep -l '#hyphenate'
find . -name "*.css" -exec grep -l "#content" {} \;
find . -name "*.css" -exec sed -i -r 's/#(FF0000
F00)\b/#0F0/' {} \;
find / -user seamstress -iname “*.pdf”
find . -name "*.c" -o -name "*.cpp" -o -name "*.h" -o -name "*.hpp" > cscope.files
find -name "*.cpp" -o -name "*.c"
find -regex '.*\.\(c\
cpp\)'
find /project/directory -iname '*.php' -or -iname '*.phtml'
grep -iv '/some/directory'
xargs xgettext
find . -type f \( -name "*.class" -o -name "*.sh" \)
find /home/pat -iname "*.conf"
find . -iregex "./[^/]+\.dat" -type f -cmin +60 -exec basename {} \;
find . -name "*.dat" -type f -cmin +60
grep "^./[^/]\+dat"
sed "s/^.\///"
find . -type d
find . -type d -name "*"
find . -name '*foo*' ! -name '*.bar' -type d -print
find -type d
find . -type d -maxdepth 1
find . -type d -name build
find  / -type d -name "apt" -ls
find  / -type d -name "project.images"
find  / -type d -name "project.images" -ls
find /usr -name lib64 -type d
paste -s -d:
find /volume1/photo/ipcam -maxdepth 1 -type d -name "????-??-??" -mtime +0 -exec sh -c 'echo /home/pi/Dropbox-Uploader/dropbox_uploader.sh move /ipcam/$(basename {}) /ipcam/archive' \;
find / -type d -name root
find /home/john -type d -name test -print
find /tmp -type d -empty
find /tmp -type d -empty
find / -empty
find /tmp -type f -empty
find ~ -empty
find . -size 0
find / -executable
find  /home -type f -perm /a=x
find .  -type f  -exec ls -lrt {} \;
awk -F' ' '{print $9}'
find  / -name "apt"
find  / -name "apt" -ls
find . -atime +7 -size +20480 -print
find . -type f -name "*.tmp"  -exec rm -rf {} \;
find . -mtime -7
find . -type f -exec stat -c "%s %N" {} \;
find . -type f -exec stat -f "%z %N" {} \;
find . -printf "%i \n"
find . -print0
xargs -0 stat -f '%i '
find . -type f -name "Foo*" -exec rm {} \;
find . -name "*.fq"
xargs -n 1 fastqc
find . -type f -name "*.js.compiled"
find ./js/ -name "*.js.compiled" -print0
find . -name "*.js.compiled" -exec rename -v 's/\.compiled$//' {} +
find . -name "*bsd*" -print
find /usr/bin
xargs file
find ~/lpi103-2/ -depth -print0
cpio --null -o > ../lpicpio.2
find . -perm 777 -print
find .
xargs wc -l
find . -name some_pattern -print0
xargs -0 -I % mv % target_location
find . -name some_pattern -print0
xargs -0 -J % mv % target_location
find . -name some_pattern -print0
xargs -0 -i mv {} target_location
find . -iregex ".*packet.*"
find . -size +1M -exec mv {} files \+
find . -size +1M -print0
xargs -0 -I '{}' mv '{}' files
find . -size +1M -ok mv {} files \+
find ./ -size +1000k
find . -size +270M -size -300M
find . -size 300M
find . -size -300M
find . -size +300M
find . -amin 10
find /etc -daystart -ctime -1
find /etc -ctime -1
find ~ -newer /tmp/timestamp
find ~ -mtime 1 -daystart
find /home/bozo/projects -mtime 1
find -anewer /etc/hosts
find -newer /etc/passwd
find . ! -readable -prune
find . ! -perm -g+r,u+r,o+r -prune
find . -type f \( -name "*.js" ! -name "*-min*" ! -name "*console*" \)
find . -size -1c -print
find -size +2M
find . -size +4096k -print
find . -size -26c -size +23c -print
find . -depth -print0
cpio --null -o > ../lpicpio.1
find . -type f -exec grep "applicationX" {} \;
find -mmin 1 -print
find -mmin 2 -print
find . -mmin +10 -print
find . -mtime +10 -print
find . -name "*,txt"
find . -name \? -mtime +0
find . -size +10M -size -50M -print
find . — size +10 -print
find . -type f -empty
find . -type f -size 0b
find -name '*macs'
find . -amin -30
find -newer /etc/passwd
find -maxdepth 1 -type f newermt "$timestamp"'
find . -mtime -1 -print
find . -name \? -mtime -1
find . -atime +30 -print
find . -atime +7 -o -size +20480 -print
find . -atime +7 -o -size +`expr 10 \* 1024 \* 2` -print
find ./ -daystart -ctime +2
find . -name \? -mtime +0
find . -perm -0002 -print
find . -name pro\*
find . -size -50k
find . -type f -perm 777 -exec chmod 755 {} \;
find / -size +100M
find / -iname "filename"
find / -newer /tmp/checkpoint
find / -nouser
find / -group users -iname "filename"
find / -user pat -iname "filename"
find / -atime 0
find / -nouser -nogroup
find / -atime +2
find / -size +3G
find / -size 2048c
find / -perm 777 -iname "filename"
find /myfiles -size 5
find /myfiles -atime +30
find /etc -newer /tmp/foo
find /path/to/dir -newermt yyyy-mm-dd ! -newermt yyyy-mm-dd -ls
find $HOME -mtime -1
find $HOME -mtime -7
find ~ -type f -mtime -2
find ~ -mtime 2 -mtime -4 -daystart
find / -name linux
find . -type f -not -name "*.html"
find . -amin -1
find . — name "[A‑Z]*" — print
find . -perm -600 -print
find . -perm +600 -print
find . -uid 0 -print
find . -type d ! -perm -111
find . -type f ! -perm -444
find /some/dir -mmin -$((currtime + (24 * 60))) -a -mmin +$((${currtime} + 1))
find -used +2
find / -name "dir-name-here"
find / -name filename -exec  nano '{}' \;
find / -name game
find /home -type f -mtime +90 -mtime -100  -exec rm  {} \;
find /usr -print
find /etc -type f -exec cat '{}' \;
tr -c '.[:digit:]' '\n' \
grep '^[^.][^.]*\.[^.][^.]*\.[^.][^.]*\.[^.][^.]*$'
find /etc -exec grep '[0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*[.][0-9][0-9]*' {} \;
find /etc/sysconfig -amin -30
find . -name "*.foo" -exec somecommand "{}" \;
find . -name '*.foo' -print0
xargs -0 -n 1 somecommand
find ./
grep -E 'foo
bar'
find . 2>&1
grep -v 'Permission denied' > some_file
find . -type d \( -path dir1 -o -path dir2 -o -path dir3 \) -prune -o -print
find ! -path "dir1" ! -path "dir2" -name "*foo*"
find / -name *.mp3
find / -name *.mp3 -fprint nameoffiletoprintto
find . -name '*song*abc2009*.jpg'
sed 's/\(^.*song.*\)abc2009\(.*.jpg\)$/mv "&" "\1def2010\2"/'
sh
find /usr/bin -name [ef]*x
find / -type f ! perm 777
find / -name foo.bar -print
find / -name foo.bar -print 2>/dev/null
find / -name foo.bar -print -xdev
find / -name "*gif" -print
find /home/foo -name "*.gz"
find /nas/projects -name "*.h"
find . -type f -name ".*" -newer .cshrc -print
find . \( -size 100 -o -size -100 \)  -name '*.html' \    -exec  ls -l {} \;  2> /dev/null
find ./ -type f -iregex ".*\.html$" -or -iregex ".*\.cgi$"
find . -name "my.txt" 2>/dev/null
find . -name "my.txt" 2>&1
grep -v "Permission denied"
find . -name "my.txt" 2> find_error.txt
find . -name nameoffile -print
cpio -iv > /dev/fd0
find . -name "openssl" 2>&1
sed '/Permission denied/d;'
find . -name "openssl" 2>/dev/null
find / -name expect 2>/dev/null
find . -name "*.jar" -exec jar -tf {} \;
grep  "message_track.properties"
find . -name "*.jar" -exec unzip -l {} \;
grep -E "Archive:
message_track.properties"
find . -name "*.jar" -print -exec jar -tf {} \;
awk '{if($1~/jar$/)jar=$1;else if($1~/message_track/)arr[jar]=$1;}END{for(i in arr){print i " contains " arr[i]}}'
find . -name "*.jar" -print -exec jar -tf {} \;
egrep  "jar$
message_track.properties"
find . -type f -name "*.java" -exec perl -p -i -e "s/[ \t]$//g" {} \;
find . -name '*.java' -exec grep REGEX {} \;
find . -name '*.js'
find . -type f -name "*.JPG"
find . -name "*.jpg"
find */201111/* -name "*.jpg"
sort -t '_' -nk2
find dir -name image\*.jpg -exec /bin/ksh script.ksh {} \;
find /somepath -type f -iregex ".*\.(pdf\
tif\
tiff\
png\
jpg\
jpeg\
bmp\
pcx\
dcx)" ! -name "*_ocr.pdf" -print0
find build -not \( -path build/external -prune \) -not \( -path build/blog -prune \) -name \*.js
find build -not \( -path build/external -prune \) -name \*.js
find -name '*.js' -not -path './node_modules/*' -not -path './vendor/*'
find . -name '*.js' -not \( -path "./dir1" -o -path "./dir2/*" \)
find . -name '*.js' -not \( -path "./dir1" -o -path "./dir2/*" -o -path "./dir3/*"\)
find /home -type f -name *.log -size +100M -exec rm -f {} \;
find ./ -type f
tee /tmp/grep1 /tmp/grep2 >/dev/null
find . -type f -exec wc -l {} +
find . -type f -print0
xargs -0 wc -l
find . -type f -ls
awk '{print $(NF-3), $(NF-2), $(NF-1), $NF}'
find . -type f -print0
xargs -0 sed -i '' 's/2013/2012/g'
find . -maxdepth 1 -type f -name '*~' -delete  -or -name '#*#' -delete
find . -maxdepth 1 -type f  -name '*~' -exec mv {} /tmp/ \;  -or  -name '#*#' -exec mv {} /tmp/ \;
find . -type f -print
find / -type f -iname "filename"
find //path/to/source/Directory -type f -exec md5sum {} +
awk '{print $0}' > Output.txt
find /some/dir/ -type f > somefile
find / -executable
find / -readable
find . \( -name '*.pdf' -or -name '*.PDF' \) -execdir sh -c 'mv -v "$1" "$(echo "$1"
tr " " "_"
tr -d "{()},\!'\''"
tr "A-Z" "a-z"
sed "s/_-_/_/g")"' _ {} \;
find . -name “*.pdf” -print
find /var/www/ -type f -iname "*.php" -print
find . -type f -name '*.png'
find . -name "*.png" -print0
xargs -0 mogrify -format jpg -quality 50
find . -name "*.png" -print0
xargs -0 mogrify -format jpg -quality 50
find . -regextype posix-extended -regex "[a-f0-9\-]\{36\}\.jpg"
find . -name '*.py' -exec bash -c 'test -f $(dirname "$1")/Makefile' -- {} \; -print
find . -type f -iname '*.CR2' -print0
xargs -0 -n 1 -P 8 -I {}
find /usr/share/doc -name README
find / -readable
find /usr/share/doc -name README
find . -regextype sed -regex ".*/[a-f0-9\-]\{36\}\.jpg"
find . -regex '\./[a-f0-9\-]\{36\}\.jpg'
find . -regex "./[a-f0-9\-]\{36\}\.jpg"
find . -type f -name "*html"
xargs tar cvf jw-htmlfiles.tar -
find . -type f -print0
xargs -0 grep -c banana
grep -v ":0$"
find .  \( ! -path "./output/*" \) -a \( -type f \) -a \( ! -name '*.o' \) -a \( ! -name '*.swp' \)
xargs grep -n soc_attach
find "$DIRECTORY_TO_PROCESS" -type f -iregex ".*\.$FILES_TO_PROCES"  ! -name "$find_excludes" -print0
xargs -0 -I {} bash script.bash {}
find . -type f -exec sed -i 's/searc/replace/g' {} \;
find -s . -mindepth 1 -type f -print0; printf '\0';
find /etc/sysconfig -amin -30 -type f
find ~ -type f -mtime -2
find $(pwd)/* -type f -exec stat -c "f%15s %n" {} +
find -type f -mtime -60
find -type f
find -type f -exec perl -e 'printf qq[%s => %s\n], scalar @ARGV, length join q[ ], @ARGV' {} +
find -mtime -5 -type f -print
find . \( -iname "*photo*" -or -name "*picture*" \) -and ! -type d -and -mmin -30
find /myfiles -type f -perm -o+rw
find pathfolder -type f  2> err.txt
wc -l
find . -type f -path "*/cpp/*"
cp `find -perm -111 -type f` /usr/local/bin
find ./ -name "*.sqlite"
find -type l
find /usr -type l
find /home/john -name "*.sh" -type f -print
find . -name ".txt"
grep "foo"
xargs rm
find . -name ".txt" -exec rm "{}" \;
find . -name ".txt"
grep a
find . -type f -name '*.txt' -exec sed --in-place 's/[[:space:]]\+$//' {} \+
find . -iname '*.txt' -type f -exec sed -i '' 's/[[:space:]]\{1,\}$//' {} \+
find . -type f -name "*.txt" -exec sh -c 'for i;do sed 's/[[:space:]]*$//' "$i">/tmp/.$$
mv /tmp/.$$ "$i";done' arg0 {} +
find . –name "*.txt" –mtime 5
find . -name "*.txt" -print
find . -name '*.txt'
cpio -pdm /path/to/destdir
find . -name "*.txt" -print
find -name "*.txt"
find . -name '*.txt' \! -wholename '*/.svn/*' -exec grep 'sometext' '{}' \; -print
find . -name "*.txt" -newer /tmp/newerthan
find FFF -name "*.txt" -exec md5sum '{}' \;
find FFF -name "*.txt" -exec md5sum '{}' \; > $TMP_ORI
find /user/directory/* -name "*txt" -mtime 0   -type f -exec awk '{s=$0};END{print FILENAME, ": ",s}' {} \;
find /user/directory/ -name "*txt" -mtime 0 -type f -exec printf '%s: ' {} \; -exec tail -1 {} \;
find /user/directory/ -name "*txt" -mtime 0 -type f -printf '%p: ' -exec tail -1 {} \;
find . -name '*.text' -exec $SHELL -c '[ ! -f ${1%.*} ]' $SHELL '{}' ';' -print
find . -name '*.text' -exec sh -c 'for i do if [ ! -f "${i%.text}" ]; then echo == $i; fi;done' sh {} +
find . -name '*.text' -exec sh -c 'if [ ! -f "$(dirname "$1")/$(basename "$1" .text)" ]; then echo == $1; fi' sh {} \;
find ./ -name '*.JPG' -type f
wc -l
find /home/you -iname "*.c" -atime -30 -type -f
find /home/david -mtime -2 -name '*.c'
find -name "*.flac" -exec ffmpeg -i {} -acodec libmp3lame -ab 128k {}.mp3 \;
find . -name "*.flac" -exec ffmpeg -i {} -ab 160k -map_metadata 0 -id3v2_version 3 {}.mp3 \;
find -name "*.flac" -exec bash -c 'ffmpeg -i "{}" -y -acodec libmp3lame -ab 128k "${0/.flac}.mp3"' {} \;
find ./ -name '*.jpg' -type f
wc -l
find . -iname "*.mov" -exec /path/to/myffmpeg.sh {} \;
find . -iname "*.mov" -print0
xargs -0 -i sh -c 'ffmpeg -i {} -f flv `basename {}`'
find -iname *.SH
find "${current_directory}" -type f -iname "*.wma"
find /home -size +5000000b -name "error_log" -exec rm -rf {} \;
find /win/C -iname *JPG
find / -iname passwd
find / -name "*.conf"
find / -name "*.conf" 2>>/dev/null
find / -type f -name *.jpg  -exec cp {} . \;
find /PROD -type d -execdir sh -c 'for f in *.json; do /tmp/test.py "$f"; done' \;
find . -type f -name "*.bak" -exec rm -f {} \;
find . -type f -name “FILE-TO-FIND” -delete;
find . -type f -name "*.bak" -exec rm -i {} \;
find . -name "*bmp" -print0
xargs -0 -l -i basename "{}" ".bmp"
xargs -0 -l -i convert "{}.bmp" "{}.png"
find /home/pat -iname "*.conf"
find /etc -name "*.conf" -printf "%f %a, %t\n"
find / -name "*.conf"
find / -name "*.conf" 2>>/dev/null
find /etc/sysconfig -amin -30
find . -type f \( -name "*.conf" -or -name "*.txt" \) -print
find / -name core -exec rm -f {} \;
find /tmp -name core -type f -print
xargs /bin/rm -f
find -name "*.cpp"
find . -iname '*.cpp' -print
find . -type f -iname '*.cpp' -exec mv {} ./test/ \;
find . -type f -iname '*.cpp' -exec mv -t ./test/ {} \+
find . -name *.cpp -o -name *.h -o -name *.java
find -name '*.css'
find /var/named -type f -name *.db
find -type d
find -mindepth 3 -type d ! -path '*/p/*' -name c -print
find -mindepth 3 -type d -path '*/p/*' -prune -o -name c -print
find . -type d -delete
find . -maxdepth 1 -type d -print0
find . -maxdepth 1 -type d -print0
(cd /SomeWhere/Else; xargs -0 mkdir)
find . -type d -name "test*"
find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
find -type d ! -perm -111
find -type d
find . -type d -print
find . -type d -exec sh -c 'cd -P -- "{}"
pwd -P' \;
find -type d
ssh server-B 'xargs -I% mkdir -p "/path/to/dir/%"'
find -type d
sed -r '/^.$/{s:.:#!/bin/bash:};{s/^\./mkdir -p &/}'
find . -maxdepth 1 -type d
xargs -I X mkdir '/new/directory/X'
find -type d -empty
find . -regex './kt[0-9] '
find . -depth -type d -mtime 0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -exec mv -t /path/to/target-dir {} +
find . -type d -mtime -0 -print0
xargs -0 mv -t /path/to/target-dir
find . -type d -mtime 0 -exec mv {} /path/to/target-dir \;
find /media/New\ Volume/bhajans -maxdepth 1 -type d
xargs -0 mkdir -p
find / -type d -size +50k
find / -type d -name 'man*' -print
find / \( -type d -a -perm -777 \) -print
find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
find /raid -type d -name ".local_sd_customize" -print
find ~ -type d -exec mkdir junk {} \; 2> /dev/null
find /home -maxdepth 1 -type d
find /somePath -type d -name ‘someNamePrefix*’ -mtime +10 -print
xargs rm -rf ;
find . -type d -name “DIRNAME” -exec rm -rf {} \;
find ./ -maxdepth 1 -name "some-dir" -type d -print0
xargs -0r mv -t x/
find . -type d -name 'uploads'
find / -type d  -perm -1000  -exec ls -ld {} \; 2> /dev/null
find ./ -empty -type d -delete
find . -type d -empty
find . -depth -empty -type d
find / -empty
find . -maxdepth 1 -type d -empty
find . -type f -empty -delete
find /opt \( -name error_log -o -name 'access_log' -o -name 'ssl_engine_log' -o -name 'rewrite_log' -o  -name 'catalina.out' \) -size +300000k -a -size -5000000k
find ./ -daystart -mtime -3
find ./ -daystart -mtime -3
find ./ -daystart -mtime +3
find . -name '*.[ch]' -print0
xargs -r -0 grep -l thing
find . -name '*.[ch]'
xargs grep -l thing
find / -uid 1005 2>/dev/null
find /opt -cmin -120
find / -ctime -1
find / -mtime -1
find / -daystart -mtime +41 -mtime -408 \   -printf "%M %n %u %g %10s %TY-%Tm-%Td %Ta %TH:%TM:%TS %h/%f\n"
awk '($7=="Fri"){print}'
find . -name '*.coffee' -exec awk '/re/ {print;exit}' {} \;
find . -name \*.coffee -exec grep -m1 -i 're' {} \;
find /usr -name '*.foo' -print
find /volume1/uploads -name "*.mkv" -exec /tmp/rename.sh \{\} \;
find /dir \( -name node_modules -prune \) -o -name "*.sh" -exec grep --color -Hn "your text to find" {} 2>/dev/null \;
find /dir \( -name foo -prune \) -o \( -name bar -prune \) -o -name "*.sh" -print
find . -name '*.clj' -exec grep -r resources {} \;
find . -name *.clj
xargs grep -r resources
find -name "*.mkv"
find . -name "*rb" -print0
xargs -0 head -10000
find -name '*~' -print0
xargs -0 -I _ mv _ /tmp/
find . -name *.ini
find . \( -name '*.mp3' -o -name '*.jpg' \) -print
find /path/to/folders/ -name \*.emlx -print0 > filelist
find ./ -iname '*.jpg' -type f
wc -l
find ./ -type f -regex ".*\.[Jj][Pp][gG]$"
wc -l
find -name *.undo -exec stat -c%s {} \;
awk '{total += $1} END {print total}'
find . -name "*.undo" -ls
awk '{total += $7} END {print total}'
find . -name "*.undo" -ls
perl -lane '$t += $F[6]; END{print $t}'
find / \( -nogroup -o -noname \) -ls
find . -size 6M
find . -size +10M -size -20M
find . -size +2G
find . -size -10k
find . -name *.ini -exec sh -c "grep -q PROJECT_A {}
grep -q CONFIG_A {}
echo {}" \;
find . -name *.ini -exec grep -w PROJECT_A {} \; -print
grep ini
find . ( -name '*.bak' -o -name *.backup ) -type f -atime +30 -exec csh -c 'if ( -f $1:r ) rm $1' '{}' ;
find ./ -type f -regex ".*\.[JPGjpg]$"
wc -l
find . -mmin -60
find . -name "filename including space" -print0
xargs -0 -I '{}' sh -c 'ls -aldF {} >> log.txt; rm -rdf {}'
find $HOME -mtime -1
find <dir> -mtime +7
find /usr -newer /usr/FirstFile -print
find /usr ! -newer /FirstFile -print
find . -exec chmod 775 {} \;
find . -exec echo {} ;
find . -print -o -name SCCS -prune
find . -exec grep -i "pw0" {} \;
find -cnewer /etc/fstab
find -mmin -60 -exec ls -l {} \;
find . -name ".*\.i"
find . -name *.bar -maxdepth 2 -print
find . -name "*bash*"
find . -wholename '/lib*'
find . -size +1000M
find . -name '*.orig'  -exec echo {} \ ;
find . -atime +1 -type f -exec mv {} TMP \;
find . -newer file
find . -atime +6
find . -mtime 0
find . -atime +30 -exec ls \;
find . -inum 31246 -exec rm [] ';'
find . -size -40 -xdev -print
find . -mmin -720 -mmin +60 -type f -name "t*" -exec ls -l '{}' \;
find . -size 126M
find . -xdev -name "wagoneer*" -print
find . -print0
xargs -0 -l -i echo "{}";
find . -depth -print
cpio -ov > /dev/fd0
find . -exec echo -n '"{}" ' \;
find $PWD -exec echo -n '"{}" ' \;
tr '\n' ' '
find $PWD
sed 's/^/"/g'
sed 's/$/"/g'
tr '\n' '
find $PWD
sed -e 's/^/"/g' -e 's/$/"/g'
tr '\n' ' '
find .
sort
find .
grep -vf file.lst
find .
xargs perl -p -i -e ‘s/something/else/g’
find -type d > dir-list
find . -exec grep -i "vds admin" {} \;
find ./ -name "*.[ch]pp" -print > cscope.files
find . -newer document -print
find -name *bar
find . -name \? -daystart -mtime +0 -mtime -3
find -atime 0
find -daystart   -atime 0
find ./ -mtime 3
find ./ -mtime -3
find -mtime -7 -daystart
find ./ -mtime +3
find . -size +10M -size -50M -print
find . — size +1000k -print
find . -size +9M
find . -size 1234c
find . -newer /bin/sh
find . -readable
find . -size -9k
find . -writable
find . -user root -perm -4000 -print
find . -nouser -ls
find . -type d ! -perm -111
find . -type f ! -perm -444
find -E . -regex ".*ext1
.*ext2
.*ext3"
find . ( -name a.out -o -name *.o ) -print
find . -perm -4000 -print
find . -type f -atime 1
find . -amin -60
find . -cmin -60
find -newer timestamp-file -type f > list-of-files
find . -newer disk.log -print
find . -mtime +30 -a -mtime -7 -print0
find -mmin +15 -mmin -25
find . -mmin -60
find . -mindepth 1 -mmin -60
xargs -r ls -ld
find . -daystart -mtime -1 -ls
find . -type f -mmin 0
find . -perm /a=x
head
find . -executable
find . -perm /u=x,g=x,o=x
find . -mtime +90 -type f -exec rm -f {} \;
find . -perm /g+s
head
find . -regex '.*\(net\
comm\).*'
find . -name 'cache*' -depth -exec rm {} \;
find . -name \? -daystart -mtime +0 -mtime -3
find . — name "[a‑z][a‑z][0—9][0—9].txt" — print
find ~ -type f -name test-a -exec mv {} test-10 \;
find ~ -type f -name test-a -execdir mv {} test-10 \;
find $1 \( -name "*$2" -o -name ".*$2" \) -print
find / -path /proc -prune -o -nouser -o -nogroup
find / -name 'top?????*'
find / -atime 50
find / -amin -60
find / -cmin -60
head
find / -mtime +50 -mtime -100
head
find / -mtime 50
find / -name "*conf" -mtime 7
find / -name 'top???'
find / -name 'top*'
find / -mmin -10
find / -group staff -print
find / -user roger -print
find / -mtime -5 -print
find / -mtime -2 -print
find / -mtime -5 -print
find / -size +50M -size -100M
find / -size 15M
find / -type f -size +20000k
find / -group root
head
find / -user root
head
find / -user www -print
find / -mount -name 'win*'
find / -mtime -1
find / -size +3 -print
find / -group users -iname "Dateiname"
find / -user pat -iname "Dateiname"
find /    \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , ( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)
find / -atime -1
find / -newerct '1	minute ago' -print
find / -ctime -1
find / -mmin -10
find / -mtime -30 -print
find / -mmin -60
find / -mtime +100 -print
find / -perm /u=r
head
find / -perm -u+s
find / -perm 777 -iname "Dateiname"
find / -nogroup -print
find /mp3-collection -size +10000k ! -name "Metallica*"
find /u/bill -amin +2 -amin -6
find /usr/app/etl/01/OTH/log/tra -type f ! -name ".*" -mtime -10
egrep -vf /usr/app/etl/01/CLE/par/files_to_skip.par
find /myfiles -mtime 2
find /myfiles -atime +30
find ./machbook -exec chown 184 {} \;
find /home/calvin/ -mmin -45
find /home -size +10M -size -50M
find /home -size 10M
find /opt -atime 20
find /opt -mtime +30 -mtime -50
find /opt -mtime 20
find /path/to/dir -newermt “Feb 07”
find /usr/bin -type f -mtime -10
find /work -user olivier -print
find Música/*
egrep -Z \/\\.
xargs -0 echo
find ~/Music/ -name "Automatically Add*"
find $HOME -mtime -2 -mtime +1
find /home -user <usernmae> -print
find $HOME -mtime -2 -mtime +1
find $HOME -mtime +365
find ~ -size +2000000c -regex '.*[^gz]' -exec gzip '{}' ';'
find ~ -empty
find ~ -size -300b
find / -size 42
find ~ -iname '*.tex'
find $HOME -newer ~joeuser/lastbatch.txt
find $HOME -mtime +365
find $HOME -mtime -1
find $HOME -mmin -30
find $HOME -mtime -7
find ~ -type f -mtime 0
find $HOME -mtime +365
find `pwd` -group staff -exec find {} -type l -print ;
find / -mtime -1 -print
find /tmp -mtime +30 -print
find Symfony -name '*config*';
find Symfony -iname '*config*';
find -daystart -mtime 1
find  -mtime -1
find -mtime +0 -mtime -1
find -daystart -mtime -7
find -daystart -mtime +7
find . -ctime 1 -type f
find . -ctime 0 -type f
find -mtime 1
find -mtime 2
find . -type f -mtime 1
find . -type f -daystart -mtime 1
find . -mtime 7
find . -type f -daystart -mtime -1
find -mtime -1
find ./ -mtime -0.5
find -daystart -mitime -1
find . -type f -daystart -mtime -2
find . -type f -mtime -1
find . -mtime 4 -daystart -exec cp -a {} /home/devnet/fileshare\$ on\ X.X.X.X/RECOVER/ \;
find -mmin -60
find . -mtime -7 -print
find . -type f -daystart -mtime $date_dif -exec copy_it.sh $verbose -s {} -t $to_dir \;
find /etc -newer /var/log/backup.timestamp -print
find . -type f -mtime 0
find /tmp/test/* -mtime +0
find . -type f -daystart -mtime 0
find . -mtime +7
find -mtime +2
find /tmp/test/* -mtime +1
find /etc -name *fstab*
find . -daystart -ctime 1 -type f
find . -daystart -ctime 0 -type f
find /usr/local -mtime 1
find . -type f -empty
find . -name '*.deb' -exec basename {} \;
find . -name '*.deb'
xargs -n1 basename
find -anewer /etc/hosts
find -cnewer /etc/fstab
find . -mmin -15 \( ! -regex ".*/\..*" \)
find . -type f -mtime +356 -printf '%s\n'
awk '{a+=$1;} END {printf "%.1f GB\n", a/2**30;}'
find /tmp -type f -empty
find . -perm -20 -exec chmod g-w {} ;
find /mp3-collection -name 'Metallica*' -and -size +10000k
find . -name *.xml -print0
xargs -n 1 -0 invalid_command
find / -size +50M -iname "Dateiname"
find -iname september
find . -iname test
find ~ -atime 100
find / -name findme.txt -type f -print
find / -name .ssh* -print
tee -a ssh-stuff
find . -name "foo.txt"
awk '{ print "mv "$0" ~/bar/"
"sh" }'
find usr/include -name '*.h' -mtime -399
wc
find /usr/include -type f -mtime -400 -name "*.h"
find /tmp -type f -name ".*"
find . -name '*.html' -print0
xargs -0 perl -pi -e 's/oldstring/newstring/g'
perl -p -i -e 's/oldstring/newstring/g' `find ./ -name *.html`
find -type f -name '*.htm' -printf '%P\0%f\0'
xargs -0 -n2 sh -c 'fil="${2/\.htm/}"; sed -i -e "s;<title>.*</title>;<title>$fil</title>;" $1' replace
find . -name "*.html"
find ./ -type f -name '*.html'
xargs sed -i '1,/sblmtitle/d'
find -name '*.html' -print0
xargs -0 rename 's/\.html$/.var/'
find ./ -type f -name '*.html'
xargs sed -i '$s/$/<\/description>/'
find .
grep html$
xargs grep <string-to-find>
find . -mtime 7 -name "*.html" -print
find . -mtime 7 -name "*.html" -print
find . -mtime -7 -name "*.html" -print
find . -mtime +7 -name "*.html" -print
find . -mtime 1 -name "*.html" -print
find . -mtime -7 -name "*.html"
find . -type f -name "*.htm*" -o -name "*.js*" -o -name "*.txt"
find . -name foo.txt 1> tmpfile
mv `cat tmpfile` path/to/some/dir
rm tmpfile
find . -name “*.jar” -print -exec jar tvf {} \;
grep -E “jar$
.class”
cat `find src/js -type f -name "*.js" -print0
xargs -0 stat -f "%z  %N"
sort -n
sed -e "s
[0-9]*\ \
"` > public/js/myCleverScript.js
find ./js/ -type f -name "*.js" -exec java -jar compiler.jar --compilation_level SIMPLE_OPTIMIZATIONS --js '{}' --js_output_file '{}'.compiled \;
find src/js -type f -name "*.js" > list.txt
find . -regex '.+\.js'
find /home -name '*.jpg
find . -type f
grep -i "\.jpg$"
sort
find . -name "*.JPG" -exec convert {} -resize 50% {} \;
find /ftp/dir/ -size +500k -iname "*.jpg"
find / -name *.jpg 2>/dev/null
find */201111/*20111130* -name "*.jpg" -print0
sort -t '_' -nk2
xargs -0 cat
ffmpeg -f image2pipe -framerate 30 -vcodec mjpeg -i - -vcodec libx264 -profile:v baseline -level 3.0 -movflags +faststart -crf 19 -pix_fmt yuv420p -r 30 "output.mp4"
find /path/to/files -iname '*.jpg' -exec mogrify -format pdf {} +
find /path/to/files -iname '*.jpg' -newer timestamp -exec mogrify -format pdf {} +; touch timestamp
find "somedir" -type l -print0
find . -type l -print
xargs ls -ld
awk '{print $10}'
find -L /target -type l
find /target -type l -xtype l
find /students -type l -print 2> /dev/null
find / -type l -print
perl -nle '-e
print';
find . -type l -daystart -mtime $date_dif -exec copy_it.sh $verbose -s {} -t $to_dir \;
find / -name "*.log"
find / -xdev -name "*.log"
find . -name "*.mp3" -exec mv {} "/Users/sir/Music//iTunes/iTunes Media/Automatically Add to iTunes.localized/" \;
find / -type f -name *.mp3 -size +10M -exec rm {} \;
find / -iname "*.mp3" -print
find ~ -type f -mtime 0 -iname '*.mp3'
find . -name ‘*.mp4’ >> /tmp/$$
find . \! -name "*.Z" -exec compress -f {} \;
find $HOME -type f -atime +30 -size 100k
find . -type f -size +10000 -exec ls -al {} \;
find /etc/sysconfig -amin -30 -type f
find . -type f -exec printf '%.0sbla\n' {} +
find . -type f -print0
grep -Fxvz -f <(cd "/some/dir" && find . -type f)
xargs -0 echo rm
find . -type f -print0
xargs -0 grep pattern
find . -type f -maxdepth 1 ! -name '.*' -exec printf '%.0s.\n' {} +
wc -l
find -type f
find . -type f -exec grep -il mail
find . -mtime -1 -type f -print
find . type f -print
fgrep -f file_list.txt
find . -type f -atime -1 -exec ls -l {} \;
find . -type f -mtime -1 -exec ls -l {} \;
find . -type f -mtime -1 -daystart -exec ls -l {} \;
find . -type f -mtime 2 -mtime -3 -daystart -exec ls -l {} \;
find pathfolder -maxdepth 1 -type f -not -path '*/\.*'
wc -l
find pathfolder -mindepth 2 -maxdepth 2 -type f -not -path '*/\.*'
wc -l
find main-directory -type f
find -name *monfichier*.ogg
find -name '*.patch' -print0
xargs -0 -I {} cp {} patches/
find "/path/to/pdfs/" -type f -name "$1*.pdf" -exec stat -f "%10Dm %SN" {}\;
sort -k1,1n -k2,2
find . -iname "*.pdf" -exec tar --append --file=somefile.tar {} \;
find . -type f -name '*.pdf'
sed 's#\(.*\)/.*#\1#'
sort -u
find /var/www/ -type f -name "*.pl" -print
find /var/www/ -type f -iname "*.pl" -print
find . -type f -name "*.pl"
find . -name '*.pl'
xargs grep -L '^use strict'
find . -type f -name "*.pl" -print0
find -name '*.php'
find -name '*.php' -exec grep -li "fincken" {} +
xargs grep -l "TODO"
find -name '*.php' -exec grep -in "fincken" {} +
grep TODO
cut -d: -f1
uniq
find . -regex '.+\.php'
find . -name \*.php
find . -name “*.[php
PHP]” -print
find . -name \*.php -type f
find . -regex '.+\.\(php
js\)'
find . -name '*.png'
perl match4th.pl '/tmp/search.txt'
xargs cp -t /tmp/results
find . -name '*.png'
grep -f <(sed 's?.*?/[0-9]_[0-9]_[0-9]_&_?' search.txt)
find . -name '*.png'
grep -f <(sed s/^/[0-9]_[0-9]_[0-9]_/ search.txt)
find . -name '*.png'
grep -f <(sed s?^?/[0-9]_[0-9]_[0-9]_? search.txt)
find . -name '*.png'
grep -f <(sed s?^?/[0-9]_[0-9]_[0-9]_? search.txt)
xargs -i{} cp {} /path/to/dir
find . -name '*.png'
grep -f search.txt
find . -name "image*.png"
find . -maxdepth 1 -type f -name 'image*png' `
find . -name "*.py" -type f > output.txt
find /home/pankaj -maxdepth 1 -cmin -5 -type f
find . -type f -name "*.php"
files = "`find "'"$dirs"'" -type f
& grep -v '^find: '`"
find . -type f -ctime -3
tail -n 5
find -type f ! -perm -444
find ./ -type f -name '*.c*' -print0
xargs -0 rm -rf &>> log_del.txt
find ./ -type f -name '*.r*' -print0
xargs -0 rm -rf &> log_del.txt
find . -type f -name '*some text*'
find $DIR -name "*.mod" -type f -exec bash -c 'remodup "$1"' - {} \;
find $DIR -name "*.mod" -type f -exec remodup {} \;
files2 = "`find "'"$dirs"'" -type f`"
find /some/dir -type d -exec find {} -type f -delete \;
find /path -type f -delete
find /path -type f -exec rm '{}' \;
find /path -type f -print0
xargs -0 rm
find . -type f -atime +30 -print
find * -type f -print -o -type d -prune
find . -type f \! -name "*.Z" \! -name ".comment" -print
tee -a /tmp/list
find -type f
find . -maxdepth 1 -type f
find main-directory -type f -exec mv -v '{}' '{}'.html \;
find . -type f
sed -e 's#.*\(\.[a-zA-Z]*\)$#\1#'
sort
uniq
find . -group flossblog -type f
find . -user sedlav -type f
find . -uid +500 -uid -1000 -type f
ionice -c 3 find  . -type f -amin -1440 -mmin +1441 -not -path custom/ -print0
find /myfiles -type f -perm -647
find /travelphotos -type f -size +200k -not -iname "*2015*"
find . -type f \( -name "*.sh" -o -name "*.pl" \)
find . -name "*~" -delete
find . -name "*~" -exec rm {} \;
find /etc -type l -print
find . -type l -exec sh -c "file -b {}
grep -q ^broken" \; -print
find ./ -type l -exec file {} \;
grep broken
find -L . -type l
find -L
find . -xtype l
find . -name somedir -prune , -name bin -prune -o -name "*.txt" -print
find . \( -name somedir -prune \) , \( -name bin -prune \) -o \( -name "*.txt" -print \)
find . -name "*.txt"
parallel 'ext="{/}" ; mv -- {} foo/{/.}.bar.${ext##*.}'
find . -name "*.txt"
xargs -I{} sh -c 'base=$(basename $1) ; name=${base%.*} ; ext=${base##*.} ; mv "$1" "foo/${name}.bar.${ext}"' -- {}
find ./ -name \*.txt
perl -p -e 's/^(.*\/(.*)\.txt)$/mv $1 .\/foo\/$2.bar.txt/'
bash
find . -name "*.txt"
xargs rm -rf
find . -name "*.txt"
xargs -I '{}' mv '{}' /foo/'{}'.bar
find . -name "*.txt" -type f -daystart -mtime -4 -mtime +0
xargs -i cp {} /home/ozuma/tmp
find . -name "*.txt" -print
find . -type f -name '*.txt' -print
find . — name "*.txt" — print
find . -name "*.txt" -print
less
find . -name "*.txt" -printf "%M %f \t %s bytes \t%y\n"
find -maxdepth 1 -iname "*.txt"
find . -path "./sk" -prune -o -name "*.txt" -print
find . -name "somefiles-*-.txt" -type f
find . -name "somefiles-*-.txt" -type f -exec sed -i 'iText that gets prepended (dont remove the i)' -- '{}' \;
find / -user root -iname "*.txt"
head
find / -mount -name "*.txt"
find / -xdev -name "*.txt"
find /home/calvin/ -maxdepth 2  -name “*.txt”
find /home/calvin/ -mindepth 2  -name “*.txt”
find "/tmp/1/" -iname "*.txt"
sed 's/[0-9A-Za-z]*\.txt//g
find ~/ -name '*.txt'
find ~ -name "*.txt" — print
find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
find /tmp -type f -name ‘*.txt*’
sed -e ‘s/.*/\”&\”/’
xargs -n 1 grep -l hello
sed -e ‘s/.*/\”&\”/’
find . -type f -name "*.txt" ! -path "./Movies/*" ! -path "./Downloads/*" ! -path "./Music/*"
find . -name "*.txt" -type f -daystart -mtime +0 -mtime -2
find . -type f \( -iname "*.txt" ! -iname ".*" \)
find ./ -name *.undo
xargs wc
find /home/<user> -type f -exec file {} +
grep -E "MPEG v4
EBML
Microsoft ASF
Macromedia Flash Video
WebM
Apple QuickTime movie
AVI"
find ~ -type f -exec file -i {} +
grep video
find /tmp /var/tmp ~ -type f -size +10M -mtime +60 -ctime -100 -exec file -N -i -- {} +
sed -n 's!: video/[^:]*$!!p'
find . -name '*.wav' -maxdepth 1
find /var/www/ -name wp-config.php
find /var/www/ -name wp-config.php -maxdepth 2
find /dump -type f -name '*.xml' -exec java -jar ProcessFile.jar {} \;
find /dump -type f -name '*.xml'
parallel -j8 java -jar ProcessFile.jar {}
find . -name "*.xml" -exec grep -HFf /tmp/a {} \;
find . -name \*.xml
grep -v /workspace/
tr '\n' '\0'
xargs -0 tar -cf xml.tar
find . -name "*.xml" -exec grep -HFf <(find . -name "*.txt" -printf "%f\n") {} \;
find . -type f -name '*.zip'
find . -type f -name '*.zip' -print0
xargs -0 tar -xzf
find -name "*.js" -not -path "./directory/*"
find . -path ./misc -prune -o -name '*.txt' -print
find . -depth -empty -type d -delete
find / -size +100M -exec rm -rf {} \;
find . -iname "Articles.jpg"
find . -regex './[0-9].*' -print
find . -iname .svn -exec bash -c 'ls -l "{}"
wc -l' \;
find . -iname .svn -exec bash -c 'rm -rf {}' \;
find . -name 'build.xml' -exec ant -f {} clean-all \;
find -iname example.com
grep -v beta
find ./ -path ./beta/* -prune -o -iname example.com -print
find . -mtime -7 -type d
find . -mtime -7 -type d
find /usr/spool/uucp -type d -print
find $LOGDIR -type d -mtime +0 -exec compress -r {} \;
find $LOGDIR -type d -mtime +5 -exec rm -f {} \;
find . -path './bar*' -print
find . -iname foo -type d
find /users/al -name Cookbook -type d
find . -name "*.txt"
find . -name foo.txt
find / -name foo.txt
find . -iname foo
find . -name "foo.*"
find / -atime -1
find . -mtime -1 -type f
find . -name '*.jpg' -print ./bar/foo.jpg
find . -name "*.bam"
find $HOME \( -name \*txt -o -name \*html \) -print0
xargs -0 grep -li vpn
find /dir/path/look/up -name "dir-name-here"
find /dir/path/look/up -name "dir-name-here" -print
find /tmp -name core -type f -print
xargs /bin/rm -f
find /tmp -name core -type f -print0
xargs -0 /bin/rm -f
find /u/bill -amin +2 -amin -6
find /usr -newermt "Feb 1"
find … -exec sh -c 'trap "echo \$?" EXIT; invalid_command "$0"' {} \;
find . -name game
find . -name "*.[ch]" -exec grep --color -aHn "e" {} \;
find . -name "S1A*1S*SAFE"
awk -F/ '{print $NF"/"$0}'
sort -t_ -k 5,5
cut -d/ -f 2-
find . -name "S1A*1S*SAFE"
rev
awk -F '/' '{print $1}'
rev
sort -t _ -k 5
find ~ -atime 100
find ~ -name game
find ~/ -daystart -type f -mtime 1
find / -name game
find /usr/src -name '*.c' -size +100k -print
find . -cmin -60
find -amin -60
find . -mmin -60
find -iname "filename"
find . -name '*.[ch]'
xargs grep -l thing
find . -name '*.[ch]' -print0
xargs -r -0 grep -l thing
find ~/ -daystart -type f -mtime 1
find $HOME/. -name *.txt -ok rm {} \;
find . \( -name "foo" -o -name "bar" \)
find . -name "* *" -exec rm -f {} \;
find . -name '*.txt' -print -o -name '*.html'
find . -type f ! -perm 777
head
find /tmp/foo -path /tmp/foo/bar -print
find /tmp/foo -path /tmp/foo/bar -print
find .  -path '*/*config'
find .  -path '*f'
find . -type f -perm 0777 -print
find . -mtime -7
find . -mtime 1
find . -name '*.h' -execdir diff -u '{}' /tmp/master ';'
find /etc -name '*.conf'
find . -iname foo
find . -iname foo -type d
find . -iname foo -type f
find . -name "photo*.jpg"
find . -type f -exec grep -li '/bin/ksh' {} \;
find . -type f -print
xargs grep -li 'bin/ksh'
find /var -name lighttpd
find . -print
grep sql
xargs grep -i dba_2pc_pending
find ./ -regex "cmn-.*[\x4e00-\x9fa5]*\.xml"
find / -name expect 2>/dev/null
find /. -name 'toBeSearched.file' 2>&1
grep -v 'Permission denied'
find /. -name 'toBeSearched.file' 2>/dev/null
find /etc -name "httpd.conf"
find $HOME -name \*txt -o -name \*html -print0
sudo find / -name mysql -print
find / -perm 0551
find / -type d -name 'httpdocs'
find / -type d -name httpdocs 2> /dev/null
find . -exec ls -ld {} \;
echo 'string to be hashed'
md5
md5 -s 'string to be hashed'
yosemite$ echo -n 401
md5
printf 'password'
md5
printf '%s' "$pass"
md5
echo -n ''
md5
curl -s www.google.com
md5
echo -n hi
md5
md5sum file*.txt
find . -mmin -15 \( ! -regex ".*/\..*" \)
find  / -type d -iname "apt"
find  / -type d -iname "apt" -ls
find  / -type d -iname "project.images" -ls
groups user
find / -name foo.txt -type f
find / -name foo.txt -type f -print
find . -mtime -7 -type f
find ~/mail -type f
xargs grep "Linux"
find -maxdepth 1 -type f -printf '%f\000'
find -type f -exec md5sum {} +
find . -type f -wholename \*.mbox
sed 's/\(.*\)\.mbox/mv "\1.mbox" "\1"/'
sh
find . -wholename \*.mbox
awk '{new=$0; gsub("\.mbox$", "", new) ; system("mv \"" $0 "\" \"" new "\"") }'
find . -type f -wholename \*.mbox -print0
\     while read I ; do         mv $I $(echo $I
sed 's/\.mbox//') ;     done ;
find . -type f -wholename \*.mbox -print0
parallel -0 mv {} {.}
find . -type f -wholename \*.mbox
parallel mv {} {.}
find . -mtime -7 -type f
find . -type f  -name "your_pattern" -exec du -ch {} + 2>/dev/null
grep total$.
find / -type f -name "your_pattern" 2>/dev/null
find . -iname foo -type f
find -type f
find / \( -perm -4000 -fprintf /root/suid.txt '%#m %u %p\n' \) , \  \( -size +100M -fprintf /root/big.txt '%-10s %p\n' \)
find ./n* -name "*.tcl"
find . -lname '*sysdep.c'
find -iname "MyCProgram.c"
find -iname "MyCProgram.c" -exec md5sum {} \;
find . -type f -exec du -Sh {} +
sort -rh
head -n 15
find . -type f
xargs
wc -c
find /usr -type f
wc -l
find . -maxdepth 1 -name \*.txt -print0
grep -cz .
find folder1/ -depth -type f -printf "%d\t%p\n"
find -iname "MyCProgram.c"
find -iname "Dateiname"
find / -iname "Dateiname"
find / -name filename.txt -print
find /usr -name filename.txt -print
find / -name fluidpoint 2> /dev/null
OUTPUT=`find . -name foo.txt`
find / -type f -name httpd.log
find /home/web-server/ -type f -name httpd.log
find /home/web-server/ -type f -iname httpd.log
find /home/user/myusername/ -name myfile.txt -print
find / -name arrow.jpg
find . -inum $inum -exec rm {} \;
find -print
grep esxcfg-firewall
find / -name file
find teste1 teste2 -type f -exec md5 -r {} \;
sort
find . -type f -printf '%TY-%Tm-%Td %TT   %p\n'
sort
find -type f -printf '%T+ %p\n'
sort
head -n 1
find . -type f -print0
xargs -0 ls -ltr
head -n 1
find -type f -printf "%T+ %p\0"
sort -z
grep -zom 1 ".*"
cat
find ! -type d -printf "%T@ %p\n"
sort -n
head -n1
find . -name foo.mp4
sed 's
/[^/]*$
'
find ./ -name "foo.mp4" -printf "%h\n"
find . ! -path "*/test/*" -type f -name "*.js" ! -name "*-min-*" ! -name "*console*"
find /root/ -name myfile -type f
find /home -type f -exec du -s {} \;
sort -r -k1,1n
head
find . -type f -exec ls -al {} \;
sort -nr -k5
head -n 25
find /home -type f -print0
xargs -0 file
find . -type f -exec file {} \;
find . -type f
xargs file
find . -type f -exec file {} \+;
find . -type f \( -iname ".*" ! -iname ".htaccess" \)
find ~ -type f -mtime 0 -ls
find . -type d -name CVS -exec rm -r {} \;
find . -type f -newermt "2013-06-01" \! -newermt "2013-06-20"
ln -f $GIT_DIR/../apresentacao/apresentacao.pdf $GIT_DIR/../capa/apresentacao.pdf
find $HOME -name core -exec rm -f {} \;
find 'Test Folder' -type d -print0
xargs -0 rm -rf
find .
grep -v xml
xargs rm -rf {}
find . -mtime -3 -exec rm -rf {} \;
find /tmp/* -atime +10 -exec rm -f {} \;
find /home -type f -name test.txt -exec rm -f {} \
find . -type f -exec rm -fv {} \;
find /tmp -size 0 -atime +10 -exec rm -f {} \;
find . -name "*.c"
xargs rm -rf
find . -name "*.c" -print0
xargs -0 rm -rf
find /var/www -type d -mtime 0 -name logs -exec sudo rm -fr {} \;
find /tmp -type f -name sess* -exec rm -f {} \;
find .  -name "*.txt" -type f -daystart -mtime +89
xargs rm -f
ln -fs /etc/configuration/file.conf /etc/file.conf
ln -sfvn source target
ln -sfv /usr/local/opt/mongodb/*.plist ~/Library/LaunchAgents
sudo chown -Rf www-data *
ln -sf new_destination linkname
find . -type f -not -name "*.html"
jobs -x echo %1
jobs -l
grep 'test.sh &'
grep -v grep
awk '{print $2}'
find . -mtime -7 -print0
xargs -0 tar -cjf /foo/archive.tar.bz2
find . -mtime -7 -print0
xargs -0 tar -rf /foo/archive.tar
find . -mtime -1
xargs tar --no-recursion -czf myfile.tgz
find . -mtime -1.5
xargs tar --no-recursion -czf myfile.tgz
find . -mtime 30 -print
find . -mtime -30 -print
tar --help
grep "lbzip2\
plzip\
pigz"
md5=`md5sum ${my_iso_file}
awk '{ print $1 }'`
cat file.txt
rev
cut -d ',' -f 2
rev
find . -atime +30 -exec ls \;
wc -l
su git
sudo su - jenkins
jobs -l
fgrep $!
perl -ne 'print "$1\n" if /\[(\d+)\]/'
sudo su
sudo su -
sudo su
date +%Y-%m-%d
date +%Y-%m-%d:%H:%M:%S
head -5 tst.txt
tail -1
cut -c 5-8
tac a
grep -m1 -oP '(?<=tag>).*(?=</tag>)'
tac your.log
grep stuff
find / -type f -size -10k 2>/dev/null -print0
xargs -0 egrep '\bsomeknowncontent\b'
bind '"e":self-insert'
find /dump -type f -name '*.xml'
sed -e 's/\.xml$/.out/'
xargs make -j8
find /path/to/dir ! -perm 0644 -exec chmod 0644 {} \;
find /path/to/dir/ -type f ! -perm 0644 -print0
xargs -0 chmod 644
jobs -p
tail -n [number of jobs]
xargs kill
jobs -p
xargs kill -9
jobs -p
xargs kill
kill -INT $(jobs -p)
kill $(jobs -p)
kill `jobs -lp`
ps aux
grep 'python csp_build.py'
head -1
cut -d " " -f 2
xargs kill
cat -n text.txt
join -o2.2 lines.txt -
find /home/user/Desktop -name '*.bmp' -o -name '*.txt'
find /home/user/Desktop -name '*.pdf'
find /home/user/Desktop -name '*.pdf' -o -name '*.txt' -o -name '*.bmp'
jobs -lp
find src -name "*.java"
find ~/ -name '*.txt'
find . -type f \( -name "*.c" -o -name "*.sh" \)
find . -name "*.css"
find . -type f -name "*.css"
jobs -l
alias
alias
grep xlogs
find .
find /home/bozo/projects -mtime 1
find /home/bozo/projects -mtime -1
find .
find "$dir" -not -path "$dir/prune_me*" -exec bash -c 'echo "$0"' {} \;
find "$dir" -not \( -path "$dir/prune_me" -prune \) -exec bash -c 'echo "$0"' {} \;
find "$dir" -path "$dir/prune_me" -prune -o -exec bash -c 'echo "$0"'  {} \;
find ".performance_test" -not -path ".performance_test/prune_me*" -exec bash -c 'echo "$0"' {} \;
find ".performance_test" -not \( -path ".performance_test/prune_me" -prune \) -exec bash -c 'echo "$0"' {} \;
find ".performance_test" -path ".performance_test/prune_me" -prune -o -exec bash -c 'echo "$0"' {} \;
find -name cookies.txt
find . 2>&1
grep -v 'permission denied' > files_and_folders
find . > files_and_folders
find . -type d ! -perm -g+r,u+r,o+r -prune -o -print > files_and_folders
find . 2>/dev/null >files_and_folders
find . 2>/dev/null > files_and_folders
find . 2>/dev/null > some_file
find . -type f -name "*.java" -exec grep -l StringBuffer {} \;
find . -type d -name proc -prune -o -name '*.js'
find . -name '*.js' -and -not -path directory
find . -name '*.js'
grep -v excludeddir
find . -name '*.js'
grep -v excludeddir
grep -v excludedir2
grep -v excludedir3
find /path/to/search                    \   -type d                               \     \( -path /path/to/search/exclude_me \        -o                               \        -name exclude_me_too_anywhere    \      \)                                 \     -prune                              \   -o                                    \   -type f -name '*\.js' -print
find / -type l -print
perl -nle '-e
print';
alias
awk '/^alias /{print substr($2,1,index($2,"=")-1)}'
jobs -l
find $directory -type f -name '*'
find ! -path "dir1" ! -path "dir2" -type f
find dir -not \( -path "dir1" -o -path "dir2" -prune \) -type f
find dir -not \( -path "dir1" -prune \) -not \( -path "dir2" -prune \) -type f
jobs
find  /var -path */l??/samba*
strace -o /tmp/output.txt ln -s -f .bash_aliases test
find . -ls -name "*.ksh"
find httpdocs -type d
find -maxdepth 1 -type d
find . -empty
find / -path /proc -prune -o -perm -2 ! -type l -ls
find `gen_root_dirs.sh` -type f -size 0 -ls
find ./ -name "*.sqlite" -ls
find . -empty -exec ls {} \;
find . -newer /bin/sh
find "somedir" -type l -print0
xargs -r0 file
grep "broken symbolic"
sed -e 's/^\
: *broken symbolic.*$/"/g'
find /proc/$1/exe -printf '%l\n'
find / -type d -gid  100
find . -name '*.txt' -o -name '*.html'
find /u/bill -amin +2 -amin -6
find /usr -newermt "Feb 1"
find /usr -newer /tmp/stamp$$
find "$directory" -perm "$permissions"
find . ! -perm -g+r,u+r,o+r -prune
find . ! -readable -prune
find . -name '...' 2>/dev/null
find / -mount \! -readable -prune  -o  -path /dev -prune  -o  -name '*.jbd' -ls
find / \! -readable -prune -o -name '*.jbd' -ls
jobs -l
bind -l
grep /
find . -type f \( -name "*.c" -o -name "*.sh" \)
find . -type f \( -name "*cache" -o -name "*xml" -o -name "*html" \)
find . -type f -not -name "*.html"
find . -type f -wholename \*.mbox
find . -type f
find . -type f -wholename \*.mbox -print0
find $HOME -type f -atime +30 -size 100k
find $directory -type l
find $directory -type l -printf "%p$IFS"
find . -type d -exec ls -ld {} \;
find . \( -name '*.mp3' -o -name '*.jpg' \) -name 'foo*' -print
find $HOME/. -name *.txt -exec head -n 1 -v {} \; > report.txt
find ~/ -daystart -type f -mtime 1
find . \( -name '*.txt'  -mtime +5 -o -name '*.html' \) -print0
find . \( -size 100 -o -size -100 \)  -name '*.html' \    -exec  ls -l {} \;  2> /dev/null
find . \( -name '*.txt' -o -name '*.html' \) -mtime +5 -print0
find /home -type f -size +100M -delete
find /home -type f -size +100M -print0
xargs -0 rm
su - YOUR_USER
su - postgres
sudo su -l oracle
su -l
su - username
find . -perm 777 -type f -exec ls -l {} \;
find . -perm 040 -type f -exec ls -l {} \;
find . -perm -g=r -type f -exec ls -l {} \;
find . -type f -name "Tes*" -exec ls -l {} \;
find . -name "*.sh" -exec ls -ld {} \;
find /usr/pcapps/ -mount -type f -size +1000000c
perl -lpe ' s{ }{\\ }g '
xargs ls -l
sort +4nr
head -200
find /home -type f -size +10485760c -print
find . -type f -name '*.*' -print0
while IFS= read -r -d '' file; do     printf '%s\n' "$file" done
su - jetty cp file1 file2
mkdir /etc/cron.15sec
find /path/to/dir -type d -exec chmod 755 {} \;
find . -name "*" -maxdepth 1 -exec mv -t /home/foo2/bulk2 {} +
find . -name "*" -maxdepth 1 -exec sh -c 'mv "$@" "$0"' /home/foo2/bulk2 {} +
find . -mindepth 1 -exec mv -t /tmp {} +
find . -mindepth 1 -print0
xargs -0 -I, mv , /tmp
find . -follow -iname '*.htm' -print0
xargs -i -0 mv '{}' ~/webhome
find . -atime +1 -type f -exec mv {} TMP \; # mv files older then 1 day to dir TMP
md5 -q file
fg `jobs
iselect -a
grep -o [0-9]*`
find . -type f -iname "*.png" -print0
xargs -I {} -0 optipng -o5 -quiet -keep -preserve -log optipng.log "{}"
find  / -type d -iname "apt" -ls
curl "url"
tac
tac
grep -qs foo
jobs -sl
awk '{print $2}'
bind -P
grep --fixed-strings ' can be found on '
perl -pe 's/((?<!\\)(?:\\\\)*)\\C/\1Ctrl/g;s/((?<!\\)(?:\\\\)*)\\e/\1Esc,/g'
find . -type f -exec grep -il 'foo' {} \;
find .
find . -print
find . -wholename './src/emacs' -prune -o -print
find / \! -name "*.c" -print
find / -name xyzzy -print0 > list
tac infile
sed '/string match/,$d'
tac
bind -P
find . \! -name '[A-Z] *' -exec lpr { }\;
du -B1 --apparent-size /tmp/foo.txt
bind -p
grep -i '"[pE]"'
nice -10 `alias list
sed "s/^\(alias \)\?[^=]\+='//; s/'$//;"`
echo $(( ( $(date -ud '2003-08-02 17:24:33' +'%s') - $(date -ud '2003-04-21 22:55:02' +'%s') )/60/60/24 )) days
du -sh *
echo $(pwd)/$filename
tac INPUTFILE
sed '/^Statistics
/q'
tac
alias -p
cut -d= -f1
cut -d' ' -f2
n_jobs=$( jobs -p
awk '{print NR}' )
n_jobs=`expr $(jobs
wc -l)`
bind -P
grep '\\e\\C-k'
tac a.txt
awk 'NF{print $NF; exit}'
tail -n "+$(grep -n 'TERMINATE' file
head -n 1
cut -d ":" -f 1)" file
find /usr/local -type f -perm /a=x
xargs file
grep 'not stripped'
cut -d: -f1
du -a .
sort -nr
head
su -l kenneth -c 'echo $PROJ_PATH'
tac
sed -n '/PATTERN/,+19{h;d};x;/^$/!{p;s/.*//};x'
tac
echo $filename
egrep -o '[[:digit:]]{5}'
head -n1
echo $(cd $(dirname "$1")
pwd -P)/$(basename "$1")
find `pwd` -maxdepth 1
head -n1 $bigfile
echo $(cd $(dirname "$1")
pwd -P)/$(basename "$1")
tac file.log
awk '{ if ($1 >= 423) print; else exit; }'
tac
tac $FILE
grep -m 1 '.'
tac FILE
egrep -m 1 .
tac file
sed -n '0,/<tag>\(.*\)<\/tag>/s//\1/p'
mvn help:evaluate -Dexpression=project.version
tail -8
head -1
git status
head -1
cut -d ' ' -f 3
find /usr/src -name '*.c' -size +100k -print
history
awk '{print $2}'
awk 'BEGIN {FS="
"}{print $1}'
sort
uniq -c
sort -nr
head
ps aux
awk '{print $2, $4, $11}'
sort -k2rn
head -n 10
find . -prune
history -n
bind '"\eY": "\e2\e."'
SRC_DIR=$(cd ..; pwd)
chown -R antoniod:antoniod /opt/antoniod/
sudo chown -R ec2-user:apache /vol/html
chown nginx:nginx /your/directory/to/fuel/ -R
chown -R user:www-data yourprojectfoldername
chown -R root:root /var/lib/jenkins
chown "dev_user"."dev_user" -R ~/.ssh/
sudo chown -R $(whoami) $(npm config get prefix)/{lib/node_modules,bin,share}
sudo chown -R xxx /Users/xxx/Library/Developer/Xcode/Templates
sudo chown -R $USER ~/tmp
sudo chown -R $(whoami) /usr/lib/node_modules/
sudo chown -R `whoami` /usr/local
sudo chown -R `whoami` /usr/local/lib
sudo chown -R $USER /usr/local/lib/node_modules
chown -R nobody upload_directory
chown ftpuser testproject/ -R
sudo chown -R $(whoami) ~/.npm
sudo chown -R test /home/test
chown -R owner:owner public_html
find . -type l
while read f; do /bin/cp -rf --remove-destination -f $(find . -name $(readlink "${f}")) "${f}";done;
find -type f -name \*.txt -exec install -D {} /dest/path/{} \;
find /data/bin/test -type d -mtime +10 -name "[0-9]*" -exec rm -rf {} \;
find /data/bin/test -type d -mtime +10 -name '[0-9]*' -print
xargs rm -rf ;
find . -type f -newermt "$(date '+%Y-%m-%d %H:%M:%S' -d @1494500000)"
find . -type f -regex ".*\.\(py\
py\.server\)"
find . \( -name "*.py" -o -name "*.py.server" \)
screen /bin/bash -c 'java Foo > foo.txt'
find .  -name '*.txt' -exec rsync -R {} path/to/dext \;
find . -name "*.pdf" -print
grep -v "^\./pdfs/"
xargs -J X mv X ./pdfs/
find . -type f -name "Foo*" -exec rm {} \;
find ~/ -name 'core*' -exec rm {} \;
find / -name "*.core" -print -exec rm {} \;
find / -name "*.core"
xargs rm
find /tmp -type f -mtime +30 -exec rm -f {} \;
find . -type d -name CVS -exec rm -r {} \;
find -name "*.txt"
xargs rm
find -name "*.txt" -print0
xargs -0 rm
find / -name "*.core" -print -exec rm {} \;
find / -name "*.core"
xargs rm
find . -name core -ctime +4 -exec /bin/rm -f {} \;
find . -name .DS_Store -exec rm {} \;
find /usr -name core -atime +7 -exec rm "{}" \;
/bin/find -name "core" — exec rm {} \;
find /home -name core -exec rm {} \;
find /tmp -name core -type f -print0
xargs -0 /bin/rm -i
find . -name ".DS_Store" -exec rm {} \;
find ./ -ctime +30 -type f -exec rm -f {} \;
find . -mtime +10
xargs rm
find . -inum $inum -exec rm {} \;
find /myfiles -atime +30 -exec rm {} ;
find . -name "* *" -exec rm -f {} \;
find . -name '*[+{;"\\=?~()<>&*
$ ]*' -maxdepth 0 -exec rm -f '{}' \;
find /home -name Trash -exec rm {} \;
find /logs -type f -mtime +5 -exec rm {} \;
find . -name "*.pdf" -maxdepth 1 -print0
xargs -0 rm
find * -perm 777 -exec chmod 770 {} \;
find /tmp -maxdepth 1 -type f -delete
rev urllist.txt
cut -d. -f 2-
rev
head -$(gcalctool -s $(cat file
wc -l)-N) file.txt
head --lines=-N file.txt
tac filename
sed 4,6d
tac
find . -name "*.png" -print0
sed 'p;s/\.png/\.jpg/'
xargs -0 -n2 mv
find . -type f -iname “*.mp3″ -exec rename “s/ /_/g” {} \;
find . -name "*.svg.png" -print0
sed 's/.svg.png//g'
xargs -0 -I namePrefix mv namePrefix.svg.png namePrefix.png
find -name "*.txt" -exec mv {} `basename {} .htm`.html \;
find . -name '*.andnav' -exec sh -c 'mv "$0" "${0%.andnav}.tile"' {} \;z
find . -name "*.htm" -exec mv '{}' '{}l' \;
find -name ‘*exp_to_find_in_folders*’ -exec rename “s/exp_to_find_for_replacement/exp_to_replace/” {} \;
find .
xargs perl -p -i.old -e 's/oldstring/newstring/g'
find . -type f -exec perl -i -pe 's/something/another/g' {} \;
find /path/to/start/from/ -type f
xargs perl -pi -e 's/applicationX/applicationY/g'
find . -type f -print0
xargs -0 sed -i 's/Application/whatever/g'
find /home/nobody/public_html -type f -name .htaccess -exec replace "php_admin_flag" "#php_admin_flag" -- {} \;
find ./ -exec sed -i 's/apple/orange/g' {} \;
find ./ -type f -exec sed -i -e 's/apple/orange/g' {} \;
find . -type f -exec sed -i 's/foo/bar/g' {} +
find . -type f -name "*baz*" -exec sed -i 's/foo/bar/g' {} +
find . -type f -executable -exec sed -i 's/foo/bar/g' {} +
tac infile.txt
sed "s/a/c/; ta ; b ; :a ; N ; ba"
tac
tac
sed '0,/a/ s/a/c/'
tac
tac file
awk '/a/ && !seen {sub(/a/, "c"); seen=1} 1'
tac
tac file
sed '/a/ {s//c/; :loop; n; b loop}'
tac
tac file
sed '2 s/,$//'
tac
find . -iname '*.jpg' -print0
xargs -I{} -0 -r convert -resize 300x300 {} $outdir/{}
find . ! -path '*bar*' -print
find / -newerct '1 minute ago' -print
find . -mnewer poop
head -c 100 file
tac -s "," parse.txt > newparse.txt
tac filename
awk '{for (i=NF; i>1; i--) printf("%s ",$i); printf("%s\n",$1)}'
tac filename
perl -lane 'print join(" ", reverse(@F))'
echo "a,b,c"
tr '\n' ','
tac -s ","
sed 's/,$/\n/'
tac a.txt > b.txt
su $username -c tar xzvf ..
"your_command"
less
su -c "dbca -silent -createDatabase -templateName General_Purpose.dbc -gdbName qualidade -sysPassword password -systemPassword password -scriptDest /u01/app/oracle/oradata/qualidade -characterSet WE8ISO8859P1" -s /bin/sh oracle
./hw
sleep 1000
su - jenkins -s /bin/bash
find /path -name 'pattern' -exec bash -c 'for file; do somebashstatement "$file"; done' -- {} +
screen bash --rcfile yourfile.rc
su -c 'bash --rcfile myfile'
su $USER -c "$WEB --quiet" &
su --session-command="${OBJECTDB_HOME}/bin/objectdb.sh start" $JAVA_USER
su - joe -c "/path/to/my_daemon & echo \$! > /tmp/su.joe.$$"
su - joe -c "/path/to/my_daemon 3>&- & echo \$! 1>&3" 3>/tmp/su.joe.$$
su - joe -c "/path/to/my_daemon > /some/output/file" &
su - postgres -c "/usr/bin/psql database -c \"SELECT 'DROP TABLE '
.... "
sudo su - -c "R -e \"install.packages('shiny', repos='http://cran.rstudio.com/')\""
su -c "cd /home/$USERNAME/$PROJECT ; svn update" -m "$USERNAME"
sudo -u username2 -H sh -c "cd /home/$USERNAME/$PROJECT; svn update"
echo password
su user1 -c 'command'
su - username command
su --login postgres --command "createdb $DBNAME"
su -c dnf install glibc.i686
su -l $USR -s /bin/bash -c "exec > >( logger -t $PRG ) 2>&1 ; cd $WKD; { $BIN $ARG & }; echo \$! > $PID "
su -s /bin/bash -c "set -a; \                     . /path/to/nullmailer-vars; \                     set +a; \                     /usr/sbin/logcheck" logcheck
su - jetty -c sh runProgram.sh
su user1 -c "ssh user1@192.168.1.2 \"awk '\\\$5==1{print \\\$3}' filename.log\""
uniq -c
sudo su elasticsearch -c './bin/elasticsearch -d --default.path.conf=/etc/elasticsearch'
su -s /bin/bash -c 'bash --rcfile <(echo "source ~/.bashrc; source myfile")'
su -c 'bash --rcfile myfile'
sudo su -c 'ls -hal /root/ > /root/test.out'
su -c 'source myfile; bash'
su apache -s /bin/ksh
find . -name "*.pl" -exec ls -ld {} \;
find . -name "*.pl" -exec ls -ld {} \;
su oracle -c "/home/oracle/database/runInstaller" &
su - jetty sh ./runprogram.sh
su - jetty ./runprogram.sh
su - USER_FOOBAR -c /PATH/TO/MY_APP &
su -cp filename.sh
find /path -name 'pattern' -exec bash -c 'somebashstatement "$1"' -- {} \;
find /path -name 'pattern' -exec somecommand {} +
find /path -name 'pattern' -exec somecommand {} \;
find . -name core -ok rm {} \;
oldalias=$(alias my_command
sed "s/^[^']*'//; s/'$//");
find / -name core -group mycomp -print -exec rm -f {} \; >> mycompcore
find $DBA/$ORACLE_SID/bdump/*.trc -mtime -1 -print >> /tmp/trace_list.lst
find /usr -type b -name backup -print
find /usr -type c -name backup -print
find . -atime 7 -print
find .  -ctime +7 -print
find / -links -2 -print
find /  -links 2 -print
find ./ -type f -exec grep https://www.ksknet.net {} \;
find . -regex ".*/my.*p.$" -a -not -regex ".*test.*"
find ./ -type f -name '*.html'
xargs sed -i '/^$/d
find . -type f -name "*.jpg"
find . -type f -name "*.jpg" -print0
xargs -0 rename "s/Image_200x200_(\d{3})/img/"
find . \( -iname "*.jpg" -o -iname "*.jpeg" -o -iname "*.png" \) -ls
awk '{total += $7} END {print total}'
find /home/you -iname "*.mp3" -daystart -type f -mtime 1
find /usr -follow -name '*.sh'
files=`find .`
find . -name test -prune -regex ".*/my.*p.$"
find . -name 'a(b*' -print
find . -regex ".*/my.*p.$"
find . -name test -prune -o -regex ".*/my.*p.$"
find /myfiles -name '*blue*'
grep ^malloc `find src/ -name '*.[ch]'`
find -name '*.undo' -exec wc -c {} +
tail -n 1
find -name '*.undo' -exec wc -c {} +
tail -n 1
cut -d' ' -f 1
find . -name "*.fq.gz"  -exec gunzip -c  '{}' ';'
fastqc  /dev/stdin
find / -name whatever -not -path "/10_Recommended*" -not -path "/export/repo/*"
find . -name "$pattern"
find /home/ -type f -newer /tmp/after -not -newer /tmp/before
find ./ -regex "./cmn-.\.flac"
find .cache/bower/ -name "message.txt"
xargs cat
find . -name \*.py
xargs grep some_function
find . -name “*.[php
PHP]” -print
xargs grep -HnT “specified string”
find / -name "*.log"
find / -xdev -name "*.log"
find ! -path "dir1" -iname "*.mp3"
find ! -path "dir1" ! -path "dir2" -iname "*.mp3"
find . -type d -name "cpp" -exec find {} -type f \;
DIR='find $HOME -type d -name $1
head 1'
find -name file -print
find -name file -quit
find $dir -type f -name $1 -exec getLine {} \;
find /path/to/dir -type f
sed -r 'p;s:.*/(.*)/.*:\1:'
xargs -n 2 sh -c 'sed -i "s/^/$1 /" $0'
find ./ -name somename.txt -exec sed -e '1i My new text here` {} \;
find project -type f -print
egrep '(\.[ch]
[Mm]akefile)$' > Include
find ~/junk  -name 'cart1' -exec mv {} ~/junk/A \;
find ~/junk -exec touch ~/junk/cart{1,2,3,4,5,6} {} \; 2> /dev/null
find . -name '*.py'
xargs grep some_function
find .
xargs grep <string-to-find>
find . -name "*.py" -type f -exec sh -c 'grep "something" <"$0" >"$0.txt"' {} \;
find . -name '*.py' -exec grep 'something' {} \; > output.txt
find . -name '*.py' -print0
xargs -0 grep 'something' > output.txt
find / -path excluded_path -prune -o -type f -name myfile -print
find /home/weedly -name myfile -type f -print
find . -name onlyme.sh -exec pwd \;
find . -name onlyme.sh -execdir pwd \;
find -name 'file_*' -follow -type f -exec zcat {} \;
agrep -dEOE 'grep'
find . -name "file_*" -follow -type f -print0
xargs -0 zcat
agrep -dEOE 'grep'
find . -type f -name "*.gz" -exec zgrep 'GET /foo' {} \;
find . -name '*.c'
xargs grep 'stdlib.h'
find /directory/containing/files -type f -print0
xargs -0 grep "test to search"
find . -name "*.c" -exec grep -ir "keyword" {} ";"
find . -type f \( -iname “*.c” \)
grep -i -r “keyword”
find . -type f -exec grep some_string {} \;
find . -exec grep chrome {} +
find . -exec grep chrome {} \;
find . -type f -exec grep 'needle' {} \;
find .
xargs grep 'chrome'
find . -type f -exec grep 'needle' {} \;
find . -exec grep -l foo {} +
find . -type f -exec grep -l 'needle' {} \;
find / -type f -exec grep -Hi 'the brown dog' {} +
find -name '*.[ch]'
xargs grep -E 'expr'
find . -name "*.java"
xargs grep "Stock"  find . -name "*.java"
xargs grep "Stock"  find . -name "*.java"
xargs grep "Stock"  find . -name "*.java"
xargs grep "Stock"  find . -name "*.java"
xargs grep "Stock"   find . -name "*.java"
xargs grep "Stock
find . -type f
xargs grep "text"
find . -name \*.php -type f -exec grep -Hn '$test' {} \+
wc -l
find . -name \*.php -type f -exec grep -Hn '$test' {} \;
wc -l
find . -name \*.php -type f -print0
xargs -0 -grep -Hn '$test'
wc -l
find . -name \*.php -type f -print0
xargs -0 -n1 grep -Hn '$test'
wc -l
find . -name \*.php -type f -exec grep -Hn '$test' {} \;
find . -name \*.php -type f -print0
xargs -0 -n1 grep -Hn '$test'
find . -name \*.php -type f -exec grep -Hn '$test' {} \+
find -maxdepth 1 -type f
xargs grep -F 'example'
find -type f -print0
xargs -r0 grep -F 'example'
find . -type f -exec grep -l linux {} \;
find / -type f -exec grep -i 'the brown dog' {} +;
find . -type f -name "*.sh" -exec grep -l landoflinux {} \;
find . -type f -name "*.sh" -exec grep -il landoflinux {} \;
find . -name "*.cpp" -exec dirname {} +
sort -u
find . -name "*.cpp"
while read f; do dirname "$f" ; done
sort -u
find . -name "*.cpp" -exec dirname {} \;
sort -u
find . -name '*.cpp'
sed -e 's/\/[^/]*$//'
sort
uniq
find . -name '*.tif ' -print
find / -name '*.tif ' –print
find /opt/chromium/src -wholename '*/.svn' -prune -o -type f -regex ".*\.\(c\
cc\
h\
js\)" -print > CSRC.LST
find . -type f -name "*.scala" -exec grep -B5 -A10 'null' {} \;
find /home -type d -empty
find /volume1/uploads -name "*.mkv"
find /your/path/ -type f -name "*.html"
xargs zip all_html_files.zip
find . -type f -name "*html" -exec perl -pi -e 's
pibeta.psi.ch/~stefan
midas.psi.ch/~stefan
g' {} ;
find . -name "*.html" -print
zip all-html-files.zip -@
find . -type f -name "*.html"
zip -j all-html-files -@
find /home/you -iname "*.mp3" -atime 10 -type -f
find . -type f -maxdepth 1 -not -empty -print0
xargs -0i cp /dev/null {}
find /home/you -iname "*.pdf" -atime -60 -type -f
find /nas/projects/mgmt/scripts/perl -mtime 1 -daystart -iname "*.pl"
find /home/mine -iname "*.png" -exec sh -c 'cp $0 /home/mine/pngcoppies/copy/$0' {} \;
find . -type f \( -iname "*.c" -or -iname "*.asm" \)
find . -type f -print0
xargs -0 grep -cH ''
awk -F: '$2==16'
find . -type f -print0
xargs -0 grep -cH '.'
grep ':16$'
find . -type f -print
xargs -L1 wc -l
find . -type f -print0
xargs -0L1 wc -l
find -name *.tar.gz
xargs rm -f <<< $(find . -name ".txt")
find /path/to/inputfiles -name "*.txt" -exec /path/to/myprogram.sh {} \; > Out.txt
find /home -name *.txt
find /home/david -mmin -10 -name '*.c'
find . -name "*.pyc"
xargs -i rm '{}
find . -name *.o -perm 664 -print
find /var/www/vhosts/*/httpdocs -type f \( -iwholename '*/libraries/joomla/version.php' -o -iwholename '*/libraries/cms/version.php' -o -iwholename '*/libraries/cms/version/version.php' \) -print0 -exec perl -e 'while (<>) { $release = $1 if m/ \$RELEASE\s+= .([\d.]+).;/; $dev = $1 if m/ \$DEV_LEVEL\s+= .(\d+).;/; } print qq( = $release.$dev\n);' {} \;
find . -name \*.c -print
find / -iname "*.mp3" -type d -exec /bin/mv {} /mnt/mp3 \;
find /stuff -type d -exec script.py {} +
find /stuff -maxdepth 1 -type d -exec script.py {} +
find /stuff -type d -printf '%P\0'
xargs -0 script.py
find /stuff/* -type d -maxdepth 1 -print0
xargs -0 script.py
script.py $(find /stuff/* -type d)
find . -mindepth 1 -maxdepth 1 -type d
find . -type d -execdir sh -c 'printf "%s/%s\n" "$PWD" "$0"' {} \;
dirs=($(find . -type d))
find . -maxdepth 1 -type d \( ! -name . \) -exec bash -c "cd '{}'
pwd" \;
find . -name 'm?' -type d -exec ./fixmbox {} +
find . -size +10k -exec ls -lS {} \+
head -1
find . -name '*.bak' -type f -atime +30 -exec csh -c 'test -s $1:r
rm $1' '{}' ;
find /store/01 -name "*.fits"
find . -type f -print
\ egrep  '/,
%$
~$
\.old$
SCCS
/core$
\.o$
\.orig$' >>Exclude
find project ! -type d -print
egrep '/,
%$
~$
\.old$
SCCS
/core$
\.o$
\.orig$' > Exclude
founddata=`find . -name "filename including space" -print0`
find . -type f -exec bash -c 'echo ${1:0:5}' funcname {} \;
find .
awk '{printf "%s ", $0}'
find .
paste -sd " "
find . -name "file2015-0*" -exec mv {} .. \;
find . -name "file2015-0*"
head -400
xargs -I filename mv  filename
find . -user xuser1 -exec chown -R user2 {} \;
find . -mtime -1
find . -size +10000c -size -32000c -print
find . -group staff -perm -2000 -print
find . \( -name a.out -o -name '*.o' -o -name 'core' \) -exec rm {} \;
find -type d -printf '%d\t%P\n'
sort -r -nk1
cut -f2-
find . -size +10k -exec ls -ls {} \+
sort -n
tail -1
find -mtime +7 -print > found.lst
find . -name "filename including space" -print0
xargs -0 rm -rdf
find . -name "filename including space" -print0
tee my_teed_file
xargs -0 ls -aldF > log.txt
find . -name '*-GHBAG-*' -exec bash -c 'echo mv $0 ${0/GHBAG/stream-agg}' {} \;
find . -name 'my*'
var="$(find . -name 'gen*.bt2')"
find / \( -perm 2000 -o -perm 4000 \) -print
diff - files.secure
find /data/images -newer /tmp/foo
find /data/images -type f -newer /tmp/start -not -newer /tmp/end
find /data/images -type f -newer /tmp/start -not -newer /tmp/end > output.txt
find /home -perm 1553
find /home/user1 -name "*.bin"
find /usr/bin -type f -atime +100
find . -mtime +180 -exec du -sh {} \;
find . -mtime +180 -exec du -ks {} \;
cut -f1
awk '{total=total+$1}END{print total/1024}'
find ~/tmp -type f -mtime 0 -exec du -ks {} \;
cut -f1
awk '{total=total+$1}END{print total/1024}'
find -type f -name dummy
find / -type f -name dummy 2>/dev/null
find . -name foo.txt -print0
xargs -0  -I{} mv {} /some/new/location/{}
find /mnt/hda1/zdjecia/test1/ -iname “*.jpg” -type f -exec cp {} -rv /mnt/hda1/test{} ‘;’
find /mnt/hda1/zdjecia/test1/ -type f -iname ‘*.jpg’ -printf ‘%’h’\'”0″
xargs -0 -I ‘{}’ mkdir -p /mnt/hda1/test/{} \;
find -L /target -type l
while read -r file; do echo $file is orphaned; done
find /var/log -name '*.log'
tar cv --files-from=-
bzip2 > log.tar.bz2
find /apps -xdev -name "*.log" -type f -mtime +60
xargs rm
$ find . -name "*mp3" -print0
xargs -0 mid3iconv -e EUR-KR -d
$ find . -name "*mp3" -print0
xargs -0 mid3iconv -e <source-encoding> -d
find / -iname "*.mp3" -exec mv {} /mnt/mp3 \;
find /home/you -iname “*.mp3” -atime 01 -type -f
find . -maxdepth 1 -name '[!.]*' -printf 'Name: %16f Size: %6s\n'
find /nas/projects/mgmt/scripts/perl -mtime 8 -mtime -10 -daystart -iname "*.pl"
find . -name \*.php -type f -exec php -l {} \;
find /home/mywebsite -type f -name "*.php" -ctime -30
find . -type f -exec cat {} \;
find /home -type f -perm 0777 -print
find /my/source/directory -ctime -2 -type f -printf "%P\n"
xargs -IFILE rsync -avR /my/./source/directory/FILE /my/dest/directory/
find /etc/ -type f -mtime -1
find . -type f
egrep '(sdw
sdc
sdd)$' > list_1
find folder -type f -print0
xargs -0 file --media-type
egrep 'image
video'
cut -f1 -d :
tr '\n' '\0'
find . -name 'my*' -type f
find /var/www -type f -name «access.log*» -size +100M
find / -iname “*.mp3″ -type f -print0
xargs -0 -I ‘{}’ mkdir -p /mnt/mp3/`basename {}`
find / -iname "*.mp3" -type f -exec /bin/mv {} /mnt/mp3 \;
find / -iname "*.mp3" -type f -print0
xargs -0 -I '{}' /bin/mv "{}" /mnt/mp3/
find / -iname "*.mp3" -type f
xargs -I '{}' mv {} /mnt/mp3
find / -iname "*.mp3" -type f -print0
xargs -0 -I '{}' /usr/bin/rsync -avR "{}" /mnt/mp3/
find / -xdev -name "*.rpm"
find /target/dir -type l ! -exec test -e {} \; -exec rm {} \;
find /target/dir -type l ! -exec test -e {} \; -print
find . -name "*.txt" -execdir ls -la {} ";"
find /foo/ -name "*.txt" -exec rm -v {} \;
find /home/calvin/ -name “*.txt” > /tmp/search.log
find . -name "*.xml" -exec sh -c 'echo "cp $0 someWhereElse/$0"' {} \;
find . -name "*.xml" -exec echo {} \;
I'm assuming you only want to zip files that match names in $Namese. In your script, try replacing the find command with:  export Namese  find /var/tmp/ -type f -name '*.xml'
find / -path /usr -prune -o \( -name rsync -o -name bash \) -print 2>/dev/null
find / -path /usr/share -prune -o \( -name rsync -o -name bash \) -print 2>/dev/nul
find . -print
grep ?i dbmspool.sql
find ./test -type d -name '[0-9][0-9][0-9][0-9][0-9]'
find ./test -regextype posix-egrep -type d -regex '.*/[0-9]{5}$'
find ~/junk  -name 'cart[1-6]' -exec ls -l {} \; 2> /dev/null
find ~/junk  -name 'cart[4-6]' -exec rm {}  \;
find / -iname '*python*'
find / -name '*python*'
find … -print0
xargs -0 -n1 invalid_command
find . -name "S1A*1S*SAFE"
find ./ -regex '.*\..*'
find -type f -name '*.au'
find -type f -name '*.au' > names.txt
find . -name '[mM][yY][fF][iI][lL][eE]*'
find . -iname 'MyFile*'
find . -iname "WSFY321.c"
find /work -name 'memo*' -user ann -print
find . -perm -444 -perm /222 ! -perm /111
find . -perm -a+r -perm /a+w ! -perm /a+x
find . -perm -220
find . -perm -g+w,u+w
find . -perm /220
find . -perm /u+w,g+w
find . -perm /u=w,g=w
find /usr -name temp -print
find Cam2/2013* -name "*.jpg" -print0
xargs -0 cat
ffmpeg -f image2pipe -framerate 30 -vcodec mjpeg -i - -vcodec libx264 -profile:v baseline -level 3.0 -movflags +faststart -crf 19 -pix_fmt yuv420p -r 30 "Cam2-2013-30fps-19crf.mp4"
find /mp3collection -name '*.mp3' -size -5000k
find . -name photoA.jpg photoB.jpg photoC.jpg
find ./ -type f -name "pattern" ! -path "excluded path" ! -path "excluded path"
find /users/tom -name "*.pl"
find -name '*.php' -exec grep -iq "fincken" {} \; -exec grep -iq "TODO" {} \; -print
find ./ -type f -name "*" ! -path "./.*" ! -path "./*/.*"
find / -name myfile -type f -print
find / -name myfile -type f -print 2> /dev/null
find . -type l -exec readlink -f '{}' \;
grep -v "^`readlink -f ${PWD}`"
find /tmp -name '*.swp' -exec rm {} \;
find . -type f \( -iname "*.txt" ! -perm -o=w \)
find . -type f \( -iname "*.txt" -not -perm -o=w \)
find . -type f \( -iname "*.txt" -and -perm -o=w \)
find /home/user1 -name '*.txt'
xargs cp -av --target-directory=/home/backup/ --parents
find /home/you -iname "*.txt" -mtime -60 -exec cat {} \;
find /home/hobbes/ /home/calvin/ -name “*.txt”
find /home/hobbes/ /home/calvin/ -name “*.txt” 2>/dev/null
find . -name .git -type d -execdir git pull -v ';'
find . -name config -type d
cd `find . -name "config"`
cd $(find . -name config -type d
sed 1q)
find /etc -name mysql -type d
find / -name mysql -type d
find / -type d -name "ora10"
find . -type d -name 'uploads' -print0
xargs -0 chmod -R 755
find . -type d -name 'uploads'
while read d; do chmod -R 755 "$d"; done
find / -type d -name "ora10*"
find /home -type d -name testdir
find . -type d -name aa
cd /nfs//office/ && find . -name '.user.log'
xargs -I{} dirname {}
xargs -I{} dirname {}
find /nfs/office -name .user.log -print
find . -name abc -or -type d
find kat -name dok.txt -exec bash -c 'echo -e "\nAutor: Jan Kowalski" >> {}' \;
find -name file -fprint file
find . -path ./.git  -prune -o -name file  -print
find / -name file1
find /path -name file_name
find / -name filename
find / -name foo.txt
find /home/mywebsite -type f -name "foobar.txt"
find /data/SpoolIn -name job.history
xargs grep -o -m 1 -h 'FAIL\
ABOR'
sort
uniq -c
find . -name myfile
& grep -v 'Permission denied'
find ~ -name myletter.doc -print
find ~ -name "name_to_find"
find . -name "process.txt"
find . -iname 'process.txt' -print
find / -name "process.txt"
find / -iname 'process.txt' -print
find / -name 'program.c' 2>errors.txt
find /usr -iname centos
find /work -name chapter1
find / -name filename
find . -name foo
xargs ls -tl
find -name foo.txt -execdir vim '{}' ';'
find / -name foo.txt
find / -name ”*filename*”
find /data/SpoolIn -name job.history
find /home/calvin/ -iname “picasso”
find . -name test
find /home /opt -name test.txt
find -name test2
find . -name filename.txt
find . -iname filename.txt
find /home -name filename.txt
find . -name foo.txt
find -name foo.txt -execdir rename 's/\.txt$/.xml/' '{}' ';'
find . -name 'kt[0-9] '
find . -path ./proc -prune -or -path ./sys -prune -or -path ./run -prune  -or -iname '*start*' -print
find /usr -name temp -atime +7 -print
find "Test Folder" -type d -name '.dummy' -delete
find "Test Folder" -type d -name .dummy -exec rm -rf \"{}\" \;
find -depth "Test Folder" -type d -name .dummy -exec rm -rf \{\} \;
find -name “*.xml” -exec grep -l “slc02oxm.us.oracle.com” {} \;
find /etc/ -iname "*"
xargs grep '192.168.1.5'
find . -type f -name \*
grep tgt/etc/file1 tgt/etc/file2 tgt/etc/file3
find / -type f -print0
xargs -0 grep -i pattern
find / -type f -iname "Dateiname"
find /home -name foo.bar -type f -exec rm -f "{}" ';'
find .  \( -name work -o -name home \)  -prune -o -name myfile -type f -print
find /root/ -name 'work' -prune -o -name myfile -type f -print
find /root/ -path '/root/work' -prune -o -name myfile -type f -print
find / \( -name 10_Recommended* -o -name share \) -prune -o -type f \( -name firefox -0 -name thunderbird -0 -name seamonkey \) -print 2>/dev/null
find / \( -name 10_Recommended* -o -name share \) -prune -o -type f -name java -print 2>/dev/null
find / \( -path /export -o -path "/*Recommended*" \) -prune -o \   \( -name iceweasel -o -name thunderbird -type f \) -print 2>/dev/null
find . -type f -iname ‘HSTD*’ -daystart -mtime 1 -exec cp {} /path/to new/dir/ \;
cd /nfs/office/ &&  find . -name 'file.txt'
sed -r 's
(\./([^/]*/)?).*
\1
'
find /etc -type f
xargs grep -l -i "damian"
find /path/to/dir -type f -print0
xargs -0 grep -l "foo"
find /path/to/dir -type f
xargs grep -l "foo"
find /path/to/dir/ -type f -name "file-pattern" -print0
xargs -I {} -0 grep -l "foo" "{}"
find /mycool/project/ -type f -name "*.py" -print0
xargs -I {} -0 grep -H --color "methodNameHere" "{}"
find . -iname "*notes*"
xargs grep -i mysql
find . -iname "*notes*" -print0
xargs -I{} -0 grep -i mysql "{}"
find /etc/ -type f -name "*.conf" -print0
xargs -I {} -0 grep "nameserver" "{}"
find /etc/ -iname "*" -type f -print0
xargs -0 grep -H "nameserver"
find /book -print
xargs grep '[Nn] utshell'
find . -name '*bills*' -exec grep -H "put" {} \;
find . -type f -exec grep -i “redeem reward” {} \; -print
find . -type f -exec grep -i “redeem reward” {} \; -print 2>/dev/null
find . -type f
xargs grep -l "search-pattern"
find ./ -exec grep -q 'slrn' '{}' \; -print
find $HOME/html/andrews-corner -exec grep -q 'slrn' '{}' \; -print
find ~jsmith -exec grep LOG '{}' /dev/null \; -print
find / -type f -exec grep bananas {} \; -print
find . -name "*.bash"
xargs grep "echo"
find . -name "*.xml" -exec grep "ERROR" /dev/null '{}' \+
find . -name "*.js" -exec grep -iH foo {} \;
grep -iH foo `find . -name "*.js"`
find /tmp -type f -name ‘*.txt*’
sed -e ‘s/.*/\”&\”/’
xargs -n 1 grep -l hello
sed -e ‘s/.*/\”&\”/’
xargs -n 1 rm -f
find . -iname '*py' -exec grep "text" {} \;
find /home/*/public_html/ -type f -iwholename "*/modules/system/system.info" -exec grep -H "version = \"" {} \;
find ~/mail -type f
xargs grep "Linux"
find /PROD -type d -exec sh -c 'cd "{}"
for f in *.json; do /tmp/test.py "$f"; done' \;
find . -type f -exec grep -l "word" {} +
find .  -size -10c -print
find . -name Chapter1 -type f
find . -type d -name test
find . -type f -name test
find . -type f -name "*.txt" -exec printf "File: %s\n" {} \;
find . -name myletter.doc -print
find . -name test
find . -iname test
find . -name 'myletter*' -print
sudo find / ( -name firefox -o -name thunderbird -o -name seamonkey \) -type f 2>/dev/null
grep -v '(10_Recommended
repo)'
find /home/ -name monfichier
find /usr -type f -name backup -print
find / -name core -print
xargs echo > /tmp/core.log
find / -name jan92.rpt -print
find "$HOME/" -name myfile.txt -print
find . -name myfile.txt -print
find Lib/ -name '*.c' -print0
xargs -0 grep ^PyErr
find . -type f -print0
xargs -0 -e grep -nH -e MySearchStr
find ./ -type f -exec sed -i '' 's#NEEDLE#REPLACEMENT#' *.php {} \;
find /usr /home -name Chapter1.txt -type f
find /usr -name "Chapter*" -type f
find /usr/local -name "*.html" -type f
find / -name Chapter1 -type f
find / -name Chapter1 -type f -print
find / -name Chapter1 -type f
find / -name Chapter1 -type f -print
find / -name *.mp3
curl -X GET -H "Authorization: Token wef4fwef54te4t5teerdfgghrtgdg53" http://testsite/api/
python -mjson.tool
curl -v --get --data-urlencode "access_token=$(cat .fb_access_token)" https://graph.facebook.com/me/feed
myVariable=$(env
grep VARIABLE_NAME
grep -oe '[^=]*$');
echo "* * * * * touch $(pwd)/washere1"
crontab
echo "30 * * * * touch $(pwd)/washere2"
crontab
alias ..='cd ..'
alias :='xargs -I{}'
alias -g X="
cut -d' ' -f2"
alias -g X2="
cut -d' ' -f2"
alias c1="awk '{print \$1}'"
alias cats='konqueror http:'//icanhazcheezburger.com''
alias cd-='cd $(history -p !!:1)'
alias cd-='cd ${${(z)$(fc -l -1)}[3]}'
alias cdl='cd -- "$(ls -t
head -n 1)"'
alias clean='rm -rf "#"* "."*~ *~ *.bak *.dvi *.aux *.log'
alias cleanup='rm -Rf -- foo bar baz'
alias cleanup='rm -Rf `pwd`/{foo,bar,baz}'
alias current='cd $(cur -g)'
alias devn='cat > /dev/null'
alias dosetit='eval `setit-sh`'
alias ff=find . -name $1
alias foo=$'echo A \'*\' is born at $(date)'
alias foo=BAR=baz
alias foo="printf"
alias foo='BAR=baz'
alias git-root='if [ "`git rev-parse --show-cdup`" != "" ]; then cd `git rev-parse --show-cdup`; fi'
alias git-root='cd $(git rev-parse --show-cdup)'
alias go='GOPATH=$(infer-gopath.sh) go'
alias go='ssh $(pbpaste) -l pete'
alias h='history'
alias histgrep="history
grep"
alias iTMSTransporter='`xcode-select --print-path`/../Applications/Application\ Loader.app/Contents/MacOS/itms/bin/iTMSTransporter'
alias j7='JAVA_HOME=`/usr/libexec/java_home -v 1.7`'
alias killaf="kill -9 `psu
grep MF1pp
grep -v grep
awk '{print $2}'`"
alias logspace="find /apps/ /opt/ -type f -size +100M -exec ls -lh {} \;
awk '{print $5, $9 }'"
alias logspace='find /apps/ /opt/ -type f -size +100M -exec ls -lh {} \;
awk '\''{print $5, $9 }'\'''
alias ls='ls -lrta'
alias la='ls -a -l'
alias lvim="vim -c \"normal '0\""
alias m="mplayer -novideo -loop 0"
alias memu="ps -u $(whoami) -o pid,rss,command
awk '{print \$0}{sum+=\$2} END {print \"Total\", sum/1024, \"MB\"}'"
alias mkcd='_(){ mkdir -pv $1; cd $1; }; _'
alias mkcd='_(){ mkdir $1; cd $1; }; _'
alias mkdir=¨mkdir -p¨
alias my_command="$oldalias --fail-if-command-contains=$bad_string"
alias my_command="$oldalias -option 3"
alias mycd="cd `echo $1`"
alias no=ls -f
alias prettify_json=php -E '$o = json_decode($argn); print json_encode($o, JSON_PRETTY_PRINT);'
alias prettyjson='python -m json.tool'
alias -s ps='screen -d -m okular'
alias psgrep="ps -ef
grep"
alias pwd='echo -n $(/bin/pwd)
pbcopy'
alias pwd='echo -n `pwd`
pbcopy'
alias pwd='/bin/pwd
pbcopy'
alias py='python2.5 -O'
alias restart_rails='kill -9 `cat tmp/pids/server.pid`; rails server -d'
alias s='it=$($(history
tail -2
head -1
cut -d" " -f4-))'
alias te='tail -f /var/log/apache2/error_log
perl -ne '\''...'\'''
alias unix="date +%s"
alias unix='echo $(date +%s)'
alias unsetvar='source /your/path/to/the/script/unsetvar'
alias vimrc='$EDITOR ~/.vimrc'
alias -g vv="$(date)"
alias webshare='python -m SimpleHTTPServer'
alias your_env='source ~/scripts/your_env.sh'
alias jump="cd $(myscript.sh)"
alias 12np='ssh mydomain\\stephencheng@userxyz@host.com'
alias -s py=$EDITOR
cmdstr=$(alias $aliascmd
cut -d"'" -f2
xargs)
uname_m=`uname -m`
r="$(uname -r)"
find . -maxdepth 1 -name \*.txt -print0
grep -cz .
find ~/src -type f \( -iname '*.cpp' -or -iname '*.h' -or -iname '*.c' -or -iname '*.hpp' \) -exec echo {} \;
find . -type d \( -name media -o -name images -o -name backups \) -prune -o -print
find . -path './media' -prune -o -path './images' -prune -o -path './backups' -prune -o -print
find /usr/tom
egrep '*.pl
*.pm'
find .
find . -print
find . -user <userid>
find / -print0
perl -ln0e 'print "found $_" if -p'
find * -prune -type f -size +0c -print
find /home -type f -name '*.aac'
find . -maxdepth 1 -type f -name '*.flac'
find . -type d
find .
find . -type d -name '.git*' -prune -o -type f -print
find . -name ‘*ITM*’
find / -size +1.1G
find / -size +100M
find /etc -mtime -1
find /home -type f -name '*.mp3'
find . -type f -print0
find /home/user/demo -type f -print
ps aux
find . -type f -size +50000k
xargs du -sh
find / -type f -size +100M
xargs du -sh
find . -mtime 0 -print
find / -user test1 -exec du -sm {} \;
awk '{s+=$1}END{print s}'
su -l builder
su -
sleep 1
sleep 10
sleep `10`
sleep 5
sleep 500
sleep $(expr `date -d "03/21/2014 12:30" +%s` - `date +%s`)
find $DiskName -type f -mtime -3 -size +5000 -exec ls -ld {} \; 2>/dev/null
sort -n -k 5.1,5 >> $TMPFILE
find .  -name "*.txt" -type f -daystart -mtime -91 -mtime +2
xargs cat
sort
uniq
find / -type f -printf "\n%AD %AT %p"
head -n 11
sort -k1.8n -k1.1nr -k1
find . -type f -exec ls -s {} \;
sort -n -r
head -10
find . -type f -exec ls -s {} \;
sort -n
head -10
find bills -type f -execdir sort -o '{}.sorted' '{}' ';'
find bills -type f
xargs -I XX sort -o XX.sorted XX
split -l 100 "$SOURCE_FILE"
split -l 600 list.txt
find /dev/shm/split/ -type f -exec split -l 1000 {} {} \;
find posns -type f -exec split -l 10000 {} \;
tar --one-file-system -czv /home
split -b 4000m - /media/DRIVENAME/BACKUPNAME.tgz
tar czf - www
split -b 1073741824 - www-backup.tar.
cat file1 file2 ... file40000
split -n r/1445 -d - outputprefix
tail -n +2 file.txt
split -l 4 - split_
cat inputfile
grep "^t\:"
split -l 200
cat *.txt
tail -n +1001
split --lines=1000
split -a 5 $file
split --number=l/6 ${fspec} xyzzy.
split -l9 your_file
split -n 1000000 /etc/gconf/schemas/gnome-terminal.schemas
split -n 1000 /usr/bin/firefox
split -n 100000 /usr/bin/gcc
split --bytes=1500000000 abc.txt abc
split -l 100 date.csv
split --numeric-suffixes=1 --additional-suffix=.csv -l100 data.csv data_
split --lines=1 --suffix-length=5 input.txt output.
split --lines=30000000 --numeric-suffixes --suffix-length=2 t.txt t
ls
split -l 500 - outputXYZ.
sed 's/\(.....\)\(.....\)/\1\n\2/' input_file
split -l 2000000 - out-prefix-
sed 's/3d3d/\n&/2g' temp
split -dl1 - temp
tar [your params]
split -b 500m - output_prefix
split --lines=50000 /path/to/large/file /path/to/output/file/prefix
split -n2 infile
split -l 50000000 --filter=./filter.sh 2011.psv
split -C 100m -d data.tsv data.tsv.
split -a4 -d -l100000 hugefile.txt part.
sed 100q datafile
split -C 1700 -
ping -c 25 google.com
tee >(split -d -b 100000 - /home/user/myLogFile.log)
zcat biglogfile.gz
split -l500000 --filter='gzip > $FILE.gz'
ssh -l buck hostname
ssh buck@hostname
ssh myusername@ssh.myhost.net "mkdir -p $2"
ssh $(vagrant ssh-config
awk 'NR>1 {print " -o "$1"="$2}') localhost
ssh `vagrant ssh-config
tail -8
perl -pe 's/^\s+/-o@/; s/\s/\=/;s/@/ /;s/\n/ /'` vagrant@localhost
vagrant ssh-config --host default
ssh -F /dev/stdin default
ssh vagrant@127.0.0.1 -p 2222 -o Compression=yes -o DSAAuthentication=yes -o LogLevel=FATAL -o StrictHostKeyChecking=no -o UserKnownHostsFile=/dev/null -o IdentitiesOnly=yes -i ~/.vagrant.d/less_insecure_private_key -o ForwardAgent=yes
ssh $(vagrant ssh-config HOST
sed '/^[[:space:]]*$/d'
awk 'NR>1 {print " -o "$1"="$2}') localhost
ssh -p 10022 localhost
ssh -p 4444 localhost
sleep 100
sleep 200 &
find . -wholename './src/emacs' -prune -o -print
find . -wholename './src/emacs' -prune , -print
find . -wholename './src/emacs' -prune -print -o -print
screen -Rd
ABSOLUTE_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")"
pwd)/$(basename "${BASH_SOURCE[0]}")"
DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )"
pwd )"
su username
su - jenkins
find /path/to/files -exec truncate.sh {} \;
find . -exec program {} +
find . -ok tar rvf backup {} \;
find . -type f -name "*.java"
xargs tar cvf myfile.tar
diff --brief <(awk '{print $2}' A) <(tac B
awk '{print $2}')
find . -type f -iname '*.mp3' -exec rename '/ /_/'  {} \;
find /path/to/dir -name '*.gz' -exec zgrep -- 'pattern' {} +
find / -name '#*' -atime +7 -print
xargs rm
find -name '*.zip'
xargs -n 1 unzip
find . -iname '*.jar' -printf "unzip -c %p
grep -q '<stringWithOrWithoutSpacesToFind>' && echo %p\n"
sh
find /u/netinst -print
xargs chmod 500
find . -name '*.php' -exec chmod 755 {} \; > logfile.txt
find . -name '*.php' -exec chmod 755 {} \;
tee logfile.txt
find folder_name -type d -exec chmod 775 ‘{}’ \;
find . -name "*.txt" -exec echo {} \; -exec grep banana {} \;
find . -name "*.txt" \( -exec echo {} \; -o -exec true \; \) -exec grep banana {} \;
find ./ -type f \( -iname \*.jpg -o -iname \*.png \)
find . *
grep -P "[a-f0-9\-]{36}\.jpg"
find . -regextype posix-egrep -regex '\./[a-f0-9\-]{36}\.jpg'
find . -regextype sed -regex ".*/[a-f0-9\-]\{36\}\.jpg"
find . ... -exec cat {} \; -exec echo \;
mkdir -pv /tmp/boostinst
man find
echo "hello `sleep 2 &`"
inotifywait -e attrib target-directory
bind -m vi-insert '"{" "\C-v{}\ei"'
